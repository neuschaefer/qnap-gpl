<chapter><title>Controlling Multiple UPSes on one Machine</title>

<para>You may want to use your server to control multiple UPSes. This
is possible by proper configuration and by running one copy of
<application>apcupsd</application> for each UPS to be
controlled (recall the <xref linkend='configtypes'/>).</para>

<sect1><title>Configuration</title>

<para>The way to accomplish the above is to ensure that none of the
critical files used by each of the two copies of
<application>apcupsd</application> are the same. By using suitable
configuration options, this is possible.</para>

<sect2><title>The First Copy of <application>apcupsd</application></title>

<para>For example, assuming you have SmartUPSes in both cases, to
configure and install the first copy of
<application>apcupsd</application>, which controls a UPS and Computer
A, one could use the following configuration:</para>

<programlisting>
./configure \
  --prefix=/usr \
  --sbindir=/sbin \
  --with-cgi-bin=/home/http/cgi-bin \
  --enable-cgi \
  --with-css-dir=/home/http/css \
  --with-log-dir=/etc/apcupsd \
  --with-serial-dev=/dev/ttyS0 \
  --enable-pthreads \
  --with-nis-port=3551 \
  --enable-powerflute 
</programlisting>

<para>This is pretty much a &quot;normal&quot; installation using many
of the defaults. Once built and installed, this would control the
first UPS and cause a shutdown of the system when the batteries are
low.  This copy of <application>apcupsd</application> will be started
and stopped automatically when the system is booted and halted.</para>

</sect2>
<sect2><title>The Second Copy of <application>apcupsd</application></title>

<para>To configure and install the second copy of
<application>apcupsd</application>, which controls the second UPS and
Computer B, you could use the following configuration:</para>

<programlisting>
./configure \
  --prefix=$HOME/apcupsd/bin \
  --sbindir=$HOME/apcupsd/bin \
  --enable-cgi \
  --with-cgi-bin=$HOME/apcupsd/bin \
  --with-log-dir=$HOME/apcupsd/bin \
  --with-pid-dir=$HOME/apcupsd/bin \
  --sysconfdir=$HOME/apcupsd/bin \
  --with-lock-dir=$HOME/apcupsd/bin \
  --with-pwrfail-dir=$HOME/apcupsd/bin \
  --with-serial-dev=/dev/ttyS1 \
  --enable-pthreads \
  --with-nis-port=7001 \
  --disable-install-distdir
</programlisting>

<para>Note, in this case, we use considerably more configuration options
to ensure that the system files are placed in a different directory
(<filename>$HOME/apcupsd/bin</filename>). We have also selected a different serial port
and a different NIS (Network Information Server) port. And finally,
we have used the <option>--disable-install-distdir</option> option, which
prevents <command>make install</command> from doing the final system
installation (i.e. the modification of the halt script) since this
was previously done.</para>

</sect2>
<sect2><title>Important Steps after Installation of the Second Copy</title>

<para>After the <command>make install</command> of the second copy of
<application>apcupsd</application> there are a number important steps
to complete. You must either remove or modify the file
<filename>$HOME/apcupsd/bin/apccontrol</filename>, so that it will not
shutdown Computer A when the battery of UPS 2 is low. One suggestion
is to copy <filename>examples/safe.apccontrol</filename> into
<filename>$HOME/apcupsd/bin/apccontrol</filename>. Alternatively, you
could edit the <filename>$HOME/apcupsd/bin/apccontrol</filename> and
delete all statements that attempt to shutdown the machine. Another
important step is to find a way to shutdown Computer B when UPS 2's
battery is low.  Probably the simplest way to do this is to edit
<filename>$HOME/apcupsd/bin/apcupsd.conf</filename> on Computer A so
that this second copy of <application>apcupsd</application> becomes a
network master. Then install a standard slave configuration on
Computer B. Please remember that if UPS 1's batteries are exhausted
before UPS 2's batteries, Computer B may not be properly shutdown. And
at the current time, there is no simple means to make the two copies
of <application>apcupsd</application> running on Computer A
communicate. Thus there are certain risks in such a
configuration. However, these configurations can be very useful for
powering electronic equipment and such.</para>

<para>If Computer B is vitally important, it would probably be better
to purchase a serial port card for it, or perhaps use a USB UPS. To
ensure that it is properly shutdown if Computer A goes down, you could
run a second copy of <application>apcupsd</application> on Computer B
as a slave connected to the main copy of
<application>apcupsd</application> on Computer A. Thus Computer B
would be running two slaves, one driven by the master controlling UPS
1 and the other by the master controlling UPS 2, and Computer B could
be shutdown by the first master that signaled it to do so.</para>
</sect2>
</sect1>
</chapter>
