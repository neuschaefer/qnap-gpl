# Makefile.in generated by automake 1.9.4 from Makefile.am.
# djmount/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $Id: Makefile.in,v 1.1.1.1 2006/08/27 20:13:19 charley Exp $
#
# Makefile.am for djmount
#
# (C) Copyright 2005 Rémi Turboult <r3mi@users.sourceforge.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#


SOURCES = $(djmount_SOURCES) $(test_cache_SOURCES) $(test_charset_SOURCES) $(test_device_SOURCES) $(test_ptr_array_SOURCES) $(test_string_SOURCES) $(test_upnp_SOURCES) $(test_vfs_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/djmount
pkglibdir = $(libdir)/djmount
pkgincludedir = $(includedir)/djmount
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-QNAP-linux-gnu
#am__append_1 = -I$(UPNP_TMPINC)
am__append_2 = $(LIBICONV)
bin_PROGRAMS = djmount$(EXEEXT)
noinst_PROGRAMS = test_upnp$(EXEEXT)
check_PROGRAMS = test_cache$(EXEEXT) test_charset$(EXEEXT) \
	test_device$(EXEEXT) test_ptr_array$(EXEEXT) \
	test_string$(EXEEXT) test_vfs$(EXEEXT)
am__append_3 = charset.c
#am__append_4 = charset_internal.c
#am__append_5 = $(UPNP_TMPHEADERS)
subdir = djmount
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/libupnp/m4/acx_pthread.m4 \
	$(top_srcdir)/libupnp/m4/ax_cflags_gcc_option.m4 \
	$(top_srcdir)/libupnp/m4/ax_cflags_warn_all.m4 \
	$(top_srcdir)/libupnp/m4/rt_bool_arg_enable.m4 \
	$(top_srcdir)/gl/m4/error.m4 $(top_srcdir)/gl/m4/exitfail.m4 \
	$(top_srcdir)/gl/m4/gnulib-comp.m4 $(top_srcdir)/gl/m4/hash.m4 \
	$(top_srcdir)/gl/m4/minmax.m4 $(top_srcdir)/gl/m4/stdbool.m4 \
	$(top_srcdir)/gl/m4/xalloc.m4 \
	$(top_srcdir)/m4/rt_package_find.m4 \
	$(top_srcdir)/m4/vl_lib_readline.m4 \
	$(top_srcdir)/talloc/talloc/config.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__djmount_SOURCES_DIST = log.c object.c service.c device.c \
	device_list.c didl_object.c media_file.c file_buffer.c \
	content_dir.c vfs.c djfs.c upnp_util.c string_util.c \
	xml_util.c ptr_array.c talloc_util.c cache.c charset.c \
	charset_internal.c fuse_main.c
am__objects_1 = charset.$(OBJEXT)
#am__objects_2 = charset_internal.$(OBJEXT)
am__objects_3 = log.$(OBJEXT) object.$(OBJEXT) service.$(OBJEXT) \
	device.$(OBJEXT) device_list.$(OBJEXT) didl_object.$(OBJEXT) \
	media_file.$(OBJEXT) file_buffer.$(OBJEXT) \
	content_dir.$(OBJEXT) vfs.$(OBJEXT) djfs.$(OBJEXT) \
	upnp_util.$(OBJEXT) string_util.$(OBJEXT) xml_util.$(OBJEXT) \
	ptr_array.$(OBJEXT) talloc_util.$(OBJEXT) cache.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
am_djmount_OBJECTS = $(am__objects_3) fuse_main.$(OBJEXT)
djmount_OBJECTS = $(am_djmount_OBJECTS)
djmount_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
djmount_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__test_cache_SOURCES_DIST = log.c object.c service.c device.c \
	device_list.c didl_object.c media_file.c file_buffer.c \
	content_dir.c vfs.c djfs.c upnp_util.c string_util.c \
	xml_util.c ptr_array.c talloc_util.c cache.c charset.c \
	charset_internal.c test_cache.c
am_test_cache_OBJECTS = $(am__objects_3) test_cache.$(OBJEXT)
test_cache_OBJECTS = $(am_test_cache_OBJECTS)
test_cache_LDADD = $(LDADD)
test_cache_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__test_charset_SOURCES_DIST = log.c object.c service.c device.c \
	device_list.c didl_object.c media_file.c file_buffer.c \
	content_dir.c vfs.c djfs.c upnp_util.c string_util.c \
	xml_util.c ptr_array.c talloc_util.c cache.c charset.c \
	charset_internal.c test_charset.c
am_test_charset_OBJECTS = $(am__objects_3) test_charset.$(OBJEXT)
test_charset_OBJECTS = $(am_test_charset_OBJECTS)
test_charset_LDADD = $(LDADD)
test_charset_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__test_device_SOURCES_DIST = log.c object.c service.c device.c \
	device_list.c didl_object.c media_file.c file_buffer.c \
	content_dir.c vfs.c djfs.c upnp_util.c string_util.c \
	xml_util.c ptr_array.c talloc_util.c cache.c charset.c \
	charset_internal.c test_device.c
am_test_device_OBJECTS = $(am__objects_3) test_device.$(OBJEXT)
test_device_OBJECTS = $(am_test_device_OBJECTS)
test_device_LDADD = $(LDADD)
test_device_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__test_ptr_array_SOURCES_DIST = log.c object.c service.c device.c \
	device_list.c didl_object.c media_file.c file_buffer.c \
	content_dir.c vfs.c djfs.c upnp_util.c string_util.c \
	xml_util.c ptr_array.c talloc_util.c cache.c charset.c \
	charset_internal.c test_ptr_array.c
am_test_ptr_array_OBJECTS = $(am__objects_3) test_ptr_array.$(OBJEXT)
test_ptr_array_OBJECTS = $(am_test_ptr_array_OBJECTS)
test_ptr_array_LDADD = $(LDADD)
test_ptr_array_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__test_string_SOURCES_DIST = log.c object.c service.c device.c \
	device_list.c didl_object.c media_file.c file_buffer.c \
	content_dir.c vfs.c djfs.c upnp_util.c string_util.c \
	xml_util.c ptr_array.c talloc_util.c cache.c charset.c \
	charset_internal.c test_string.c
am_test_string_OBJECTS = $(am__objects_3) test_string.$(OBJEXT)
test_string_OBJECTS = $(am_test_string_OBJECTS)
test_string_LDADD = $(LDADD)
test_string_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__test_upnp_SOURCES_DIST = log.c object.c service.c device.c \
	device_list.c didl_object.c media_file.c file_buffer.c \
	content_dir.c vfs.c djfs.c upnp_util.c string_util.c \
	xml_util.c ptr_array.c talloc_util.c cache.c charset.c \
	charset_internal.c test_upnp.c
am_test_upnp_OBJECTS = $(am__objects_3) test_upnp.$(OBJEXT)
test_upnp_OBJECTS = $(am_test_upnp_OBJECTS)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
test_upnp_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1)
am__test_vfs_SOURCES_DIST = log.c object.c service.c device.c \
	device_list.c didl_object.c media_file.c file_buffer.c \
	content_dir.c vfs.c djfs.c upnp_util.c string_util.c \
	xml_util.c ptr_array.c talloc_util.c cache.c charset.c \
	charset_internal.c test_vfs.c
am_test_vfs_OBJECTS = $(am__objects_3) test_vfs.$(OBJEXT)
test_vfs_OBJECTS = $(am_test_vfs_OBJECTS)
test_vfs_LDADD = $(LDADD)
test_vfs_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/libupnp/config.aux/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(djmount_SOURCES) $(test_cache_SOURCES) \
	$(test_charset_SOURCES) $(test_device_SOURCES) \
	$(test_ptr_array_SOURCES) $(test_string_SOURCES) \
	$(test_upnp_SOURCES) $(test_vfs_SOURCES)
DIST_SOURCES = $(am__djmount_SOURCES_DIST) \
	$(am__test_cache_SOURCES_DIST) \
	$(am__test_charset_SOURCES_DIST) \
	$(am__test_device_SOURCES_DIST) \
	$(am__test_ptr_array_SOURCES_DIST) \
	$(am__test_string_SOURCES_DIST) $(am__test_upnp_SOURCES_DIST) \
	$(am__test_vfs_SOURCES_DIST)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/daily_build/64_01/4.4.1/SysUtil/djmount-0.71/libupnp/config.aux/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /root/daily_build/64_01/4.4.1/SysUtil/djmount-0.71/libupnp/config.aux/missing --run tar
AR = x86_64-QNAP-linux-gnu-ar
AUTOCONF = ${SHELL} /root/daily_build/64_01/4.4.1/SysUtil/djmount-0.71/libupnp/config.aux/missing --run autoconf
AUTOHEADER = ${SHELL} /root/daily_build/64_01/4.4.1/SysUtil/djmount-0.71/libupnp/config.aux/missing --run autoheader
AUTOMAKE = ${SHELL} /root/daily_build/64_01/4.4.1/SysUtil/djmount-0.71/libupnp/config.aux/missing --run automake-1.9
AWK = gawk
CC = x86_64-QNAP-linux-gnu-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -DQNAP -Wall -pthread
CPP = x86_64-QNAP-linux-gnu-gcc -E
CPPFLAGS = -I../gl -I/root/daily_build/64_01/4.4.1/LinkFS/include
CXX = x86_64-QNAP-linux-gnu-g++
CXXCPP = x86_64-QNAP-linux-gnu-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_CHARSET_FALSE = #
ENABLE_CHARSET_TRUE = 
ENABLE_DEBUG_FALSE = #
ENABLE_DEBUG_TRUE = 
EXEEXT = 
F77 = 
FFLAGS = 
FUSE_CFLAGS = -I/root/daily_build/64_01/4.4.1/LinkFS/include -D_FILE_OFFSET_BITS=64 -DFUSE_USE_VERSION=22 -DFUSE_USE_VERSION=22
FUSE_LIBS = -L/root/daily_build/64_01/4.4.1/LinkFS/lib -lfuse
GL_COND_LIBTOOL_FALSE = #
GL_COND_LIBTOOL_TRUE = 
HAVE__BOOL = 1
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTERNAL_LIBUPNP_FALSE = 
INTERNAL_LIBUPNP_TRUE = #
INTERNAL_TALLOC_FALSE = #
INTERNAL_TALLOC_TRUE = 
LDFLAGS = -L/root/daily_build/64_01/4.4.1/LinkFS/lib -liconv
LIBICONV = 
LIBOBJS =  exitfail$U.o hash$U.o xmalloc$U.o
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUPNP_CFLAGS =  -I/root/daily_build/64_01/4.4.1/LinkFS/include  $(am__append_1)
LIBUPNP_LIBS =  -L/root/daily_build/64_01/4.4.1/LinkFS/lib -lupnp -lthreadutil -lixml
LN_S = ln -s
LTLIBICONV = 
LTLIBOBJS =  exitfail$U.lo hash$U.lo xmalloc$U.lo
MAKEINFO = ${SHELL} /root/daily_build/64_01/4.4.1/SysUtil/djmount-0.71/libupnp/config.aux/missing --run makeinfo
OBJEXT = o
PACKAGE = djmount
PACKAGE_BUGREPORT = r3mi@users.sourceforge.net
PACKAGE_NAME = djmount
PACKAGE_STRING = djmount 0.71
PACKAGE_TARNAME = djmount
PACKAGE_VERSION = 0.71
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = 
PTHREAD_CC = x86_64-QNAP-linux-gnu-gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = x86_64-QNAP-linux-gnu-ranlib
READLINE_LIBS = -lreadline -lncurses
SET_MAKE = 
SHELL = /bin/bash
STDBOOL_H = 
STRIP = x86_64-QNAP-linux-gnu-strip
TALLOC_CFLAGS = -I$(top_srcdir)/talloc/talloc
TALLOC_LIBS = -L$(top_builddir)/talloc -ltalloc
VERSION = 0.71
WANT_ICONV_FALSE = #
WANT_ICONV_TRUE = 
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
ac_ct_RANLIB = 
ac_ct_STRIP = 
ac_pt_PKG_CONFIG = 
acx_pthread_config = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-QNAP-linux-gnu
host_alias = x86_64-QNAP-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = QNAP
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /root/daily_build/64_01/4.4.1/SysUtil/djmount-0.71/libupnp/config.aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = 
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs = 
sysconfdir = ${prefix}/etc
target_alias = 
#UPNP_TMPINC = /root/daily_build/64_01/4.4.1/SysUtil/djmount-0.71/djmount/_upnp_temp_install
AM_CFLAGS = -I$(top_srcdir)/gl \
			  $(TALLOC_CFLAGS) $(LIBUPNP_CFLAGS) $(FUSE_CFLAGS) 

LDADD = -L$(top_builddir)/gl -lgnu $(TALLOC_LIBS) $(LIBUPNP_LIBS) \
	$(FUSE_LIBS) $(am__append_2)
# auto run some tests
TESTS = test_ptr_array test_string test_cache \
			  test_device.sh test_vfs.sh

COMMON_SRCS = log.c object.c service.c device.c device_list.c \
	didl_object.c media_file.c file_buffer.c content_dir.c vfs.c \
	djfs.c upnp_util.c string_util.c xml_util.c ptr_array.c \
	talloc_util.c cache.c $(am__append_3) $(am__append_4)
noinst_HEADERS = \
			log.h object.h object_p.h service.h service_p.h \
		  	device.h device_list.h didl_object.h \
			media_file.h file_buffer.h \
		  	content_dir.h content_dir_p.h vfs.h vfs_p.h \
			djfs.h djfs_p.h upnp_util.h \
		  	string_util.h xml_util.h ptr_array.h talloc_util.h \
			cache.h \
		  	charset.h charset_internal.h \
			search_help.h

BUILT_SOURCES = search_help.h $(am__append_5)
djmount_SOURCES = $(COMMON_SRCS) fuse_main.c
test_upnp_SOURCES = $(COMMON_SRCS) test_upnp.c
test_upnp_LDADD = $(LDADD) $(READLINE_LIBS)
test_cache_SOURCES = $(COMMON_SRCS) test_cache.c
test_charset_SOURCES = $(COMMON_SRCS) test_charset.c
test_device_SOURCES = $(COMMON_SRCS) test_device.c
test_ptr_array_SOURCES = $(COMMON_SRCS) test_ptr_array.c
test_string_SOURCES = $(COMMON_SRCS) test_string.c
test_vfs_SOURCES = $(COMMON_SRCS) test_vfs.c
CLEANFILES = IUpnpErrFile.txt IUpnpInfoFile.txt
#UPNP_TMPHEADERS = $(UPNP_TMPINC)/upnp/upnp.h \
#			  $(UPNP_TMPINC)/upnp/ithread.h \
#			  $(UPNP_TMPINC)/upnp/ixml.h

EXTRA_DIST = test_device.sh test_vfs.sh txt2h.pl
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  djmount/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  djmount/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

installcheck-binPROGRAMS: $(bin_PROGRAMS)
	bad=0; pid=$$$$; list="$(bin_PROGRAMS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | \
	     sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(bindir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
djmount$(EXEEXT): $(djmount_OBJECTS) $(djmount_DEPENDENCIES) 
	@rm -f djmount$(EXEEXT)
	$(LINK) $(djmount_LDFLAGS) $(djmount_OBJECTS) $(djmount_LDADD) $(LIBS)
test_cache$(EXEEXT): $(test_cache_OBJECTS) $(test_cache_DEPENDENCIES) 
	@rm -f test_cache$(EXEEXT)
	$(LINK) $(test_cache_LDFLAGS) $(test_cache_OBJECTS) $(test_cache_LDADD) $(LIBS)
test_charset$(EXEEXT): $(test_charset_OBJECTS) $(test_charset_DEPENDENCIES) 
	@rm -f test_charset$(EXEEXT)
	$(LINK) $(test_charset_LDFLAGS) $(test_charset_OBJECTS) $(test_charset_LDADD) $(LIBS)
test_device$(EXEEXT): $(test_device_OBJECTS) $(test_device_DEPENDENCIES) 
	@rm -f test_device$(EXEEXT)
	$(LINK) $(test_device_LDFLAGS) $(test_device_OBJECTS) $(test_device_LDADD) $(LIBS)
test_ptr_array$(EXEEXT): $(test_ptr_array_OBJECTS) $(test_ptr_array_DEPENDENCIES) 
	@rm -f test_ptr_array$(EXEEXT)
	$(LINK) $(test_ptr_array_LDFLAGS) $(test_ptr_array_OBJECTS) $(test_ptr_array_LDADD) $(LIBS)
test_string$(EXEEXT): $(test_string_OBJECTS) $(test_string_DEPENDENCIES) 
	@rm -f test_string$(EXEEXT)
	$(LINK) $(test_string_LDFLAGS) $(test_string_OBJECTS) $(test_string_LDADD) $(LIBS)
test_upnp$(EXEEXT): $(test_upnp_OBJECTS) $(test_upnp_DEPENDENCIES) 
	@rm -f test_upnp$(EXEEXT)
	$(LINK) $(test_upnp_LDFLAGS) $(test_upnp_OBJECTS) $(test_upnp_LDADD) $(LIBS)
test_vfs$(EXEEXT): $(test_vfs_OBJECTS) $(test_vfs_DEPENDENCIES) 
	@rm -f test_vfs$(EXEEXT)
	$(LINK) $(test_vfs_LDFLAGS) $(test_vfs_OBJECTS) $(test_vfs_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cache.Po
include ./$(DEPDIR)/charset.Po
include ./$(DEPDIR)/charset_internal.Po
include ./$(DEPDIR)/content_dir.Po
include ./$(DEPDIR)/device.Po
include ./$(DEPDIR)/device_list.Po
include ./$(DEPDIR)/didl_object.Po
include ./$(DEPDIR)/djfs.Po
include ./$(DEPDIR)/file_buffer.Po
include ./$(DEPDIR)/fuse_main.Po
include ./$(DEPDIR)/log.Po
include ./$(DEPDIR)/media_file.Po
include ./$(DEPDIR)/object.Po
include ./$(DEPDIR)/ptr_array.Po
include ./$(DEPDIR)/service.Po
include ./$(DEPDIR)/string_util.Po
include ./$(DEPDIR)/talloc_util.Po
include ./$(DEPDIR)/test_cache.Po
include ./$(DEPDIR)/test_charset.Po
include ./$(DEPDIR)/test_device.Po
include ./$(DEPDIR)/test_ptr_array.Po
include ./$(DEPDIR)/test_string.Po
include ./$(DEPDIR)/test_upnp.Po
include ./$(DEPDIR)/test_vfs.Po
include ./$(DEPDIR)/upnp_util.Po
include ./$(DEPDIR)/vfs.Po
include ./$(DEPDIR)/xml_util.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean-local:
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am: installcheck-binPROGRAMS

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installcheck-binPROGRAMS installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


#    # Local install of UPnP headers, to find <upnp/*.h> even when
#    # they are not installed

search_help.h : ../search_help.txt txt2h.pl
	$(PERL) $(srcdir)/txt2h.pl $< > $@

#    #
#    # Local install of UPnP headers, to find <upnp/*.h> even when
#    # they are not installed
#    #

#$(UPNP_TMPHEADERS) :
#	-rm -fr $(UPNP_TMPINC)
#	$(MAKE) -C $(top_builddir)/libupnp install-data \
#		includedir=$(UPNP_TMPINC)

#clean-local:
#	-rm -fr $(UPNP_TMPINC)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
