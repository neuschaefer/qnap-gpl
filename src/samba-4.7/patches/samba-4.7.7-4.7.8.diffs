diff -Npur samba-4.7.7/VERSION samba-4.7.8/VERSION
--- samba-4.7.7/VERSION	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/VERSION	2018-06-21 10:00:46.000000000 +0200
@@ -25,7 +25,7 @@
 ########################################################
 SAMBA_VERSION_MAJOR=4
 SAMBA_VERSION_MINOR=7
-SAMBA_VERSION_RELEASE=7
+SAMBA_VERSION_RELEASE=8
 
 ########################################################
 # If a official release has a serious bug              #
diff -Npur samba-4.7.7/WHATSNEW.txt samba-4.7.8/WHATSNEW.txt
--- samba-4.7.7/WHATSNEW.txt	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/WHATSNEW.txt	2018-06-21 10:00:46.000000000 +0200
@@ -1,4 +1,120 @@
                    =============================
+                   Release Notes for Samba 4.7.8
+                           June 21, 2018
+                   =============================
+
+
+This is the latest stable release of the Samba 4.7 release series.
+
+
+Changes since 4.7.7:
+--------------------
+
+o  Jeremy Allison <jra@samba.org>
+   * BUG 13380: s3: smbd: Generic fix for incorrect reporting of stream dos
+     attributes on a directory.
+   * BUG 13412: ceph: VFS: Add asynchronous fsync to ceph module, fake using
+     synchronous call.
+   * BUG 13419: s3: libsmbclient: Fix hard-coded connection error return of
+     ETIMEDOUT.
+   * BUG 13428: s3: smbd: Fix SMB2-FLUSH against directories.
+   * BUG 13457: s3: smbd: printing: Re-implement delete-on-close semantics for
+     print files missing since 3.5.x.
+   * BUG 13474: python: Fix talloc frame use in make_simple_acl().
+
+o  Andrew Bartlett <abartlet@samba.org>
+   * BUG 13430: winbindd on the AD DC is slow for passdb queries.
+   * BUG 13454: No Backtrace given by Samba's AD DC by default. 
+
+o  Ralph Boehme <slow@samba.org>
+   * BUG 13332: winbindd doesn't recover loss of netlogon secure channel in
+     case the peer DC is rebooted.
+   * BUG 13432: s3:smbd: Fix interaction between chown and SD flags.
+
+o  Günther Deschner <gd@samba.org>
+   * BUG 13437: s4-heimdal: Fix the format-truncation errors.
+
+o  David Disseldorp <ddiss@samba.org>
+   * BUG 13425: vfs_ceph: Add fake async pwrite/pread send/recv hooks.
+
+o  Björn Jacke <bjacke@samba.org>
+   * BUG 13395: printing: Return the same error code as Windows does on upload
+     failures.
+
+o  Volker Lendecke <vl@samba.org>
+   * BUG 13290: winbind: Improve child selection.
+   * BUG 13292: winbind: Maintain a binding handle per domain and always go via
+     wb_domain_request_send().
+   * BUG 13332: winbindd doesn't recover loss of netlogon secure channel in
+     case the peer DC is rebooted.
+   * BUG 13369: Looking up the user using the UPN results in user name with the
+     REALM instead of the DOMAIN.
+   * BUG 13370: rpc_server: Init local_server_* in
+     make_internal_rpc_pipe_socketpair.
+   * BUG 13382: smbclient: Fix broken notify. 
+
+o  Stefan Metzmacher <metze@samba.org>
+   * BUG 13273: libads: Fix the build --without-ads.
+   * BUG 13279: winbindd: Don't split the rid for SID_NAME_DOMAIN sids in
+     wb_lookupsids.
+   * BUG 13280: winbindd: initialize type = SID_NAME_UNKNOWN in
+     wb_lookupsids_single_done().
+   * BUG 13289: s4:rpc_server: Fix call_id truncation in
+     dcesrv_find_fragmented_call().
+   * BUG 13290:  A disconnecting winbind client can cause a problem in the
+     winbind parent child communication.
+   * BUG 13291: tevent: version 0.9.36
+	- improve documentation of tevent_queue_add_optimize_empty()
+        - add tevent_queue_entry_untrigger()
+   * BUG 13292: winbind: Use one queue for all domain children.
+   * BUG 13293: Minimize the lifetime of winbindd_cli_state->{pw,gr}ent_state.
+   * BUG 13294: winbind should avoid using fstrcpy(domain->dcname,...) on a
+     char *.
+   * BUG 13295: The winbind parent should find the dc of a foreign domain via
+     the primary domain.
+   * BUG 13400: nsswitch: Fix memory leak in winbind_open_pipe_sock() when the
+     privileged pipe is not accessable.
+   * BUG 13427: Fix broken server side GENSEC_FEATURE_LDAP_STYLE handling
+     (NTLMSSP NTLM2 packet check failed due to invalid signature!).
+
+o  Vandana Rungta <vrungta@amazon.com>
+   * BUG 13424: s3: VFS: Fix memory leak in vfs_ceph.
+
+o  Christof Schmitt <cs@samba.org>
+   * BUG 13407: rpc_server: Fix NetSessEnum with stale sessions.
+   * BUG 13446: dfree cache returning incorrect data for sub directory mounts. 
+
+o  Andreas Schneider <asn@samba.org>
+   * BUG 13369: Looking up the user using the UPN results in user name with the
+     REALM instead of the DOMAIN.
+   * BUG 13376: s3:passdb: Do not return OK if we don't have pinfo set up.
+   * BUG 13440: s3:utils: Do not segfault on error in DoDNSUpdate().
+
+
+#######################################
+Reporting bugs & Development Discussion
+#######################################
+
+Please discuss this release on the samba-technical mailing list or by
+joining the #samba-technical IRC channel on irc.freenode.net.
+
+If you do report problems then please try to send high quality
+feedback. If you don't provide vital information to help us track down
+the problem then you will probably be ignored.  All bug reports should
+be filed under the "Samba 4.1 and newer" product in the project's Bugzilla
+database (https://bugzilla.samba.org/).
+
+
+======================================================================
+== Our Code, Our Bugs, Our Responsibility.
+== The Samba Team
+======================================================================
+
+
+Release notes for older releases follow:
+----------------------------------------
+
+                   =============================
                    Release Notes for Samba 4.7.7
                            April 17, 2018
                    =============================
@@ -100,8 +216,8 @@ database (https://bugzilla.samba.org/).
 ======================================================================
 
 
-Release notes for older releases follow:
-----------------------------------------
+----------------------------------------------------------------------
+
 
                    =============================
                    Release Notes for Samba 4.7.6
diff -Npur samba-4.7.7/auth/ntlmssp/gensec_ntlmssp_server.c samba-4.7.8/auth/ntlmssp/gensec_ntlmssp_server.c
--- samba-4.7.7/auth/ntlmssp/gensec_ntlmssp_server.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/auth/ntlmssp/gensec_ntlmssp_server.c	2018-06-21 10:00:46.000000000 +0200
@@ -176,25 +176,6 @@ NTSTATUS gensec_ntlmssp_server_start(str
 	ntlmssp_state->neg_flags |= NTLMSSP_NEGOTIATE_SIGN;
 	ntlmssp_state->neg_flags |= NTLMSSP_NEGOTIATE_SEAL;
 
-	if (gensec_security->want_features & GENSEC_FEATURE_SESSION_KEY) {
-		ntlmssp_state->neg_flags |= NTLMSSP_NEGOTIATE_SIGN;
-	}
-	if (gensec_security->want_features & GENSEC_FEATURE_SIGN) {
-		ntlmssp_state->neg_flags |= NTLMSSP_NEGOTIATE_SIGN;
-
-		if (gensec_security->want_features & GENSEC_FEATURE_LDAP_STYLE) {
-			/*
-			 * We need to handle NTLMSSP_NEGOTIATE_SIGN as
-			 * NTLMSSP_NEGOTIATE_SEAL if GENSEC_FEATURE_LDAP_STYLE
-			 * is requested.
-			 */
-			ntlmssp_state->force_wrap_seal = true;
-		}
-	}
-	if (gensec_security->want_features & GENSEC_FEATURE_SEAL) {
-		ntlmssp_state->neg_flags |= NTLMSSP_NEGOTIATE_SIGN;
-		ntlmssp_state->neg_flags |= NTLMSSP_NEGOTIATE_SEAL;
-	}
 
 	if (role == ROLE_STANDALONE) {
 		ntlmssp_state->server.is_standalone = true;
diff -Npur samba-4.7.7/auth/ntlmssp/ntlmssp_client.c samba-4.7.8/auth/ntlmssp/ntlmssp_client.c
--- samba-4.7.7/auth/ntlmssp/ntlmssp_client.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/auth/ntlmssp/ntlmssp_client.c	2018-06-21 10:00:46.000000000 +0200
@@ -862,13 +862,23 @@ NTSTATUS gensec_ntlmssp_client_start(str
 			 * is requested.
 			 */
 			ntlmssp_state->force_wrap_seal = true;
-			/*
-			 * We want also work against old Samba servers
-			 * which didn't had GENSEC_FEATURE_LDAP_STYLE
-			 * we negotiate SEAL too. We may remove this
-			 * in a few years. As all servers should have
-			 * GENSEC_FEATURE_LDAP_STYLE by then.
-			 */
+		}
+	}
+	if (ntlmssp_state->force_wrap_seal) {
+		bool ret;
+
+		/*
+		 * We want also work against old Samba servers
+		 * which didn't had GENSEC_FEATURE_LDAP_STYLE
+		 * we negotiate SEAL too. We may remove this
+		 * in a few years. As all servers should have
+		 * GENSEC_FEATURE_LDAP_STYLE by then.
+		 */
+		ret = gensec_setting_bool(gensec_security->settings,
+					  "ntlmssp_client",
+					  "ldap_style_send_seal",
+					  true);
+		if (ret) {
 			ntlmssp_state->required_flags |= NTLMSSP_NEGOTIATE_SEAL;
 		}
 	}
diff -Npur samba-4.7.7/auth/ntlmssp/ntlmssp_server.c samba-4.7.8/auth/ntlmssp/ntlmssp_server.c
--- samba-4.7.7/auth/ntlmssp/ntlmssp_server.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/auth/ntlmssp/ntlmssp_server.c	2018-06-21 10:00:46.000000000 +0200
@@ -976,6 +976,14 @@ static NTSTATUS ntlmssp_server_postauth(
 	data_blob_free(&ntlmssp_state->challenge_blob);
 
 	if (gensec_ntlmssp_have_feature(gensec_security, GENSEC_FEATURE_SIGN)) {
+		if (gensec_security->want_features & GENSEC_FEATURE_LDAP_STYLE) {
+			/*
+			 * We need to handle NTLMSSP_NEGOTIATE_SIGN as
+			 * NTLMSSP_NEGOTIATE_SEAL if GENSEC_FEATURE_LDAP_STYLE
+			 * is requested.
+			 */
+			ntlmssp_state->force_wrap_seal = true;
+		}
 		nt_status = ntlmssp_sign_init(ntlmssp_state);
 	}
 
diff -Npur samba-4.7.7/ctdb/doc/ctdb-etcd.7 samba-4.7.8/ctdb/doc/ctdb-etcd.7
--- samba-4.7.7/ctdb/doc/ctdb-etcd.7	2018-04-17 09:40:13.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdb-etcd.7	2018-06-21 10:04:34.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdb-etcd
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDB\-ETCD" "7" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDB\-ETCD" "7" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdb-statistics.7 samba-4.7.8/ctdb/doc/ctdb-statistics.7
--- samba-4.7.7/ctdb/doc/ctdb-statistics.7	2018-04-17 09:40:12.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdb-statistics.7	2018-06-21 10:04:34.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdb-statistics
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDB\-STATISTICS" "7" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDB\-STATISTICS" "7" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdb-tunables.7 samba-4.7.8/ctdb/doc/ctdb-tunables.7
--- samba-4.7.7/ctdb/doc/ctdb-tunables.7	2018-04-17 09:40:13.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdb-tunables.7	2018-06-21 10:04:34.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdb-tunables
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDB\-TUNABLES" "7" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDB\-TUNABLES" "7" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdb.1 samba-4.7.8/ctdb/doc/ctdb.1
--- samba-4.7.7/ctdb/doc/ctdb.1	2018-04-17 09:40:09.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdb.1	2018-06-21 10:04:30.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdb
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDB" "1" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDB" "1" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdb.7 samba-4.7.8/ctdb/doc/ctdb.7
--- samba-4.7.7/ctdb/doc/ctdb.7	2018-04-17 09:40:12.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdb.7	2018-06-21 10:04:33.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdb
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDB" "7" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDB" "7" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdb_diagnostics.1 samba-4.7.8/ctdb/doc/ctdb_diagnostics.1
--- samba-4.7.7/ctdb/doc/ctdb_diagnostics.1	2018-04-17 09:40:11.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdb_diagnostics.1	2018-06-21 10:04:32.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdb_diagnostics
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDB_DIAGNOSTICS" "1" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDB_DIAGNOSTICS" "1" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdb_mutex_ceph_rados_helper.7 samba-4.7.8/ctdb/doc/ctdb_mutex_ceph_rados_helper.7
--- samba-4.7.7/ctdb/doc/ctdb_mutex_ceph_rados_helper.7	2018-04-17 09:40:13.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdb_mutex_ceph_rados_helper.7	2018-06-21 10:04:35.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: Ceph RADOS Mutex
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CEPH RADOS MUTEX" "7" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CEPH RADOS MUTEX" "7" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdbd.1 samba-4.7.8/ctdb/doc/ctdbd.1
--- samba-4.7.7/ctdb/doc/ctdbd.1	2018-04-17 09:40:10.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdbd.1	2018-06-21 10:04:31.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdbd
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDBD" "1" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDBD" "1" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdbd.conf.5 samba-4.7.8/ctdb/doc/ctdbd.conf.5
--- samba-4.7.7/ctdb/doc/ctdbd.conf.5	2018-04-17 09:40:12.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdbd.conf.5	2018-06-21 10:04:33.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdbd.conf
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDBD\&.CONF" "5" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDBD\&.CONF" "5" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ctdbd_wrapper.1 samba-4.7.8/ctdb/doc/ctdbd_wrapper.1
--- samba-4.7.7/ctdb/doc/ctdbd_wrapper.1	2018-04-17 09:40:11.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ctdbd_wrapper.1	2018-06-21 10:04:32.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ctdbd_wrapper
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "CTDBD_WRAPPER" "1" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "CTDBD_WRAPPER" "1" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ltdbtool.1 samba-4.7.8/ctdb/doc/ltdbtool.1
--- samba-4.7.7/ctdb/doc/ltdbtool.1	2018-04-17 09:40:10.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ltdbtool.1	2018-06-21 10:04:31.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ltdbtool
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "LTDBTOOL" "1" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "LTDBTOOL" "1" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/onnode.1 samba-4.7.8/ctdb/doc/onnode.1
--- samba-4.7.7/ctdb/doc/onnode.1	2018-04-17 09:40:11.000000000 +0200
+++ samba-4.7.8/ctdb/doc/onnode.1	2018-06-21 10:04:32.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: onnode
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "ONNODE" "1" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "ONNODE" "1" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/ctdb/doc/ping_pong.1 samba-4.7.8/ctdb/doc/ping_pong.1
--- samba-4.7.7/ctdb/doc/ping_pong.1	2018-04-17 09:40:10.000000000 +0200
+++ samba-4.7.8/ctdb/doc/ping_pong.1	2018-06-21 10:04:31.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ping_pong
 .\"    Author: 
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: CTDB - clustered TDB database
 .\"    Source: ctdb
 .\"  Language: English
 .\"
-.TH "PING_PONG" "1" "04/17/2018" "ctdb" "CTDB \- clustered TDB database"
+.TH "PING_PONG" "1" "06/21/2018" "ctdb" "CTDB \- clustered TDB database"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/cifsdd.8 samba-4.7.8/docs/manpages/cifsdd.8
--- samba-4.7.7/docs/manpages/cifsdd.8	2018-04-17 09:40:15.000000000 +0200
+++ samba-4.7.8/docs/manpages/cifsdd.8	2018-06-21 10:04:36.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: cifsdd
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "CIFSDD" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "CIFSDD" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/dbwrap_tool.1 samba-4.7.8/docs/manpages/dbwrap_tool.1
--- samba-4.7.7/docs/manpages/dbwrap_tool.1	2018-04-17 09:40:15.000000000 +0200
+++ samba-4.7.8/docs/manpages/dbwrap_tool.1	2018-06-21 10:04:36.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: dbwrap_tool
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "DBWRAP_TOOL" "1" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "DBWRAP_TOOL" "1" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/eventlogadm.8 samba-4.7.8/docs/manpages/eventlogadm.8
--- samba-4.7.7/docs/manpages/eventlogadm.8	2018-04-17 09:40:15.000000000 +0200
+++ samba-4.7.8/docs/manpages/eventlogadm.8	2018-06-21 10:04:37.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: eventlogadm
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "EVENTLOGADM" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "EVENTLOGADM" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/findsmb.1 samba-4.7.8/docs/manpages/findsmb.1
--- samba-4.7.7/docs/manpages/findsmb.1	2018-04-17 09:40:16.000000000 +0200
+++ samba-4.7.8/docs/manpages/findsmb.1	2018-06-21 10:04:37.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: findsmb
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "FINDSMB" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "FINDSMB" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_ad.8 samba-4.7.8/docs/manpages/idmap_ad.8
--- samba-4.7.7/docs/manpages/idmap_ad.8	2018-04-17 09:40:16.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_ad.8	2018-06-21 10:04:37.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_ad
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_AD" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_AD" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_autorid.8 samba-4.7.8/docs/manpages/idmap_autorid.8
--- samba-4.7.7/docs/manpages/idmap_autorid.8	2018-04-17 09:40:16.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_autorid.8	2018-06-21 10:04:37.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_autorid
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_AUTORID" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_AUTORID" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_hash.8 samba-4.7.8/docs/manpages/idmap_hash.8
--- samba-4.7.7/docs/manpages/idmap_hash.8	2018-04-17 09:40:16.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_hash.8	2018-06-21 10:04:37.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_hash
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_HASH" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_HASH" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_ldap.8 samba-4.7.8/docs/manpages/idmap_ldap.8
--- samba-4.7.7/docs/manpages/idmap_ldap.8	2018-04-17 09:40:16.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_ldap.8	2018-06-21 10:04:38.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_ldap
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_LDAP" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_LDAP" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_nss.8 samba-4.7.8/docs/manpages/idmap_nss.8
--- samba-4.7.7/docs/manpages/idmap_nss.8	2018-04-17 09:40:17.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_nss.8	2018-06-21 10:04:38.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_nss
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_NSS" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_NSS" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_rfc2307.8 samba-4.7.8/docs/manpages/idmap_rfc2307.8
--- samba-4.7.7/docs/manpages/idmap_rfc2307.8	2018-04-17 09:40:17.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_rfc2307.8	2018-06-21 10:04:38.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_rfc2307
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_RFC2307" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_RFC2307" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_rid.8 samba-4.7.8/docs/manpages/idmap_rid.8
--- samba-4.7.7/docs/manpages/idmap_rid.8	2018-04-17 09:40:17.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_rid.8	2018-06-21 10:04:38.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_rid
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_RID" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_RID" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_script.8 samba-4.7.8/docs/manpages/idmap_script.8
--- samba-4.7.7/docs/manpages/idmap_script.8	2018-04-17 09:40:17.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_script.8	2018-06-21 10:04:38.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_script
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_SCRIPT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_SCRIPT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_tdb.8 samba-4.7.8/docs/manpages/idmap_tdb.8
--- samba-4.7.7/docs/manpages/idmap_tdb.8	2018-04-17 09:40:17.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_tdb.8	2018-06-21 10:04:39.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_tdb
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_TDB" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_TDB" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/idmap_tdb2.8 samba-4.7.8/docs/manpages/idmap_tdb2.8
--- samba-4.7.7/docs/manpages/idmap_tdb2.8	2018-04-17 09:40:18.000000000 +0200
+++ samba-4.7.8/docs/manpages/idmap_tdb2.8	2018-06-21 10:04:39.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: idmap_tdb2
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "IDMAP_TDB2" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "IDMAP_TDB2" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/libsmbclient.7 samba-4.7.8/docs/manpages/libsmbclient.7
--- samba-4.7.7/docs/manpages/libsmbclient.7	2018-04-17 09:40:18.000000000 +0200
+++ samba-4.7.8/docs/manpages/libsmbclient.7	2018-06-21 10:04:39.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: libsmbclient
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: 7
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "LIBSMBCLIENT" "7" "04/17/2018" "Samba 4\&.7" "7"
+.TH "LIBSMBCLIENT" "7" "06/21/2018" "Samba 4\&.7" "7"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/lmhosts.5 samba-4.7.8/docs/manpages/lmhosts.5
--- samba-4.7.7/docs/manpages/lmhosts.5	2018-04-17 09:40:18.000000000 +0200
+++ samba-4.7.8/docs/manpages/lmhosts.5	2018-06-21 10:04:39.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: lmhosts
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: File Formats and Conventions
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "LMHOSTS" "5" "04/17/2018" "Samba 4\&.7" "File Formats and Conventions"
+.TH "LMHOSTS" "5" "06/21/2018" "Samba 4\&.7" "File Formats and Conventions"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/log2pcap.1 samba-4.7.8/docs/manpages/log2pcap.1
--- samba-4.7.7/docs/manpages/log2pcap.1	2018-04-17 09:40:18.000000000 +0200
+++ samba-4.7.8/docs/manpages/log2pcap.1	2018-06-21 10:04:40.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: log2pcap
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "LOG2PCAP" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "LOG2PCAP" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/mvxattr.1 samba-4.7.8/docs/manpages/mvxattr.1
--- samba-4.7.7/docs/manpages/mvxattr.1	2018-04-17 09:40:18.000000000 +0200
+++ samba-4.7.8/docs/manpages/mvxattr.1	2018-06-21 10:04:40.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: mvxattr
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "MVXATTR" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "MVXATTR" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/net.8 samba-4.7.8/docs/manpages/net.8
--- samba-4.7.7/docs/manpages/net.8	2018-04-17 09:40:19.000000000 +0200
+++ samba-4.7.8/docs/manpages/net.8	2018-06-21 10:04:40.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: net
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "NET" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "NET" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/nmbd.8 samba-4.7.8/docs/manpages/nmbd.8
--- samba-4.7.7/docs/manpages/nmbd.8	2018-04-17 09:40:19.000000000 +0200
+++ samba-4.7.8/docs/manpages/nmbd.8	2018-06-21 10:04:40.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: nmbd
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "NMBD" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "NMBD" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/nmblookup.1 samba-4.7.8/docs/manpages/nmblookup.1
--- samba-4.7.7/docs/manpages/nmblookup.1	2018-04-17 09:40:19.000000000 +0200
+++ samba-4.7.8/docs/manpages/nmblookup.1	2018-06-21 10:04:40.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: nmblookup
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "NMBLOOKUP" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "NMBLOOKUP" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/ntlm_auth.1 samba-4.7.8/docs/manpages/ntlm_auth.1
--- samba-4.7.7/docs/manpages/ntlm_auth.1	2018-04-17 09:40:19.000000000 +0200
+++ samba-4.7.8/docs/manpages/ntlm_auth.1	2018-06-21 10:04:41.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: ntlm_auth
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "NTLM_AUTH" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "NTLM_AUTH" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/pam_winbind.8 samba-4.7.8/docs/manpages/pam_winbind.8
--- samba-4.7.7/docs/manpages/pam_winbind.8	2018-04-17 09:40:20.000000000 +0200
+++ samba-4.7.8/docs/manpages/pam_winbind.8	2018-06-21 10:04:41.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: pam_winbind
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: 8
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "PAM_WINBIND" "8" "04/17/2018" "Samba 4\&.7" "8"
+.TH "PAM_WINBIND" "8" "06/21/2018" "Samba 4\&.7" "8"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/pam_winbind.conf.5 samba-4.7.8/docs/manpages/pam_winbind.conf.5
--- samba-4.7.7/docs/manpages/pam_winbind.conf.5	2018-04-17 09:40:20.000000000 +0200
+++ samba-4.7.8/docs/manpages/pam_winbind.conf.5	2018-06-21 10:04:41.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: pam_winbind.conf
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: 5
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "PAM_WINBIND\&.CONF" "5" "04/17/2018" "Samba 4\&.7" "5"
+.TH "PAM_WINBIND\&.CONF" "5" "06/21/2018" "Samba 4\&.7" "5"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/pdbedit.8 samba-4.7.8/docs/manpages/pdbedit.8
--- samba-4.7.7/docs/manpages/pdbedit.8	2018-04-17 09:40:20.000000000 +0200
+++ samba-4.7.8/docs/manpages/pdbedit.8	2018-06-21 10:04:41.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: pdbedit
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "PDBEDIT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "PDBEDIT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/profiles.1 samba-4.7.8/docs/manpages/profiles.1
--- samba-4.7.7/docs/manpages/profiles.1	2018-04-17 09:40:20.000000000 +0200
+++ samba-4.7.8/docs/manpages/profiles.1	2018-06-21 10:04:42.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: profiles
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "PROFILES" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "PROFILES" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/rpcclient.1 samba-4.7.8/docs/manpages/rpcclient.1
--- samba-4.7.7/docs/manpages/rpcclient.1	2018-04-17 09:40:20.000000000 +0200
+++ samba-4.7.8/docs/manpages/rpcclient.1	2018-06-21 10:04:42.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: rpcclient
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "RPCCLIENT" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "RPCCLIENT" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/samba-regedit.8 samba-4.7.8/docs/manpages/samba-regedit.8
--- samba-4.7.7/docs/manpages/samba-regedit.8	2018-04-17 09:40:21.000000000 +0200
+++ samba-4.7.8/docs/manpages/samba-regedit.8	2018-06-21 10:04:42.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: samba-regedit
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SAMBA\-REGEDIT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "SAMBA\-REGEDIT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/samba-tool.8 samba-4.7.8/docs/manpages/samba-tool.8
--- samba-4.7.7/docs/manpages/samba-tool.8	2018-04-17 09:40:21.000000000 +0200
+++ samba-4.7.8/docs/manpages/samba-tool.8	2018-06-21 10:04:42.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: samba-tool
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SAMBA\-TOOL" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "SAMBA\-TOOL" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/samba.7 samba-4.7.8/docs/manpages/samba.7
--- samba-4.7.7/docs/manpages/samba.7	2018-04-17 09:40:21.000000000 +0200
+++ samba-4.7.8/docs/manpages/samba.7	2018-06-21 10:04:42.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: samba
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: Miscellanea
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SAMBA" "7" "04/17/2018" "Samba 4\&.7" "Miscellanea"
+.TH "SAMBA" "7" "06/21/2018" "Samba 4\&.7" "Miscellanea"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/samba.8 samba-4.7.8/docs/manpages/samba.8
--- samba-4.7.7/docs/manpages/samba.8	2018-04-17 09:40:21.000000000 +0200
+++ samba-4.7.8/docs/manpages/samba.8	2018-06-21 10:04:43.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: samba
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SAMBA" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "SAMBA" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/sharesec.1 samba-4.7.8/docs/manpages/sharesec.1
--- samba-4.7.7/docs/manpages/sharesec.1	2018-04-17 09:40:22.000000000 +0200
+++ samba-4.7.8/docs/manpages/sharesec.1	2018-06-21 10:04:43.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: sharesec
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SHARESEC" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SHARESEC" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smb.conf.5 samba-4.7.8/docs/manpages/smb.conf.5
--- samba-4.7.7/docs/manpages/smb.conf.5	2018-04-17 09:40:23.000000000 +0200
+++ samba-4.7.8/docs/manpages/smb.conf.5	2018-06-21 10:04:44.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smb.conf
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: File Formats and Conventions
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMB\&.CONF" "5" "04/17/2018" "Samba 4\&.7" "File Formats and Conventions"
+.TH "SMB\&.CONF" "5" "06/21/2018" "Samba 4\&.7" "File Formats and Conventions"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbcacls.1 samba-4.7.8/docs/manpages/smbcacls.1
--- samba-4.7.7/docs/manpages/smbcacls.1	2018-04-17 09:40:23.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbcacls.1	2018-06-21 10:04:45.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbcacls
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBCACLS" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SMBCACLS" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbclient.1 samba-4.7.8/docs/manpages/smbclient.1
--- samba-4.7.7/docs/manpages/smbclient.1	2018-04-17 09:40:24.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbclient.1	2018-06-21 10:04:45.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbclient
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBCLIENT" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SMBCLIENT" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbcontrol.1 samba-4.7.8/docs/manpages/smbcontrol.1
--- samba-4.7.7/docs/manpages/smbcontrol.1	2018-04-17 09:40:24.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbcontrol.1	2018-06-21 10:04:45.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbcontrol
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBCONTROL" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SMBCONTROL" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbcquotas.1 samba-4.7.8/docs/manpages/smbcquotas.1
--- samba-4.7.7/docs/manpages/smbcquotas.1	2018-04-17 09:40:24.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbcquotas.1	2018-06-21 10:04:45.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbcquotas
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBCQUOTAS" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SMBCQUOTAS" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbd.8 samba-4.7.8/docs/manpages/smbd.8
--- samba-4.7.7/docs/manpages/smbd.8	2018-04-17 09:40:24.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbd.8	2018-06-21 10:04:45.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbd
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBD" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "SMBD" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbget.1 samba-4.7.8/docs/manpages/smbget.1
--- samba-4.7.7/docs/manpages/smbget.1	2018-04-17 09:40:24.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbget.1	2018-06-21 10:04:46.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbget
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBGET" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SMBGET" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbgetrc.5 samba-4.7.8/docs/manpages/smbgetrc.5
--- samba-4.7.7/docs/manpages/smbgetrc.5	2018-04-17 09:40:25.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbgetrc.5	2018-06-21 10:04:46.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbgetrc
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: File Formats and Conventions
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBGETRC" "5" "04/17/2018" "Samba 4\&.7" "File Formats and Conventions"
+.TH "SMBGETRC" "5" "06/21/2018" "Samba 4\&.7" "File Formats and Conventions"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbpasswd.5 samba-4.7.8/docs/manpages/smbpasswd.5
--- samba-4.7.7/docs/manpages/smbpasswd.5	2018-04-17 09:40:25.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbpasswd.5	2018-06-21 10:04:46.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbpasswd
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: File Formats and Conventions
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBPASSWD" "5" "04/17/2018" "Samba 4\&.7" "File Formats and Conventions"
+.TH "SMBPASSWD" "5" "06/21/2018" "Samba 4\&.7" "File Formats and Conventions"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbpasswd.8 samba-4.7.8/docs/manpages/smbpasswd.8
--- samba-4.7.7/docs/manpages/smbpasswd.8	2018-04-17 09:40:25.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbpasswd.8	2018-06-21 10:04:46.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbpasswd
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBPASSWD" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "SMBPASSWD" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbspool.8 samba-4.7.8/docs/manpages/smbspool.8
--- samba-4.7.7/docs/manpages/smbspool.8	2018-04-17 09:40:25.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbspool.8	2018-06-21 10:04:47.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbspool
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBSPOOL" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "SMBSPOOL" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbspool_krb5_wrapper.8 samba-4.7.8/docs/manpages/smbspool_krb5_wrapper.8
--- samba-4.7.7/docs/manpages/smbspool_krb5_wrapper.8	2018-04-17 09:40:25.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbspool_krb5_wrapper.8	2018-06-21 10:04:47.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbspool_krb5_wrapper
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBSPOOL_KRB5_WRAPPE" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "SMBSPOOL_KRB5_WRAPPE" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbstatus.1 samba-4.7.8/docs/manpages/smbstatus.1
--- samba-4.7.7/docs/manpages/smbstatus.1	2018-04-17 09:40:26.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbstatus.1	2018-06-21 10:04:47.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbstatus
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBSTATUS" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SMBSTATUS" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbtar.1 samba-4.7.8/docs/manpages/smbtar.1
--- samba-4.7.7/docs/manpages/smbtar.1	2018-04-17 09:40:26.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbtar.1	2018-06-21 10:04:47.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbtar
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBTAR" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SMBTAR" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/smbtree.1 samba-4.7.8/docs/manpages/smbtree.1
--- samba-4.7.7/docs/manpages/smbtree.1	2018-04-17 09:40:26.000000000 +0200
+++ samba-4.7.8/docs/manpages/smbtree.1	2018-06-21 10:04:47.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: smbtree
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "SMBTREE" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "SMBTREE" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/testparm.1 samba-4.7.8/docs/manpages/testparm.1
--- samba-4.7.7/docs/manpages/testparm.1	2018-04-17 09:40:26.000000000 +0200
+++ samba-4.7.8/docs/manpages/testparm.1	2018-06-21 10:04:48.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: testparm
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "TESTPARM" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "TESTPARM" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_acl_tdb.8 samba-4.7.8/docs/manpages/vfs_acl_tdb.8
--- samba-4.7.7/docs/manpages/vfs_acl_tdb.8	2018-04-17 09:40:27.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_acl_tdb.8	2018-06-21 10:04:48.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_acl_tdb
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_ACL_TDB" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_ACL_TDB" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_acl_xattr.8 samba-4.7.8/docs/manpages/vfs_acl_xattr.8
--- samba-4.7.7/docs/manpages/vfs_acl_xattr.8	2018-04-17 09:40:27.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_acl_xattr.8	2018-06-21 10:04:48.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_acl_xattr
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_ACL_XATTR" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_ACL_XATTR" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_aio_fork.8 samba-4.7.8/docs/manpages/vfs_aio_fork.8
--- samba-4.7.7/docs/manpages/vfs_aio_fork.8	2018-04-17 09:40:27.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_aio_fork.8	2018-06-21 10:04:48.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_aio_fork
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_AIO_FORK" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_AIO_FORK" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_aio_linux.8 samba-4.7.8/docs/manpages/vfs_aio_linux.8
--- samba-4.7.7/docs/manpages/vfs_aio_linux.8	2018-04-17 09:40:27.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_aio_linux.8	2018-06-21 10:04:49.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_aio_linux
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_AIO_LINUX" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_AIO_LINUX" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_aio_pthread.8 samba-4.7.8/docs/manpages/vfs_aio_pthread.8
--- samba-4.7.7/docs/manpages/vfs_aio_pthread.8	2018-04-17 09:40:27.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_aio_pthread.8	2018-06-21 10:04:49.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_aio_pthread
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_AIO_PTHREAD" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_AIO_PTHREAD" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_audit.8 samba-4.7.8/docs/manpages/vfs_audit.8
--- samba-4.7.7/docs/manpages/vfs_audit.8	2018-04-17 09:40:28.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_audit.8	2018-06-21 10:04:49.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_audit
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_AUDIT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_AUDIT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_btrfs.8 samba-4.7.8/docs/manpages/vfs_btrfs.8
--- samba-4.7.7/docs/manpages/vfs_btrfs.8	2018-04-17 09:40:28.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_btrfs.8	2018-06-21 10:04:49.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_btrfs
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_BTRFS" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_BTRFS" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_cacheprime.8 samba-4.7.8/docs/manpages/vfs_cacheprime.8
--- samba-4.7.7/docs/manpages/vfs_cacheprime.8	2018-04-17 09:40:28.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_cacheprime.8	2018-06-21 10:04:49.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_cacheprime
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_CACHEPRIME" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_CACHEPRIME" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_cap.8 samba-4.7.8/docs/manpages/vfs_cap.8
--- samba-4.7.7/docs/manpages/vfs_cap.8	2018-04-17 09:40:28.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_cap.8	2018-06-21 10:04:50.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_cap
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_CAP" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_CAP" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_catia.8 samba-4.7.8/docs/manpages/vfs_catia.8
--- samba-4.7.7/docs/manpages/vfs_catia.8	2018-04-17 09:40:28.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_catia.8	2018-06-21 10:04:50.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_catia
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_CATIA" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_CATIA" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_ceph.8 samba-4.7.8/docs/manpages/vfs_ceph.8
--- samba-4.7.7/docs/manpages/vfs_ceph.8	2018-04-17 09:40:29.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_ceph.8	2018-06-21 10:04:50.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_ceph
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_CEPH" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_CEPH" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_commit.8 samba-4.7.8/docs/manpages/vfs_commit.8
--- samba-4.7.7/docs/manpages/vfs_commit.8	2018-04-17 09:40:29.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_commit.8	2018-06-21 10:04:50.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_commit
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_COMMIT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_COMMIT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_crossrename.8 samba-4.7.8/docs/manpages/vfs_crossrename.8
--- samba-4.7.7/docs/manpages/vfs_crossrename.8	2018-04-17 09:40:29.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_crossrename.8	2018-06-21 10:04:50.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_crossrename
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_CROSSRENAME" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_CROSSRENAME" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_default_quota.8 samba-4.7.8/docs/manpages/vfs_default_quota.8
--- samba-4.7.7/docs/manpages/vfs_default_quota.8	2018-04-17 09:40:29.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_default_quota.8	2018-06-21 10:04:51.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_default_quota
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_DEFAULT_QUOTA" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_DEFAULT_QUOTA" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_dirsort.8 samba-4.7.8/docs/manpages/vfs_dirsort.8
--- samba-4.7.7/docs/manpages/vfs_dirsort.8	2018-04-17 09:40:29.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_dirsort.8	2018-06-21 10:04:51.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_dirsort
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_DIRSORT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_DIRSORT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_extd_audit.8 samba-4.7.8/docs/manpages/vfs_extd_audit.8
--- samba-4.7.7/docs/manpages/vfs_extd_audit.8	2018-04-17 09:40:30.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_extd_audit.8	2018-06-21 10:04:51.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_extd_audit
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_EXTD_AUDIT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_EXTD_AUDIT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_fake_perms.8 samba-4.7.8/docs/manpages/vfs_fake_perms.8
--- samba-4.7.7/docs/manpages/vfs_fake_perms.8	2018-04-17 09:40:30.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_fake_perms.8	2018-06-21 10:04:51.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_fake_perms
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_FAKE_PERMS" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_FAKE_PERMS" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_fileid.8 samba-4.7.8/docs/manpages/vfs_fileid.8
--- samba-4.7.7/docs/manpages/vfs_fileid.8	2018-04-17 09:40:30.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_fileid.8	2018-06-21 10:04:51.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_fileid
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_FILEID" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_FILEID" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_fruit.8 samba-4.7.8/docs/manpages/vfs_fruit.8
--- samba-4.7.7/docs/manpages/vfs_fruit.8	2018-04-17 09:40:30.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_fruit.8	2018-06-21 10:04:52.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_fruit
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_FRUIT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_FRUIT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_full_audit.8 samba-4.7.8/docs/manpages/vfs_full_audit.8
--- samba-4.7.7/docs/manpages/vfs_full_audit.8	2018-04-17 09:40:31.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_full_audit.8	2018-06-21 10:04:52.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_full_audit
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_FULL_AUDIT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_FULL_AUDIT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_glusterfs.8 samba-4.7.8/docs/manpages/vfs_glusterfs.8
--- samba-4.7.7/docs/manpages/vfs_glusterfs.8	2018-04-17 09:40:31.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_glusterfs.8	2018-06-21 10:04:52.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_glusterfs
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_GLUSTERFS" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_GLUSTERFS" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_gpfs.8 samba-4.7.8/docs/manpages/vfs_gpfs.8
--- samba-4.7.7/docs/manpages/vfs_gpfs.8	2018-04-17 09:40:31.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_gpfs.8	2018-06-21 10:04:52.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_gpfs
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_GPFS" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_GPFS" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_linux_xfs_sgid.8 samba-4.7.8/docs/manpages/vfs_linux_xfs_sgid.8
--- samba-4.7.7/docs/manpages/vfs_linux_xfs_sgid.8	2018-04-17 09:40:31.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_linux_xfs_sgid.8	2018-06-21 10:04:52.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_syncops
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_SYNCOPS" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_SYNCOPS" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_media_harmony.8 samba-4.7.8/docs/manpages/vfs_media_harmony.8
--- samba-4.7.7/docs/manpages/vfs_media_harmony.8	2018-04-17 09:40:31.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_media_harmony.8	2018-06-21 10:04:53.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_media_harmony
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_MEDIA_HARMONY" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_MEDIA_HARMONY" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_netatalk.8 samba-4.7.8/docs/manpages/vfs_netatalk.8
--- samba-4.7.7/docs/manpages/vfs_netatalk.8	2018-04-17 09:40:32.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_netatalk.8	2018-06-21 10:04:53.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_netatalk
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_NETATALK" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_NETATALK" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_offline.8 samba-4.7.8/docs/manpages/vfs_offline.8
--- samba-4.7.7/docs/manpages/vfs_offline.8	2018-04-17 09:40:32.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_offline.8	2018-06-21 10:04:53.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_offline
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_OFFLINE" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_OFFLINE" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_prealloc.8 samba-4.7.8/docs/manpages/vfs_prealloc.8
--- samba-4.7.7/docs/manpages/vfs_prealloc.8	2018-04-17 09:40:32.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_prealloc.8	2018-06-21 10:04:53.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_prealloc
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_PREALLOC" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_PREALLOC" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_preopen.8 samba-4.7.8/docs/manpages/vfs_preopen.8
--- samba-4.7.7/docs/manpages/vfs_preopen.8	2018-04-17 09:40:32.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_preopen.8	2018-06-21 10:04:54.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_preopen
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_PREOPEN" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_PREOPEN" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_readahead.8 samba-4.7.8/docs/manpages/vfs_readahead.8
--- samba-4.7.7/docs/manpages/vfs_readahead.8	2018-04-17 09:40:32.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_readahead.8	2018-06-21 10:04:54.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_readahead
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_READAHEAD" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_READAHEAD" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_readonly.8 samba-4.7.8/docs/manpages/vfs_readonly.8
--- samba-4.7.7/docs/manpages/vfs_readonly.8	2018-04-17 09:40:33.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_readonly.8	2018-06-21 10:04:54.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_readonly
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_READONLY" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_READONLY" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_recycle.8 samba-4.7.8/docs/manpages/vfs_recycle.8
--- samba-4.7.7/docs/manpages/vfs_recycle.8	2018-04-17 09:40:33.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_recycle.8	2018-06-21 10:04:54.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_recycle
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_RECYCLE" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_RECYCLE" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_shadow_copy.8 samba-4.7.8/docs/manpages/vfs_shadow_copy.8
--- samba-4.7.7/docs/manpages/vfs_shadow_copy.8	2018-04-17 09:40:33.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_shadow_copy.8	2018-06-21 10:04:54.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_shadow_copy
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_SHADOW_COPY" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_SHADOW_COPY" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_shadow_copy2.8 samba-4.7.8/docs/manpages/vfs_shadow_copy2.8
--- samba-4.7.7/docs/manpages/vfs_shadow_copy2.8	2018-04-17 09:40:33.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_shadow_copy2.8	2018-06-21 10:04:55.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_shadow_copy2
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_SHADOW_COPY2" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_SHADOW_COPY2" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_shell_snap.8 samba-4.7.8/docs/manpages/vfs_shell_snap.8
--- samba-4.7.7/docs/manpages/vfs_shell_snap.8	2018-04-17 09:40:33.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_shell_snap.8	2018-06-21 10:04:55.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_shell_snap
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_SHELL_SNAP" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_SHELL_SNAP" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_snapper.8 samba-4.7.8/docs/manpages/vfs_snapper.8
--- samba-4.7.7/docs/manpages/vfs_snapper.8	2018-04-17 09:40:34.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_snapper.8	2018-06-21 10:04:55.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_snapper
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_SNAPPER" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_SNAPPER" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_streams_depot.8 samba-4.7.8/docs/manpages/vfs_streams_depot.8
--- samba-4.7.7/docs/manpages/vfs_streams_depot.8	2018-04-17 09:40:34.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_streams_depot.8	2018-06-21 10:04:55.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_streams_depot
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_STREAMS_DEPOT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_STREAMS_DEPOT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_streams_xattr.8 samba-4.7.8/docs/manpages/vfs_streams_xattr.8
--- samba-4.7.7/docs/manpages/vfs_streams_xattr.8	2018-04-17 09:40:34.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_streams_xattr.8	2018-06-21 10:04:55.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_streams_xattr
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_STREAMS_XATTR" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_STREAMS_XATTR" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_syncops.8 samba-4.7.8/docs/manpages/vfs_syncops.8
--- samba-4.7.7/docs/manpages/vfs_syncops.8	2018-04-17 09:40:34.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_syncops.8	2018-06-21 10:04:56.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_syncops
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_SYNCOPS" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_SYNCOPS" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_time_audit.8 samba-4.7.8/docs/manpages/vfs_time_audit.8
--- samba-4.7.7/docs/manpages/vfs_time_audit.8	2018-04-17 09:40:35.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_time_audit.8	2018-06-21 10:04:56.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_time_audit
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_TIME_AUDIT" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_TIME_AUDIT" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_tsmsm.8 samba-4.7.8/docs/manpages/vfs_tsmsm.8
--- samba-4.7.7/docs/manpages/vfs_tsmsm.8	2018-04-17 09:40:35.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_tsmsm.8	2018-06-21 10:04:56.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_tsmsm
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_TSMSM" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_TSMSM" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_unityed_media.8 samba-4.7.8/docs/manpages/vfs_unityed_media.8
--- samba-4.7.7/docs/manpages/vfs_unityed_media.8	2018-04-17 09:40:35.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_unityed_media.8	2018-06-21 10:04:56.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_unityed_media
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_UNITYED_MEDIA" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_UNITYED_MEDIA" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_worm.8 samba-4.7.8/docs/manpages/vfs_worm.8
--- samba-4.7.7/docs/manpages/vfs_worm.8	2018-04-17 09:40:35.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_worm.8	2018-06-21 10:04:56.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_worm
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_WORM" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_WORM" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_xattr_tdb.8 samba-4.7.8/docs/manpages/vfs_xattr_tdb.8
--- samba-4.7.7/docs/manpages/vfs_xattr_tdb.8	2018-04-17 09:40:35.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_xattr_tdb.8	2018-06-21 10:04:57.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_xattr_tdb
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_XATTR_TDB" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_XATTR_TDB" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfs_zfsacl.8 samba-4.7.8/docs/manpages/vfs_zfsacl.8
--- samba-4.7.7/docs/manpages/vfs_zfsacl.8	2018-04-17 09:40:36.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfs_zfsacl.8	2018-06-21 10:04:57.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfs_zfsacl
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFS_ZFSACL" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "VFS_ZFSACL" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/vfstest.1 samba-4.7.8/docs/manpages/vfstest.1
--- samba-4.7.7/docs/manpages/vfstest.1	2018-04-17 09:40:36.000000000 +0200
+++ samba-4.7.8/docs/manpages/vfstest.1	2018-06-21 10:04:57.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: vfstest
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "VFSTEST" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "VFSTEST" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/wbinfo.1 samba-4.7.8/docs/manpages/wbinfo.1
--- samba-4.7.7/docs/manpages/wbinfo.1	2018-04-17 09:40:36.000000000 +0200
+++ samba-4.7.8/docs/manpages/wbinfo.1	2018-06-21 10:04:57.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: wbinfo
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: User Commands
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "WBINFO" "1" "04/17/2018" "Samba 4\&.7" "User Commands"
+.TH "WBINFO" "1" "06/21/2018" "Samba 4\&.7" "User Commands"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/winbind_krb5_locator.7 samba-4.7.8/docs/manpages/winbind_krb5_locator.7
--- samba-4.7.7/docs/manpages/winbind_krb5_locator.7	2018-04-17 09:40:36.000000000 +0200
+++ samba-4.7.8/docs/manpages/winbind_krb5_locator.7	2018-06-21 10:04:58.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: winbind_krb5_locator
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: 7
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "WINBIND_KRB5_LOCATOR" "7" "04/17/2018" "Samba 4\&.7" "7"
+.TH "WINBIND_KRB5_LOCATOR" "7" "06/21/2018" "Samba 4\&.7" "7"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/docs/manpages/winbindd.8 samba-4.7.8/docs/manpages/winbindd.8
--- samba-4.7.7/docs/manpages/winbindd.8	2018-04-17 09:40:36.000000000 +0200
+++ samba-4.7.8/docs/manpages/winbindd.8	2018-06-21 10:04:58.000000000 +0200
@@ -2,12 +2,12 @@
 .\"     Title: winbindd
 .\"    Author: [see the "AUTHOR" section]
 .\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
-.\"      Date: 04/17/2018
+.\"      Date: 06/21/2018
 .\"    Manual: System Administration tools
 .\"    Source: Samba 4.7
 .\"  Language: English
 .\"
-.TH "WINBINDD" "8" "04/17/2018" "Samba 4\&.7" "System Administration tools"
+.TH "WINBINDD" "8" "06/21/2018" "Samba 4\&.7" "System Administration tools"
 .\" -----------------------------------------------------------------
 .\" * Define some portability stuff
 .\" -----------------------------------------------------------------
diff -Npur samba-4.7.7/lib/async_req/async_connect_send_test.c samba-4.7.8/lib/async_req/async_connect_send_test.c
--- samba-4.7.7/lib/async_req/async_connect_send_test.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/async_req/async_connect_send_test.c	2018-06-21 10:00:46.000000000 +0200
@@ -17,7 +17,7 @@
  */
 
 #include "replace.h"
-#include "lib/tevent/tevent.h"
+#include <tevent.h>
 #include "lib/async_req/async_sock.h"
 #include <stdio.h>
 #include <string.h>
diff -Npur samba-4.7.7/lib/async_req/async_sock.c samba-4.7.8/lib/async_req/async_sock.c
--- samba-4.7.7/lib/async_req/async_sock.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/async_req/async_sock.c	2018-06-21 10:00:46.000000000 +0200
@@ -738,6 +738,7 @@ static void accept_handler(struct tevent
 		tevent_req_error(req, errno);
 		return;
 	}
+	smb_set_close_on_exec(ret);
 	state->sock = ret;
 	tevent_req_done(req);
 }
diff -Npur samba-4.7.7/lib/tevent/ABI/tevent-0.9.35.sigs samba-4.7.8/lib/tevent/ABI/tevent-0.9.35.sigs
--- samba-4.7.7/lib/tevent/ABI/tevent-0.9.35.sigs	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/lib/tevent/ABI/tevent-0.9.35.sigs	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,99 @@
+_tevent_add_fd: struct tevent_fd *(struct tevent_context *, TALLOC_CTX *, int, uint16_t, tevent_fd_handler_t, void *, const char *, const char *)
+_tevent_add_signal: struct tevent_signal *(struct tevent_context *, TALLOC_CTX *, int, int, tevent_signal_handler_t, void *, const char *, const char *)
+_tevent_add_timer: struct tevent_timer *(struct tevent_context *, TALLOC_CTX *, struct timeval, tevent_timer_handler_t, void *, const char *, const char *)
+_tevent_create_immediate: struct tevent_immediate *(TALLOC_CTX *, const char *)
+_tevent_loop_once: int (struct tevent_context *, const char *)
+_tevent_loop_until: int (struct tevent_context *, bool (*)(void *), void *, const char *)
+_tevent_loop_wait: int (struct tevent_context *, const char *)
+_tevent_queue_create: struct tevent_queue *(TALLOC_CTX *, const char *, const char *)
+_tevent_req_callback_data: void *(struct tevent_req *)
+_tevent_req_cancel: bool (struct tevent_req *, const char *)
+_tevent_req_create: struct tevent_req *(TALLOC_CTX *, void *, size_t, const char *, const char *)
+_tevent_req_data: void *(struct tevent_req *)
+_tevent_req_done: void (struct tevent_req *, const char *)
+_tevent_req_error: bool (struct tevent_req *, uint64_t, const char *)
+_tevent_req_nomem: bool (const void *, struct tevent_req *, const char *)
+_tevent_req_notify_callback: void (struct tevent_req *, const char *)
+_tevent_req_oom: void (struct tevent_req *, const char *)
+_tevent_schedule_immediate: void (struct tevent_immediate *, struct tevent_context *, tevent_immediate_handler_t, void *, const char *, const char *)
+_tevent_threaded_schedule_immediate: void (struct tevent_threaded_context *, struct tevent_immediate *, tevent_immediate_handler_t, void *, const char *, const char *)
+tevent_backend_list: const char **(TALLOC_CTX *)
+tevent_cleanup_pending_signal_handlers: void (struct tevent_signal *)
+tevent_common_add_fd: struct tevent_fd *(struct tevent_context *, TALLOC_CTX *, int, uint16_t, tevent_fd_handler_t, void *, const char *, const char *)
+tevent_common_add_signal: struct tevent_signal *(struct tevent_context *, TALLOC_CTX *, int, int, tevent_signal_handler_t, void *, const char *, const char *)
+tevent_common_add_timer: struct tevent_timer *(struct tevent_context *, TALLOC_CTX *, struct timeval, tevent_timer_handler_t, void *, const char *, const char *)
+tevent_common_add_timer_v2: struct tevent_timer *(struct tevent_context *, TALLOC_CTX *, struct timeval, tevent_timer_handler_t, void *, const char *, const char *)
+tevent_common_check_signal: int (struct tevent_context *)
+tevent_common_context_destructor: int (struct tevent_context *)
+tevent_common_fd_destructor: int (struct tevent_fd *)
+tevent_common_fd_get_flags: uint16_t (struct tevent_fd *)
+tevent_common_fd_set_close_fn: void (struct tevent_fd *, tevent_fd_close_fn_t)
+tevent_common_fd_set_flags: void (struct tevent_fd *, uint16_t)
+tevent_common_have_events: bool (struct tevent_context *)
+tevent_common_loop_immediate: bool (struct tevent_context *)
+tevent_common_loop_timer_delay: struct timeval (struct tevent_context *)
+tevent_common_loop_wait: int (struct tevent_context *, const char *)
+tevent_common_schedule_immediate: void (struct tevent_immediate *, struct tevent_context *, tevent_immediate_handler_t, void *, const char *, const char *)
+tevent_common_threaded_activate_immediate: void (struct tevent_context *)
+tevent_common_wakeup: int (struct tevent_context *)
+tevent_common_wakeup_fd: int (int)
+tevent_common_wakeup_init: int (struct tevent_context *)
+tevent_context_init: struct tevent_context *(TALLOC_CTX *)
+tevent_context_init_byname: struct tevent_context *(TALLOC_CTX *, const char *)
+tevent_context_init_ops: struct tevent_context *(TALLOC_CTX *, const struct tevent_ops *, void *)
+tevent_debug: void (struct tevent_context *, enum tevent_debug_level, const char *, ...)
+tevent_fd_get_flags: uint16_t (struct tevent_fd *)
+tevent_fd_set_auto_close: void (struct tevent_fd *)
+tevent_fd_set_close_fn: void (struct tevent_fd *, tevent_fd_close_fn_t)
+tevent_fd_set_flags: void (struct tevent_fd *, uint16_t)
+tevent_get_trace_callback: void (struct tevent_context *, tevent_trace_callback_t *, void *)
+tevent_loop_allow_nesting: void (struct tevent_context *)
+tevent_loop_set_nesting_hook: void (struct tevent_context *, tevent_nesting_hook, void *)
+tevent_num_signals: size_t (void)
+tevent_queue_add: bool (struct tevent_queue *, struct tevent_context *, struct tevent_req *, tevent_queue_trigger_fn_t, void *)
+tevent_queue_add_entry: struct tevent_queue_entry *(struct tevent_queue *, struct tevent_context *, struct tevent_req *, tevent_queue_trigger_fn_t, void *)
+tevent_queue_add_optimize_empty: struct tevent_queue_entry *(struct tevent_queue *, struct tevent_context *, struct tevent_req *, tevent_queue_trigger_fn_t, void *)
+tevent_queue_length: size_t (struct tevent_queue *)
+tevent_queue_running: bool (struct tevent_queue *)
+tevent_queue_start: void (struct tevent_queue *)
+tevent_queue_stop: void (struct tevent_queue *)
+tevent_queue_wait_recv: bool (struct tevent_req *)
+tevent_queue_wait_send: struct tevent_req *(TALLOC_CTX *, struct tevent_context *, struct tevent_queue *)
+tevent_re_initialise: int (struct tevent_context *)
+tevent_register_backend: bool (const char *, const struct tevent_ops *)
+tevent_req_default_print: char *(struct tevent_req *, TALLOC_CTX *)
+tevent_req_defer_callback: void (struct tevent_req *, struct tevent_context *)
+tevent_req_is_error: bool (struct tevent_req *, enum tevent_req_state *, uint64_t *)
+tevent_req_is_in_progress: bool (struct tevent_req *)
+tevent_req_poll: bool (struct tevent_req *, struct tevent_context *)
+tevent_req_post: struct tevent_req *(struct tevent_req *, struct tevent_context *)
+tevent_req_print: char *(TALLOC_CTX *, struct tevent_req *)
+tevent_req_received: void (struct tevent_req *)
+tevent_req_reset_endtime: void (struct tevent_req *)
+tevent_req_set_callback: void (struct tevent_req *, tevent_req_fn, void *)
+tevent_req_set_cancel_fn: void (struct tevent_req *, tevent_req_cancel_fn)
+tevent_req_set_cleanup_fn: void (struct tevent_req *, tevent_req_cleanup_fn)
+tevent_req_set_endtime: bool (struct tevent_req *, struct tevent_context *, struct timeval)
+tevent_req_set_print_fn: void (struct tevent_req *, tevent_req_print_fn)
+tevent_sa_info_queue_count: size_t (void)
+tevent_set_abort_fn: void (void (*)(const char *))
+tevent_set_debug: int (struct tevent_context *, void (*)(void *, enum tevent_debug_level, const char *, va_list), void *)
+tevent_set_debug_stderr: int (struct tevent_context *)
+tevent_set_default_backend: void (const char *)
+tevent_set_trace_callback: void (struct tevent_context *, tevent_trace_callback_t, void *)
+tevent_signal_support: bool (struct tevent_context *)
+tevent_thread_proxy_create: struct tevent_thread_proxy *(struct tevent_context *)
+tevent_thread_proxy_schedule: void (struct tevent_thread_proxy *, struct tevent_immediate **, tevent_immediate_handler_t, void *)
+tevent_threaded_context_create: struct tevent_threaded_context *(TALLOC_CTX *, struct tevent_context *)
+tevent_timeval_add: struct timeval (const struct timeval *, uint32_t, uint32_t)
+tevent_timeval_compare: int (const struct timeval *, const struct timeval *)
+tevent_timeval_current: struct timeval (void)
+tevent_timeval_current_ofs: struct timeval (uint32_t, uint32_t)
+tevent_timeval_is_zero: bool (const struct timeval *)
+tevent_timeval_set: struct timeval (uint32_t, uint32_t)
+tevent_timeval_until: struct timeval (const struct timeval *, const struct timeval *)
+tevent_timeval_zero: struct timeval (void)
+tevent_trace_point_callback: void (struct tevent_context *, enum tevent_trace_point)
+tevent_update_timer: void (struct tevent_timer *, struct timeval)
+tevent_wakeup_recv: bool (struct tevent_req *)
+tevent_wakeup_send: struct tevent_req *(TALLOC_CTX *, struct tevent_context *, struct timeval)
diff -Npur samba-4.7.7/lib/tevent/ABI/tevent-0.9.36.sigs samba-4.7.8/lib/tevent/ABI/tevent-0.9.36.sigs
--- samba-4.7.7/lib/tevent/ABI/tevent-0.9.36.sigs	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/lib/tevent/ABI/tevent-0.9.36.sigs	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,100 @@
+_tevent_add_fd: struct tevent_fd *(struct tevent_context *, TALLOC_CTX *, int, uint16_t, tevent_fd_handler_t, void *, const char *, const char *)
+_tevent_add_signal: struct tevent_signal *(struct tevent_context *, TALLOC_CTX *, int, int, tevent_signal_handler_t, void *, const char *, const char *)
+_tevent_add_timer: struct tevent_timer *(struct tevent_context *, TALLOC_CTX *, struct timeval, tevent_timer_handler_t, void *, const char *, const char *)
+_tevent_create_immediate: struct tevent_immediate *(TALLOC_CTX *, const char *)
+_tevent_loop_once: int (struct tevent_context *, const char *)
+_tevent_loop_until: int (struct tevent_context *, bool (*)(void *), void *, const char *)
+_tevent_loop_wait: int (struct tevent_context *, const char *)
+_tevent_queue_create: struct tevent_queue *(TALLOC_CTX *, const char *, const char *)
+_tevent_req_callback_data: void *(struct tevent_req *)
+_tevent_req_cancel: bool (struct tevent_req *, const char *)
+_tevent_req_create: struct tevent_req *(TALLOC_CTX *, void *, size_t, const char *, const char *)
+_tevent_req_data: void *(struct tevent_req *)
+_tevent_req_done: void (struct tevent_req *, const char *)
+_tevent_req_error: bool (struct tevent_req *, uint64_t, const char *)
+_tevent_req_nomem: bool (const void *, struct tevent_req *, const char *)
+_tevent_req_notify_callback: void (struct tevent_req *, const char *)
+_tevent_req_oom: void (struct tevent_req *, const char *)
+_tevent_schedule_immediate: void (struct tevent_immediate *, struct tevent_context *, tevent_immediate_handler_t, void *, const char *, const char *)
+_tevent_threaded_schedule_immediate: void (struct tevent_threaded_context *, struct tevent_immediate *, tevent_immediate_handler_t, void *, const char *, const char *)
+tevent_backend_list: const char **(TALLOC_CTX *)
+tevent_cleanup_pending_signal_handlers: void (struct tevent_signal *)
+tevent_common_add_fd: struct tevent_fd *(struct tevent_context *, TALLOC_CTX *, int, uint16_t, tevent_fd_handler_t, void *, const char *, const char *)
+tevent_common_add_signal: struct tevent_signal *(struct tevent_context *, TALLOC_CTX *, int, int, tevent_signal_handler_t, void *, const char *, const char *)
+tevent_common_add_timer: struct tevent_timer *(struct tevent_context *, TALLOC_CTX *, struct timeval, tevent_timer_handler_t, void *, const char *, const char *)
+tevent_common_add_timer_v2: struct tevent_timer *(struct tevent_context *, TALLOC_CTX *, struct timeval, tevent_timer_handler_t, void *, const char *, const char *)
+tevent_common_check_signal: int (struct tevent_context *)
+tevent_common_context_destructor: int (struct tevent_context *)
+tevent_common_fd_destructor: int (struct tevent_fd *)
+tevent_common_fd_get_flags: uint16_t (struct tevent_fd *)
+tevent_common_fd_set_close_fn: void (struct tevent_fd *, tevent_fd_close_fn_t)
+tevent_common_fd_set_flags: void (struct tevent_fd *, uint16_t)
+tevent_common_have_events: bool (struct tevent_context *)
+tevent_common_loop_immediate: bool (struct tevent_context *)
+tevent_common_loop_timer_delay: struct timeval (struct tevent_context *)
+tevent_common_loop_wait: int (struct tevent_context *, const char *)
+tevent_common_schedule_immediate: void (struct tevent_immediate *, struct tevent_context *, tevent_immediate_handler_t, void *, const char *, const char *)
+tevent_common_threaded_activate_immediate: void (struct tevent_context *)
+tevent_common_wakeup: int (struct tevent_context *)
+tevent_common_wakeup_fd: int (int)
+tevent_common_wakeup_init: int (struct tevent_context *)
+tevent_context_init: struct tevent_context *(TALLOC_CTX *)
+tevent_context_init_byname: struct tevent_context *(TALLOC_CTX *, const char *)
+tevent_context_init_ops: struct tevent_context *(TALLOC_CTX *, const struct tevent_ops *, void *)
+tevent_debug: void (struct tevent_context *, enum tevent_debug_level, const char *, ...)
+tevent_fd_get_flags: uint16_t (struct tevent_fd *)
+tevent_fd_set_auto_close: void (struct tevent_fd *)
+tevent_fd_set_close_fn: void (struct tevent_fd *, tevent_fd_close_fn_t)
+tevent_fd_set_flags: void (struct tevent_fd *, uint16_t)
+tevent_get_trace_callback: void (struct tevent_context *, tevent_trace_callback_t *, void *)
+tevent_loop_allow_nesting: void (struct tevent_context *)
+tevent_loop_set_nesting_hook: void (struct tevent_context *, tevent_nesting_hook, void *)
+tevent_num_signals: size_t (void)
+tevent_queue_add: bool (struct tevent_queue *, struct tevent_context *, struct tevent_req *, tevent_queue_trigger_fn_t, void *)
+tevent_queue_add_entry: struct tevent_queue_entry *(struct tevent_queue *, struct tevent_context *, struct tevent_req *, tevent_queue_trigger_fn_t, void *)
+tevent_queue_add_optimize_empty: struct tevent_queue_entry *(struct tevent_queue *, struct tevent_context *, struct tevent_req *, tevent_queue_trigger_fn_t, void *)
+tevent_queue_entry_untrigger: void (struct tevent_queue_entry *)
+tevent_queue_length: size_t (struct tevent_queue *)
+tevent_queue_running: bool (struct tevent_queue *)
+tevent_queue_start: void (struct tevent_queue *)
+tevent_queue_stop: void (struct tevent_queue *)
+tevent_queue_wait_recv: bool (struct tevent_req *)
+tevent_queue_wait_send: struct tevent_req *(TALLOC_CTX *, struct tevent_context *, struct tevent_queue *)
+tevent_re_initialise: int (struct tevent_context *)
+tevent_register_backend: bool (const char *, const struct tevent_ops *)
+tevent_req_default_print: char *(struct tevent_req *, TALLOC_CTX *)
+tevent_req_defer_callback: void (struct tevent_req *, struct tevent_context *)
+tevent_req_is_error: bool (struct tevent_req *, enum tevent_req_state *, uint64_t *)
+tevent_req_is_in_progress: bool (struct tevent_req *)
+tevent_req_poll: bool (struct tevent_req *, struct tevent_context *)
+tevent_req_post: struct tevent_req *(struct tevent_req *, struct tevent_context *)
+tevent_req_print: char *(TALLOC_CTX *, struct tevent_req *)
+tevent_req_received: void (struct tevent_req *)
+tevent_req_reset_endtime: void (struct tevent_req *)
+tevent_req_set_callback: void (struct tevent_req *, tevent_req_fn, void *)
+tevent_req_set_cancel_fn: void (struct tevent_req *, tevent_req_cancel_fn)
+tevent_req_set_cleanup_fn: void (struct tevent_req *, tevent_req_cleanup_fn)
+tevent_req_set_endtime: bool (struct tevent_req *, struct tevent_context *, struct timeval)
+tevent_req_set_print_fn: void (struct tevent_req *, tevent_req_print_fn)
+tevent_sa_info_queue_count: size_t (void)
+tevent_set_abort_fn: void (void (*)(const char *))
+tevent_set_debug: int (struct tevent_context *, void (*)(void *, enum tevent_debug_level, const char *, va_list), void *)
+tevent_set_debug_stderr: int (struct tevent_context *)
+tevent_set_default_backend: void (const char *)
+tevent_set_trace_callback: void (struct tevent_context *, tevent_trace_callback_t, void *)
+tevent_signal_support: bool (struct tevent_context *)
+tevent_thread_proxy_create: struct tevent_thread_proxy *(struct tevent_context *)
+tevent_thread_proxy_schedule: void (struct tevent_thread_proxy *, struct tevent_immediate **, tevent_immediate_handler_t, void *)
+tevent_threaded_context_create: struct tevent_threaded_context *(TALLOC_CTX *, struct tevent_context *)
+tevent_timeval_add: struct timeval (const struct timeval *, uint32_t, uint32_t)
+tevent_timeval_compare: int (const struct timeval *, const struct timeval *)
+tevent_timeval_current: struct timeval (void)
+tevent_timeval_current_ofs: struct timeval (uint32_t, uint32_t)
+tevent_timeval_is_zero: bool (const struct timeval *)
+tevent_timeval_set: struct timeval (uint32_t, uint32_t)
+tevent_timeval_until: struct timeval (const struct timeval *, const struct timeval *)
+tevent_timeval_zero: struct timeval (void)
+tevent_trace_point_callback: void (struct tevent_context *, enum tevent_trace_point)
+tevent_update_timer: void (struct tevent_timer *, struct timeval)
+tevent_wakeup_recv: bool (struct tevent_req *)
+tevent_wakeup_send: struct tevent_req *(TALLOC_CTX *, struct tevent_context *, struct timeval)
diff -Npur samba-4.7.7/lib/tevent/echo_server.c samba-4.7.8/lib/tevent/echo_server.c
--- samba-4.7.7/lib/tevent/echo_server.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/tevent/echo_server.c	2018-06-21 10:00:46.000000000 +0200
@@ -118,6 +118,7 @@ static void accept_handler(struct tevent
 		tevent_req_error(req, errno);
 		return;
 	}
+	smb_set_close_on_exec(ret);
 	state->sock = ret;
 	tevent_req_done(req);
 }
diff -Npur samba-4.7.7/lib/tevent/testsuite.c samba-4.7.8/lib/tevent/testsuite.c
--- samba-4.7.7/lib/tevent/testsuite.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/tevent/testsuite.c	2018-06-21 10:00:46.000000000 +0200
@@ -25,7 +25,7 @@
 */
 
 #include "includes.h"
-#include "lib/tevent/tevent.h"
+#include "tevent.h"
 #include "system/filesys.h"
 #include "system/select.h"
 #include "system/network.h"
diff -Npur samba-4.7.7/lib/tevent/tevent.h samba-4.7.8/lib/tevent/tevent.h
--- samba-4.7.7/lib/tevent/tevent.h	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/tevent/tevent.h	2018-06-21 10:00:46.000000000 +0200
@@ -936,8 +936,8 @@ void tevent_req_set_cancel_fn(struct tev
  *
  * @param[in]  req      The request to use.
  *
- * @return              This function returns true is the request is cancelable,
- *                      othererwise false is returned.
+ * @return              This function returns true if the request is
+ *                      cancelable, otherwise false is returned.
  *
  * @note Even if the function returns true, the caller need to wait
  *       for the function to complete normally.
@@ -1611,6 +1611,9 @@ struct tevent_queue_entry *tevent_queue_
  * already called tevent_req_notify_callback(), tevent_req_error(),
  * tevent_req_done() or a similar function.
  *
+ * The trigger function has no chance to see the returned
+ * queue_entry in the optimized case.
+ *
  * The request can be removed from the queue by calling talloc_free()
  * (or a similar function) on the returned queue entry.
  *
@@ -1641,6 +1644,28 @@ struct tevent_queue_entry *tevent_queue_
 					void *private_data);
 
 /**
+ * @brief Untrigger an already triggered queue entry.
+ *
+ * If a trigger function detects that it needs to remain
+ * in the queue, it needs to call tevent_queue_stop()
+ * followed by tevent_queue_entry_untrigger().
+ *
+ * @note In order to call tevent_queue_entry_untrigger()
+ * the queue must be already stopped and the given queue_entry
+ * must be the first one in the queue! Otherwise it calls abort().
+ *
+ * @note You can't use this together with tevent_queue_add_optimize_empty()
+ * because the trigger function don't have access to the quene entry
+ * in the case of an empty queue.
+ *
+ * @param[in]  queue_entry The queue entry to rearm.
+ *
+ * @see tevent_queue_add_entry()
+ * @see tevent_queue_stop()
+ */
+void tevent_queue_entry_untrigger(struct tevent_queue_entry *entry);
+
+/**
  * @brief Start a tevent queue.
  *
  * The queue is started by default.
diff -Npur samba-4.7.7/lib/tevent/tevent_internal.h samba-4.7.8/lib/tevent/tevent_internal.h
--- samba-4.7.7/lib/tevent/tevent_internal.h	2017-11-15 08:42:13.000000000 +0100
+++ samba-4.7.8/lib/tevent/tevent_internal.h	2018-06-21 10:00:46.000000000 +0200
@@ -235,7 +235,6 @@ struct tevent_threaded_context {
 	pthread_mutex_t event_ctx_mutex;
 #endif
 	struct tevent_context *event_ctx;
-	int wakeup_fd;
 };
 
 struct tevent_debug_ops {
diff -Npur samba-4.7.7/lib/tevent/tevent_queue.c samba-4.7.8/lib/tevent/tevent_queue.c
--- samba-4.7.7/lib/tevent/tevent_queue.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/tevent/tevent_queue.c	2018-06-21 10:00:46.000000000 +0200
@@ -266,6 +266,19 @@ struct tevent_queue_entry *tevent_queue_
 					 trigger, private_data, true);
 }
 
+void tevent_queue_entry_untrigger(struct tevent_queue_entry *entry)
+{
+	if (entry->queue->running) {
+		abort();
+	}
+
+	if (entry->queue->list != entry) {
+		abort();
+	}
+
+	entry->triggered = false;
+}
+
 void tevent_queue_start(struct tevent_queue *queue)
 {
 	if (queue->running) {
diff -Npur samba-4.7.7/lib/tevent/tevent_threads.c samba-4.7.8/lib/tevent/tevent_threads.c
--- samba-4.7.7/lib/tevent/tevent_threads.c	2017-11-15 08:42:13.000000000 +0100
+++ samba-4.7.8/lib/tevent/tevent_threads.c	2018-06-21 10:00:46.000000000 +0200
@@ -424,7 +424,6 @@ struct tevent_threaded_context *tevent_t
 		return NULL;
 	}
 	tctx->event_ctx = ev;
-	tctx->wakeup_fd = ev->wakeup_fd;
 
 	ret = pthread_mutex_init(&tctx->event_ctx_mutex, NULL);
 	if (ret != 0) {
@@ -489,14 +488,13 @@ void _tevent_threaded_schedule_immediate
 	}
 
 	DLIST_ADD_END(ev->scheduled_immediates, im);
+	wakeup_fd = ev->wakeup_fd;
 
 	ret = pthread_mutex_unlock(&ev->scheduled_mutex);
 	if (ret != 0) {
 		abort();
 	}
 
-	wakeup_fd = tctx->wakeup_fd;
-
 	ret = pthread_mutex_unlock(&tctx->event_ctx_mutex);
 	if (ret != 0) {
 		abort();
diff -Npur samba-4.7.7/lib/tevent/wscript samba-4.7.8/lib/tevent/wscript
--- samba-4.7.7/lib/tevent/wscript	2017-11-15 08:42:13.000000000 +0100
+++ samba-4.7.8/lib/tevent/wscript	2018-06-21 10:00:46.000000000 +0200
@@ -1,7 +1,7 @@
 #!/usr/bin/env python
 
 APPNAME = 'tevent'
-VERSION = '0.9.34'
+VERSION = '0.9.36'
 
 blddir = 'bin'
 
diff -Npur samba-4.7.7/lib/util/fault.c samba-4.7.8/lib/util/fault.c
--- samba-4.7.7/lib/util/fault.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/util/fault.c	2018-06-21 10:00:46.000000000 +0200
@@ -3,6 +3,7 @@
    Critical Fault handling
    Copyright (C) Andrew Tridgell 1992-1998
    Copyright (C) Tim Prouty 2009
+   Copyright (C) James Peach 2006
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -123,6 +124,10 @@ _PUBLIC_ const char *panic_action = NULL
 static void smb_panic_default(const char *why) _NORETURN_;
 static void smb_panic_default(const char *why)
 {
+	DBG_ERR("PANIC (pid %llu): %s\n",
+		    (unsigned long long)getpid(), why);
+	log_stack_trace();
+
 #if defined(HAVE_PRCTL) && defined(PR_SET_PTRACER)
 	/*
 	 * Make sure all children can attach a debugger.
@@ -148,7 +153,6 @@ static void smb_panic_default(const char
 					  WEXITSTATUS(result)));
 		}
 	}
-	DEBUG(0,("PANIC: %s\n", why));
 
 #ifdef SIGABRT
 	CatchSignal(SIGABRT, SIG_DFL);
@@ -168,3 +172,104 @@ _PUBLIC_ void smb_panic(const char *why)
 	}
 	smb_panic_default(why);
 }
+
+/*******************************************************************
+ Print a backtrace of the stack to the debug log. This function
+ DELIBERATELY LEAKS MEMORY. The expectation is that you should
+ exit shortly after calling it.
+********************************************************************/
+
+/* Buffer size to use when printing backtraces */
+#define BACKTRACE_STACK_SIZE 64
+
+
+#ifdef HAVE_LIBUNWIND_H
+#include <libunwind.h>
+#endif
+
+#ifdef HAVE_EXECINFO_H
+#include <execinfo.h>
+#endif
+
+void log_stack_trace(void)
+{
+#ifdef HAVE_LIBUNWIND
+	/* Try to use libunwind before any other technique since on ia64
+	 * libunwind correctly walks the stack in more circumstances than
+	 * backtrace.
+	 */
+	unw_cursor_t cursor;
+	unw_context_t uc;
+	unsigned i = 0;
+
+	char procname[256];
+	unw_word_t ip, sp, off;
+
+	procname[sizeof(procname) - 1] = '\0';
+
+	if (unw_getcontext(&uc) != 0) {
+		goto libunwind_failed;
+	}
+
+	if (unw_init_local(&cursor, &uc) != 0) {
+		goto libunwind_failed;
+	}
+
+	DEBUG(0, ("BACKTRACE:\n"));
+
+	do {
+	    ip = sp = 0;
+	    unw_get_reg(&cursor, UNW_REG_IP, &ip);
+	    unw_get_reg(&cursor, UNW_REG_SP, &sp);
+
+	    switch (unw_get_proc_name(&cursor,
+			procname, sizeof(procname) - 1, &off) ) {
+	    case 0:
+		    /* Name found. */
+	    case -UNW_ENOMEM:
+		    /* Name truncated. */
+		    DEBUGADD(0, (" #%u %s + %#llx [ip=%#llx] [sp=%#llx]\n",
+			    i, procname, (long long)off,
+			    (long long)ip, (long long) sp));
+		    break;
+	    default:
+	    /* case -UNW_ENOINFO: */
+	    /* case -UNW_EUNSPEC: */
+		    /* No symbol name found. */
+		    DEBUGADD(0, (" #%u %s [ip=%#llx] [sp=%#llx]\n",
+			    i, "<unknown symbol>",
+			    (long long)ip, (long long) sp));
+	    }
+	    ++i;
+	} while (unw_step(&cursor) > 0);
+
+	return;
+
+libunwind_failed:
+	DEBUG(0, ("unable to produce a stack trace with libunwind\n"));
+
+#elif HAVE_BACKTRACE_SYMBOLS
+	void *backtrace_stack[BACKTRACE_STACK_SIZE];
+	size_t backtrace_size;
+	char **backtrace_strings;
+
+	/* get the backtrace (stack frames) */
+	backtrace_size = backtrace(backtrace_stack,BACKTRACE_STACK_SIZE);
+	backtrace_strings = backtrace_symbols(backtrace_stack, backtrace_size);
+
+	DEBUG(0, ("BACKTRACE: %lu stack frames:\n",
+		  (unsigned long)backtrace_size));
+
+	if (backtrace_strings) {
+		int i;
+
+		for (i = 0; i < backtrace_size; i++)
+			DEBUGADD(0, (" #%u %s\n", i, backtrace_strings[i]));
+
+		/* Leak the backtrace_strings, rather than risk what free() might do */
+	}
+
+#else
+	DEBUG(0, ("unable to produce a stack trace on this platform\n"));
+#endif
+}
diff -Npur samba-4.7.7/lib/util/fault.h samba-4.7.8/lib/util/fault.h
--- samba-4.7.7/lib/util/fault.h	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/util/fault.h	2018-06-21 10:00:46.000000000 +0200
@@ -53,5 +53,6 @@ void fault_setup(void);
 void fault_setup_disable(void);
 _NORETURN_ void smb_panic(const char *reason);
 
+void log_stack_trace(void);
 
 #endif /* _SAMBA_FAULT_H_ */
diff -Npur samba-4.7.7/lib/util/memcache.h samba-4.7.8/lib/util/memcache.h
--- samba-4.7.7/lib/util/memcache.h	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/util/memcache.h	2018-06-21 10:00:46.000000000 +0200
@@ -44,7 +44,8 @@ enum memcache_number {
 	SINGLETON_CACHE_TALLOC,	/* talloc */
 	SINGLETON_CACHE,
 	SMB1_SEARCH_OFFSET_MAP,
-	SHARE_MODE_LOCK_CACHE	/* talloc */
+	SHARE_MODE_LOCK_CACHE,	/* talloc */
+	DFREE_CACHE,
 };
 
 /*
diff -Npur samba-4.7.7/lib/util/strv.c samba-4.7.8/lib/util/strv.c
--- samba-4.7.7/lib/util/strv.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/util/strv.c	2018-06-21 10:00:46.000000000 +0200
@@ -62,54 +62,61 @@ int strv_append(TALLOC_CTX *mem_ctx, cha
 	return _strv_append(mem_ctx, strv, src, talloc_array_length(src));
 }
 
-static bool strv_valid_entry(const char *strv, const char *entry,
-			     size_t *strv_len, size_t *entry_len)
+static bool strv_valid_entry(const char *strv, size_t strv_len,
+			     const char *entry, size_t *entry_len)
 {
-	size_t len;
-
-	len = talloc_array_length(strv);
-	if (len == 0) {
+	if (strv_len == 0) {
 		return false;
 	}
-	if (strv[len-1] != '\0') {
+	if (strv[strv_len-1] != '\0') {
 		return false;
 	}
 
 	if (entry < strv) {
 		return false;
 	}
-	if (entry >= (strv+len)) {
+	if (entry >= (strv+strv_len)) {
 		return false;
 	}
 
-	*strv_len = len;
-	*entry_len = strlen(entry);
+	if (entry_len != NULL) {
+		*entry_len = strlen(entry);
+	}
 
 	return true;
 }
 
-char *strv_next(char *strv, const char *entry)
+const char *strv_len_next(const char *strv, size_t strv_len,
+			  const char *entry)
 {
-	size_t len, entry_len;
-	char *result;
+	size_t entry_len;
 
 	if (entry == NULL) {
-		if (strv_valid_entry(strv, strv, &len, &entry_len)) {
+		if (strv_valid_entry(strv, strv_len, strv, NULL)) {
 			return strv;
 		}
 		return NULL;
 	}
 
-	if (!strv_valid_entry(strv, entry, &len, &entry_len)) {
+	if (!strv_valid_entry(strv, strv_len, entry, &entry_len)) {
 		return NULL;
 	}
-	result = &strv[entry - strv]; /* avoid const problems with this stmt */
-	result += entry_len + 1;
 
-	if (result >= (strv + len)) {
+	entry += entry_len+1;
+
+	if (entry >= (strv + strv_len)) {
 		return NULL;
 	}
-	return result;
+	return entry;
+}
+
+char *strv_next(char *strv, const char *entry)
+{
+	size_t len = talloc_array_length(strv);
+	const char *result;
+
+	result = strv_len_next(strv, len, entry);
+	return discard_const_p(char, result);
 }
 
 size_t strv_count(char *strv)
@@ -139,13 +146,14 @@ char *strv_find(char *strv, const char *
 
 void strv_delete(char **strv, char *entry)
 {
-	size_t len, entry_len;
+	size_t len = talloc_array_length(*strv);
+	size_t entry_len;
 
 	if (entry == NULL) {
 		return;
 	}
 
-	if (!strv_valid_entry(*strv, entry, &len, &entry_len)) {
+	if (!strv_valid_entry(*strv, len, entry, &entry_len)) {
 		return;
 	}
 	entry_len += 1;
diff -Npur samba-4.7.7/lib/util/strv.h samba-4.7.8/lib/util/strv.h
--- samba-4.7.7/lib/util/strv.h	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/util/strv.h	2018-06-21 10:00:46.000000000 +0200
@@ -26,6 +26,8 @@ int strv_add(TALLOC_CTX *mem_ctx, char *
 int strv_addn(TALLOC_CTX *mem_ctx, char **strv, const char *src, size_t srclen);
 int strv_append(TALLOC_CTX *mem_ctx, char **strv, const char *src);
 char *strv_next(char *strv, const char *entry);
+const char *strv_len_next(const char *strv, size_t strv_len,
+			  const char *entry);
 char *strv_find(char *strv, const char *entry);
 size_t strv_count(char *strv);
 void strv_delete(char **strv, char *entry);
diff -Npur samba-4.7.7/lib/util/tests/tfork.c samba-4.7.8/lib/util/tests/tfork.c
--- samba-4.7.7/lib/util/tests/tfork.c	2017-09-17 21:15:34.000000000 +0200
+++ samba-4.7.8/lib/util/tests/tfork.c	2018-06-21 10:00:46.000000000 +0200
@@ -32,7 +32,6 @@
 #include "lib/util/sys_rw.h"
 #ifdef HAVE_PTHREAD
 #include <pthread.h>
-#include <sys/syscall.h>
 #endif
 
 static bool test_tfork_simple(struct torture_context *tctx)
diff -Npur samba-4.7.7/lib/util/wscript_configure samba-4.7.8/lib/util/wscript_configure
--- samba-4.7.7/lib/util/wscript_configure	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/lib/util/wscript_configure	2018-06-21 10:00:46.000000000 +0200
@@ -6,6 +6,7 @@ if Options.options.disable_fault_handlin
 
 # backtrace could be in libexecinfo or in libc
 conf.CHECK_FUNCS_IN('backtrace backtrace_symbols', 'execinfo', checklibc=True, headers='execinfo.h')
+conf.CHECK_HEADERS('execinfo.h libunwind.h')
 
 conf.CHECK_STRUCTURE_MEMBER('struct statvfs', 'f_frsize', define='HAVE_FRSIZE', headers='sys/statvfs.h')
 
diff -Npur samba-4.7.7/libcli/smb/smb2cli_notify.c samba-4.7.8/libcli/smb/smb2cli_notify.c
--- samba-4.7.7/libcli/smb/smb2cli_notify.c	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/libcli/smb/smb2cli_notify.c	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,214 @@
+/*
+   Unix SMB/CIFS implementation.
+   smb2 lib
+   Copyright (C) Volker Lendecke 2017
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "includes.h"
+#include "system/network.h"
+#include "lib/util/tevent_ntstatus.h"
+#include "smb_common.h"
+#include "smbXcli_base.h"
+#include "librpc/gen_ndr/ndr_notify.h"
+
+struct smb2cli_notify_state {
+	uint8_t fixed[32];
+
+	struct iovec *recv_iov;
+	uint8_t *data;
+	uint32_t data_length;
+
+	struct tevent_req *subreq;
+};
+
+static void smb2cli_notify_done(struct tevent_req *subreq);
+static void smb2cli_notify_timedout(struct tevent_req *subreq);
+
+struct tevent_req *smb2cli_notify_send(TALLOC_CTX *mem_ctx,
+				       struct tevent_context *ev,
+				       struct smbXcli_conn *conn,
+				       uint32_t timeout_msec,
+				       struct smbXcli_session *session,
+				       struct smbXcli_tcon *tcon,
+				       uint32_t output_buffer_length,
+				       uint64_t fid_persistent,
+				       uint64_t fid_volatile,
+				       uint32_t completion_filter,
+				       bool recursive)
+{
+	struct tevent_req *req, *subreq;
+	struct smb2cli_notify_state *state;
+	uint8_t *fixed;
+
+	req = tevent_req_create(mem_ctx, &state,
+				struct smb2cli_notify_state);
+	if (req == NULL) {
+		return NULL;
+	}
+	fixed = state->fixed;
+	SSVAL(fixed, 0, 32);
+	SSVAL(fixed, 2, recursive ? SMB2_WATCH_TREE : 0);
+	SIVAL(fixed, 4, output_buffer_length);
+	SBVAL(fixed, 8, fid_persistent);
+	SBVAL(fixed, 16, fid_volatile);
+	SIVAL(fixed, 24, completion_filter);
+	SIVAL(fixed, 28, 0); 	/* reserved */
+
+	state->subreq = smb2cli_req_send(state, ev, conn, SMB2_OP_NOTIFY,
+					 0, 0, /* flags */
+					 0,	/* timeout_msec */
+					 tcon,
+					 session,
+					 state->fixed, sizeof(state->fixed),
+					 NULL, 0, /* dyn* */
+					 0); /* max_dyn_len */
+	if (tevent_req_nomem(state->subreq, req)) {
+		return tevent_req_post(req, ev);
+	}
+	tevent_req_set_callback(state->subreq, smb2cli_notify_done, req);
+
+	subreq = tevent_wakeup_send(state, ev,
+				    timeval_current_ofs_msec(timeout_msec));
+	if (tevent_req_nomem(subreq, req)) {
+		return tevent_req_post(req, ev);
+	}
+	tevent_req_set_callback(subreq, smb2cli_notify_timedout, req);
+
+	return req;
+}
+
+static void smb2cli_notify_timedout(struct tevent_req *subreq)
+{
+	struct tevent_req *req = tevent_req_callback_data(
+		subreq, struct tevent_req);
+	struct smb2cli_notify_state *state = tevent_req_data(
+		req, struct smb2cli_notify_state);
+	bool ok;
+
+	ok = tevent_wakeup_recv(subreq);
+	if (!ok) {
+		tevent_req_nterror(req, NT_STATUS_INTERNAL_ERROR);
+		return;
+	}
+
+	ok = tevent_req_cancel(state->subreq);
+	if (!ok) {
+		tevent_req_nterror(req, NT_STATUS_INTERNAL_ERROR);
+		return;
+	}
+}
+
+static void smb2cli_notify_done(struct tevent_req *subreq)
+{
+	struct tevent_req *req = tevent_req_callback_data(
+		subreq, struct tevent_req);
+	struct smb2cli_notify_state *state = tevent_req_data(
+		req, struct smb2cli_notify_state);
+	NTSTATUS status;
+	struct iovec *iov;
+	uint16_t data_offset;
+	static const struct smb2cli_req_expected_response expected[] = {
+	{
+		.status = NT_STATUS_OK,
+		.body_size = 0x09
+	}
+	};
+
+	status = smb2cli_req_recv(subreq, state, &iov,
+				  expected, ARRAY_SIZE(expected));
+	TALLOC_FREE(subreq);
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_CANCELLED)) {
+		status = NT_STATUS_IO_TIMEOUT;
+	}
+	if (tevent_req_nterror(req, status)) {
+		return;
+	}
+
+	data_offset = SVAL(iov[1].iov_base, 2);
+	state->data_length = IVAL(iov[1].iov_base, 4);
+
+	if ((data_offset != SMB2_HDR_BODY + 8) ||
+	    (state->data_length > iov[2].iov_len)) {
+		tevent_req_nterror(req, NT_STATUS_INVALID_NETWORK_RESPONSE);
+		return;
+	}
+
+	state->recv_iov = iov;
+	state->data = (uint8_t *)iov[2].iov_base;
+	tevent_req_done(req);
+}
+
+NTSTATUS smb2cli_notify_recv(struct tevent_req *req, TALLOC_CTX *mem_ctx,
+			     uint8_t **data, uint32_t *data_length)
+{
+	struct smb2cli_notify_state *state = tevent_req_data(
+		req, struct smb2cli_notify_state);
+	NTSTATUS status;
+
+	if (tevent_req_is_nterror(req, &status)) {
+		return status;
+	}
+	talloc_steal(mem_ctx, state->recv_iov);
+	*data_length = state->data_length;
+	*data = state->data;
+	return NT_STATUS_OK;
+}
+
+NTSTATUS smb2cli_notify(struct smbXcli_conn *conn,
+			uint32_t timeout_msec,
+			struct smbXcli_session *session,
+			struct smbXcli_tcon *tcon,
+			uint32_t output_buffer_length,
+			uint64_t fid_persistent,
+			uint64_t fid_volatile,
+			uint32_t completion_filter,
+			bool recursive,
+			TALLOC_CTX *mem_ctx,
+			uint8_t **data,
+			uint32_t *data_length)
+{
+	TALLOC_CTX *frame = talloc_stackframe();
+	struct tevent_context *ev;
+	struct tevent_req *req;
+	NTSTATUS status = NT_STATUS_NO_MEMORY;
+
+	if (smbXcli_conn_has_async_calls(conn)) {
+		/*
+		 * Can't use sync call while an async call is in flight
+		 */
+		status = NT_STATUS_INVALID_PARAMETER;
+		goto fail;
+	}
+	ev = samba_tevent_context_init(frame);
+	if (ev == NULL) {
+		goto fail;
+	}
+	req = smb2cli_notify_send(frame, ev, conn, timeout_msec,
+				  session, tcon, output_buffer_length,
+				  fid_persistent, fid_volatile,
+				  completion_filter, recursive);
+	if (req == NULL) {
+		goto fail;
+	}
+	if (!tevent_req_poll_ntstatus(req, ev, &status)) {
+		goto fail;
+	}
+	status = smb2cli_notify_recv(req, mem_ctx, data, data_length);
+ fail:
+	TALLOC_FREE(frame);
+	return status;
+}
diff -Npur samba-4.7.7/libcli/smb/smbXcli_base.h samba-4.7.8/libcli/smb/smbXcli_base.h
--- samba-4.7.7/libcli/smb/smbXcli_base.h	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/libcli/smb/smbXcli_base.h	2018-06-21 10:00:46.000000000 +0200
@@ -811,6 +811,32 @@ NTSTATUS smb2cli_query_directory(struct
 				 uint8_t **data,
 				 uint32_t *data_length);
 
+struct tevent_req *smb2cli_notify_send(TALLOC_CTX *mem_ctx,
+				       struct tevent_context *ev,
+				       struct smbXcli_conn *conn,
+				       uint32_t timeout_msec,
+				       struct smbXcli_session *session,
+				       struct smbXcli_tcon *tcon,
+				       uint32_t output_buffer_length,
+				       uint64_t fid_persistent,
+				       uint64_t fid_volatile,
+				       uint32_t completion_filter,
+				       bool recursive);
+NTSTATUS smb2cli_notify_recv(struct tevent_req *req, TALLOC_CTX *mem_ctx,
+			     uint8_t **data, uint32_t *data_length);
+NTSTATUS smb2cli_notify(struct smbXcli_conn *conn,
+			uint32_t timeout_msec,
+			struct smbXcli_session *session,
+			struct smbXcli_tcon *tcon,
+			uint32_t output_buffer_length,
+			uint64_t fid_persistent,
+			uint64_t fid_volatile,
+			uint32_t completion_filter,
+			bool recursive,
+			TALLOC_CTX *mem_ctx,
+			uint8_t **data,
+			uint32_t *data_length);
+
 struct tevent_req *smb2cli_ioctl_send(TALLOC_CTX *mem_ctx,
 				      struct tevent_context *ev,
 				      struct smbXcli_conn *conn,
diff -Npur samba-4.7.7/libcli/smb/wscript samba-4.7.8/libcli/smb/wscript
--- samba-4.7.7/libcli/smb/wscript	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/libcli/smb/wscript	2018-06-21 10:00:46.000000000 +0200
@@ -39,6 +39,7 @@ def build(bld):
            smb2cli_flush.c
            smb2cli_set_info.c
            smb2cli_query_info.c
+           smb2cli_notify.c
            smb2cli_query_directory.c
            smb2cli_ioctl.c
            smb2cli_echo.c
diff -Npur samba-4.7.7/librpc/idl/messaging.idl samba-4.7.8/librpc/idl/messaging.idl
--- samba-4.7.7/librpc/idl/messaging.idl	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/librpc/idl/messaging.idl	2018-06-21 10:00:46.000000000 +0200
@@ -124,6 +124,7 @@ interface messaging
 		MSG_WINBIND_DOMAIN_ONLINE	= 0x040B,
 		MSG_WINBIND_DOMAIN_OFFLINE	= 0x040C,
 		MSG_WINBIND_NEW_TRUSTED_DOMAIN	= 0x040D,
+		MSG_WINBIND_DISCONNECT_DC       = 0x040E,
 
 		/* event messages */
 		MSG_DUMP_EVENT_LIST		= 0x0500,
diff -Npur samba-4.7.7/nsswitch/tests/test_idmap_nss.sh samba-4.7.8/nsswitch/tests/test_idmap_nss.sh
--- samba-4.7.7/nsswitch/tests/test_idmap_nss.sh	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/nsswitch/tests/test_idmap_nss.sh	2018-06-21 10:00:46.000000000 +0200
@@ -13,8 +13,8 @@ failed=0
 
 . `dirname $0`/../../testprogs/blackbox/subunit.sh
 
-testit "wbinfo returns domain SID" $wbinfo -n "@$DOMAIN" || exit 1
-DOMAIN_SID=$($wbinfo -n "@$DOMAIN" | cut -f 1 -d " ")
+testit "wbinfo returns domain SID" $wbinfo -n "$DOMAIN/" || exit 1
+DOMAIN_SID=$($wbinfo -n "$DOMAIN/" | cut -f 1 -d " ")
 echo "Domain $DOMAIN has SID $DOMAIN_SID"
 
 # Find an unused uid and SID
diff -Npur samba-4.7.7/nsswitch/tests/test_idmap_rid.sh samba-4.7.8/nsswitch/tests/test_idmap_rid.sh
--- samba-4.7.7/nsswitch/tests/test_idmap_rid.sh	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/nsswitch/tests/test_idmap_rid.sh	2018-06-21 10:00:46.000000000 +0200
@@ -16,7 +16,7 @@ failed=0
 
 . `dirname $0`/../../testprogs/blackbox/subunit.sh
 
-DOMAIN_SID=$($wbinfo -n "@$DOMAIN" | cut -f 1 -d " ")
+DOMAIN_SID=$($wbinfo -n "$DOMAIN/" | cut -f 1 -d " ")
 if [ $? -ne 0 ] ; then
     echo "Could not find domain SID" | subunit_fail_test "test_idmap_rid"
     exit 1
diff -Npur samba-4.7.7/nsswitch/tests/test_wbinfo_name_lookup.sh samba-4.7.8/nsswitch/tests/test_wbinfo_name_lookup.sh
--- samba-4.7.7/nsswitch/tests/test_wbinfo_name_lookup.sh	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/nsswitch/tests/test_wbinfo_name_lookup.sh	2018-06-21 10:00:46.000000000 +0200
@@ -8,8 +8,9 @@ exit 1;
 fi
 
 DOMAIN=$1
-DC_USERNAME=$2
-shift 2
+REALM=$2
+DC_USERNAME=$3
+shift 3
 
 failed=0
 sambabindir="$BINDIR"
@@ -22,6 +23,14 @@ testit "name-to-sid.single-separator" \
        $wbinfo -n $DOMAIN/$DC_USERNAME || \
 	failed=$(expr $failed + 1)
 
+testit "name-to-sid.at_domain" \
+       $wbinfo -n $DOMAIN/ || \
+	failed=$(expr $failed + 1)
+
+testit "name-to-sid.upn" \
+       $wbinfo -n $DC_USERNAME@$REALM || \
+	failed=$(expr $failed + 1)
+
 # Two separator characters should fail
 testit_expect_failure "name-to-sid.double-separator" \
 		      $wbinfo -n $DOMAIN//$DC_USERNAME || \
diff -Npur samba-4.7.7/nsswitch/tests/test_wbinfo_user_info.sh samba-4.7.8/nsswitch/tests/test_wbinfo_user_info.sh
--- samba-4.7.7/nsswitch/tests/test_wbinfo_user_info.sh	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/nsswitch/tests/test_wbinfo_user_info.sh	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,83 @@
+#!/bin/sh
+# Blackbox test for wbinfo lookup for account name and upn
+# Copyright (c) 2018 Andreas Schneider <asn@samba.org>
+
+if [ $# -lt 5 ]; then
+cat <<EOF
+Usage: $(basename $0) DOMAIN REALM USERNAME1 UPN_NAME1 USERNAME2 UPN_NAME2
+EOF
+exit 1;
+fi
+
+DOMAIN=$1
+REALM=$2
+USERNAME1=$3
+UPN_NAME1=$4
+USERNAME2=$5
+UPN_NAME2=$6
+shift 6
+
+failed=0
+
+samba_bindir="$BINDIR"
+wbinfo_tool="$VALGRIND $samba_bindir/wbinfo"
+
+UPN1="$UPN_NAME1@$REALM"
+UPN2="$UPN_NAME2@$REALM"
+
+. $(dirname $0)/../../testprogs/blackbox/subunit.sh
+
+test_user_info()
+{
+	local cmd out ret user domain upn userinfo
+
+	domain="$1"
+	user="$2"
+	upn="$3"
+
+	if [ $# -lt 3 ]; then
+		userinfo="$domain/$user"
+	else
+		userinfo="$upn"
+	fi
+
+	cmd='$wbinfo_tool --user-info $userinfo'
+	eval echo "$cmd"
+	out=$(eval $cmd)
+	ret=$?
+	if [ $ret -ne 0 ]; then
+		echo "failed to lookup $userinfo"
+		echo "$out"
+		return 1
+	fi
+
+	echo "$out" | grep "$domain/$user:.*:.*:.*::/home/$domain/Domain Users/$user"
+	ret=$?
+	if [ $ret != 0 ]; then
+		echo "failed to lookup $userinfo"
+		echo "$out"
+		return 1
+	fi
+
+	return 0
+}
+
+testit "name_to_sid.domain.$USERNAME1" $wbinfo_tool --name-to-sid $DOMAIN/$USERNAME1 || failed=$(expr $failed + 1)
+testit "name_to_sid.upn.$UPN_NAME1" $wbinfo_tool --name-to-sid $UPN1 || failed=$(expr $failed + 1)
+
+testit "user_info.domain.$USERNAME1" test_user_info $DOMAIN $USERNAME1 || failed=$(expr $failed + 1)
+testit "user_info.upn.$UPN_NAME1" test_user_info $DOMAIN $USERNAME1 $UPN1 || failed=$(expr $failed + 1)
+
+testit "name_to_sid.domain.$USERNAME2" $wbinfo_tool --name-to-sid $DOMAIN/$USERNAME2 || failed=$(expr $failed + 1)
+testit "name_to_sid.upn.$UPN_NAME2" $wbinfo_tool --name-to-sid $UPN2 || failed=$(expr $failed + 1)
+
+testit "user_info.domain.$USERNAME2" test_user_info $DOMAIN $USERNAME2 || failed=$(expr $failed + 1)
+testit "user_info.upn.$UPN_NAME2" test_user_info $DOMAIN $USERNAME2 $UPN2 || failed=$(expr $failed + 1)
+
+USERNAME3="testdenied"
+UPN_NAME3="testdenied_upn"
+UPN3="$UPN_NAME3@${REALM}.upn"
+testit "name_to_sid.upn.$UPN_NAME3" $wbinfo_tool --name-to-sid $UPN3 || failed=$(expr $failed + 1)
+testit "user_info.upn.$UPN_NAME3" test_user_info $DOMAIN $USERNAME3 $UPN3 || failed=$(expr $failed + 1)
+
+exit $failed
diff -Npur samba-4.7.7/nsswitch/wb_common.c samba-4.7.8/nsswitch/wb_common.c
--- samba-4.7.7/nsswitch/wb_common.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/nsswitch/wb_common.c	2018-06-21 10:00:46.000000000 +0200
@@ -420,14 +420,14 @@ static int winbind_open_pipe_sock(struct
 			ctx->winbindd_fd = fd;
 			ctx->is_privileged = 1;
 		}
+
+		SAFE_FREE(response.extra_data.data);
 	}
 
 	if ((need_priv != 0) && (ctx->is_privileged == 0)) {
 		return -1;
 	}
 
-	SAFE_FREE(response.extra_data.data);
-
 	return ctx->winbindd_fd;
 #else
 	return -1;
diff -Npur samba-4.7.7/python/samba/tests/dcerpc/raw_protocol.py samba-4.7.8/python/samba/tests/dcerpc/raw_protocol.py
--- samba-4.7.7/python/samba/tests/dcerpc/raw_protocol.py	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/python/samba/tests/dcerpc/raw_protocol.py	2018-06-21 10:00:46.000000000 +0200
@@ -1974,7 +1974,7 @@ class TestDCERPC_BIND(RawDCERPCTest):
 
             # And now try a request without auth_info
             # netr_ServerReqChallenge()
-            req = self.generate_request(call_id = 2,
+            req = self.generate_request(call_id = 0x21234,
                                         pfc_flags=pfc_flags,
                                         context_id=ctx.context_id,
                                         opnum=4,
diff -Npur samba-4.7.7/selftest/knownfail samba-4.7.8/selftest/knownfail
--- samba-4.7.7/selftest/knownfail	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/selftest/knownfail	2018-06-21 10:00:46.000000000 +0200
@@ -8,6 +8,7 @@
 .*driver.add_driver_timestamps # we only can store dates, not timestamps
  ^samba3.smbtorture_s3.crypt_server\(nt4_dc\).SMB2-SESSION-REAUTH # expected to give ACCESS_DENIED SMB2.1 doesn't have encryption
 ^samba3.smbtorture_s3.crypt_server\(nt4_dc\).SMB2-SESSION-RECONNECT # expected to give CONNECTION_DISCONNECTED, we need to fix the test
+^samba3.smbtorture_s3.*ad_dc_ntvfs.*SMB2-DIR-FSYNC.*
 ^samba3.smb2.session enc.reconnect # expected to give CONNECTION_DISCONNECTED, we need to fix the test
 ^samba3.raw.session enc # expected to give ACCESS_DENIED as SMB1 encryption isn't used
 ^samba3.smbtorture_s3.crypt_server # expected to give ACCESS_DENIED as SMB1 encryption isn't used
diff -Npur samba-4.7.7/selftest/knownfail.d/upn_handling samba-4.7.8/selftest/knownfail.d/upn_handling
--- samba-4.7.7/selftest/knownfail.d/upn_handling	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/selftest/knownfail.d/upn_handling	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,11 @@
+^samba3\.wbinfo_user_info\.name_to_sid\.upn\.jane\.doe.ad_member
+^samba3\.wbinfo_user_info\.user_info\.upn\.jane\.doe.ad_member
+^samba3\.wbinfo_user_info\.name_to_sid\.upn\.testdenied_upn.ad_member
+^samba3\.wbinfo_user_info\.user_info\.upn\.testdenied_upn.ad_member
+^samba3\.wbinfo_user_info\.user_info\.domain\.alice.fl2008r2dc
+^samba3\.wbinfo_user_info\.user_info\.upn\.alice.fl2008r2dc
+^samba3\.wbinfo_user_info\.name_to_sid\.upn\.jane\.doe.fl2008r2dc
+^samba3\.wbinfo_user_info\.user_info\.domain\.jane.fl2008r2dc
+^samba3\.wbinfo_user_info\.user_info\.upn\.jane\.doe.fl2008r2dc
+^samba3\.wbinfo_user_info\.name_to_sid\.upn\.testdenied_upn.fl2008r2dc
+^samba3\.wbinfo_user_info\.user_info\.upn\.testdenied_upn.fl2008r2dc
diff -Npur samba-4.7.7/selftest/target/Samba3.pm samba-4.7.8/selftest/target/Samba3.pm
--- samba-4.7.7/selftest/target/Samba3.pm	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/selftest/target/Samba3.pm	2018-06-21 10:00:46.000000000 +0200
@@ -2007,6 +2007,12 @@ sub provision($$$$$$$$$)
 	vfs objects = acl_xattr fake_acls xattr_tdb fake_dfq
 	admin users = $unix_name
 	include = $dfqconffile
+[dfq_cache]
+	path = $shrdir/dfree
+	vfs objects = acl_xattr fake_acls xattr_tdb fake_dfq
+	admin users = $unix_name
+	include = $dfqconffile
+	dfree cache time = 60
 [dfq_owner]
 	path = $shrdir/dfree
 	vfs objects = acl_xattr fake_acls xattr_tdb fake_dfq
@@ -2040,6 +2046,10 @@ sub provision($$$$$$$$$)
 	kernel oplocks = yes
 	vfs objects = streams_xattr xattr_tdb
 
+[streams_xattr]
+	copy = tmp
+	vfs objects = streams_xattr xattr_tdb
+
 [compound_find]
 	copy = tmp
 	smbd:find async delay usec = 10000
diff -Npur samba-4.7.7/selftest/target/Samba4.pm samba-4.7.8/selftest/target/Samba4.pm
--- samba-4.7.7/selftest/target/Samba4.pm	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/selftest/target/Samba4.pm	2018-06-21 10:00:46.000000000 +0200
@@ -840,7 +840,7 @@ userPrincipalName: testdenied_upn\@$ctx-
 	}
 
 	# Create to users alice and bob!
-	my $user_account_array = ["alice", "bob"];
+	my $user_account_array = ["alice", "bob", "jane"];
 
 	foreach my $user_account (@{$user_account_array}) {
 		my $samba_tool_cmd = "";
@@ -855,6 +855,23 @@ userPrincipalName: testdenied_upn\@$ctx-
 		}
 	}
 
+	my $ldbmodify = "";
+	$ldbmodify .= "KRB5_CONFIG=\"$ret->{KRB5_CONFIG}\" ";
+	$ldbmodify .= "KRB5CCNAME=\"$ret->{KRB5_CCACHE}\" ";
+	$ldbmodify .= Samba::bindir_path($self, "ldbmodify");
+
+	my $base_dn = "DC=".join(",DC=", split(/\./, $ctx->{realm}));
+	my $user_dn = "cn=jane,cn=users,$base_dn";
+
+	open(LDIF, "|$ldbmodify -H $ctx->{privatedir}/sam.ldb");
+	print LDIF "dn: $user_dn
+changetype: modify
+replace: userPrincipalName
+userPrincipalName: jane.doe\@$ctx->{realm}
+-
+";
+	close(LDIF);
+
 	return $ret;
 }
 
diff -Npur samba-4.7.7/source3/client/client.c samba-4.7.8/source3/client/client.c
--- samba-4.7.7/source3/client/client.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/client/client.c	2018-06-21 10:00:46.000000000 +0200
@@ -4561,12 +4561,17 @@ static int cmd_notify(void)
 	}
 
 	while (1) {
-		uint32_t i, num_changes;
-		struct notify_change *changes;
+		uint32_t i;
+		uint32_t num_changes = 0;
+		struct notify_change *changes = NULL;
 
 		status = cli_notify(cli, fnum, 1000, FILE_NOTIFY_CHANGE_ALL,
 				    true,
 				    talloc_tos(), &num_changes, &changes);
+		if (NT_STATUS_EQUAL(status, STATUS_NOTIFY_ENUM_DIR)) {
+			printf("NOTIFY_ENUM_DIR\n");
+			status = NT_STATUS_OK;
+		}
 		if (!NT_STATUS_IS_OK(status)) {
 			d_printf("notify returned %s\n",
 				 nt_errstr(status));
diff -Npur samba-4.7.7/source3/include/local.h samba-4.7.8/source3/include/local.h
--- samba-4.7.7/source3/include/local.h	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/source3/include/local.h	2018-06-21 10:00:46.000000000 +0200
@@ -172,9 +172,6 @@
 /* Number in seconds for winbindd to wait for the mutex. Make this 2 * smbd wait time. */
 #define WINBIND_SERVER_MUTEX_WAIT_TIME (( ((NUM_CLI_AUTH_CONNECT_RETRIES) * ((CLI_AUTH_TIMEOUT)/1000)) + 5)*2)
 
-/* Buffer size to use when printing backtraces */
-#define BACKTRACE_STACK_SIZE 64
-
 /* size of listen() backlog in smbd */
 #define SMBD_LISTEN_BACKLOG 50
 
diff -Npur samba-4.7.7/source3/include/proto.h samba-4.7.8/source3/include/proto.h
--- samba-4.7.7/source3/include/proto.h	2017-08-29 06:12:36.000000000 +0200
+++ samba-4.7.8/source3/include/proto.h	2018-06-21 10:00:46.000000000 +0200
@@ -360,7 +360,6 @@ char *gidtoname(gid_t gid);
 uid_t nametouid(const char *name);
 gid_t nametogid(const char *name);
 void smb_panic_s3(const char *why);
-void log_stack_trace(void);
 const char *readdirname(DIR *p);
 bool is_in_path(const char *name, name_compare_entry *namelist, bool case_sensitive);
 void set_namearray(name_compare_entry **ppname_array, const char *namelist);
diff -Npur samba-4.7.7/source3/lib/gencache.c samba-4.7.8/source3/lib/gencache.c
--- samba-4.7.7/source3/lib/gencache.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/source3/lib/gencache.c	2018-06-21 10:00:46.000000000 +0200
@@ -275,7 +275,7 @@ static int last_stabilize_parser(TDB_DAT
  * @retval false on failure
  **/
 
-bool gencache_set_data_blob(const char *keystr, const DATA_BLOB *blob,
+bool gencache_set_data_blob(const char *keystr, DATA_BLOB blob,
 			    time_t timeout)
 {
 	int ret;
@@ -291,7 +291,7 @@ bool gencache_set_data_blob(const char *
 		return false;
 	}
 
-	if ((keystr == NULL) || (blob == NULL)) {
+	if ((keystr == NULL) || (blob.data == NULL)) {
 		return false;
 	}
 
@@ -299,7 +299,7 @@ bool gencache_set_data_blob(const char *
 		return false;
 	}
 
-	if ((timeout != 0) && gencache_have_val(keystr, blob, timeout)) {
+	if ((timeout != 0) && gencache_have_val(keystr, &blob, timeout)) {
 		DEBUG(10, ("Did not store value for %s, we already got it\n",
 			   keystr));
 		return true;
@@ -310,12 +310,12 @@ bool gencache_set_data_blob(const char *
 	if (hdr_len == -1) {
 		return false;
 	}
-	if ((blob->length + (size_t)hdr_len) < blob->length) {
+	if ((blob.length + (size_t)hdr_len) < blob.length) {
 		return false;
 	}
 
 	dbufs[0] = (TDB_DATA) { .dptr = (uint8_t *)hdr, .dsize = hdr_len };
-	dbufs[1] = (TDB_DATA) { .dptr = blob->data, .dsize = blob->length };
+	dbufs[1] = (TDB_DATA) { .dptr = blob.data, .dsize = blob.length };
 
 	DEBUG(10, ("Adding cache entry with key=[%s] and timeout="
 	           "[%s] (%d seconds %s)\n", keystr,
@@ -842,7 +842,7 @@ bool gencache_get(const char *keystr, TA
 bool gencache_set(const char *keystr, const char *value, time_t timeout)
 {
 	DATA_BLOB blob = data_blob_const(value, strlen(value)+1);
-	return gencache_set_data_blob(keystr, &blob, timeout);
+	return gencache_set_data_blob(keystr, blob, timeout);
 }
 
 struct gencache_iterate_blobs_state {
diff -Npur samba-4.7.7/source3/lib/gencache.h samba-4.7.8/source3/lib/gencache.h
--- samba-4.7.7/source3/lib/gencache.h	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/source3/lib/gencache.h	2018-06-21 10:00:46.000000000 +0200
@@ -40,7 +40,7 @@ bool gencache_get_data_blob(const char *
 			    DATA_BLOB *blob,
 			    time_t *timeout, bool *was_expired);
 bool gencache_stabilize(void);
-bool gencache_set_data_blob(const char *keystr, const DATA_BLOB *blob,
+bool gencache_set_data_blob(const char *keystr, DATA_BLOB blob,
 			    time_t timeout);
 void gencache_iterate_blobs(void (*fn)(const char *key, DATA_BLOB value,
 				       time_t timeout, void *private_data),
diff -Npur samba-4.7.7/source3/lib/namemap_cache.c samba-4.7.8/source3/lib/namemap_cache.c
--- samba-4.7.7/source3/lib/namemap_cache.c	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/source3/lib/namemap_cache.c	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,323 @@
+/*
+ * Unix SMB/CIFS implementation.
+ * Utils for caching sid2name and name2sid
+ * Copyright (C) Volker Lendecke 2017
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "replace.h"
+#include "namemap_cache.h"
+#include "source3/lib/gencache.h"
+#include "lib/util/debug.h"
+#include "lib/util/strv.h"
+#include "lib/util/talloc_stack.h"
+#include "lib/util/charset/charset.h"
+#include "libcli/security/dom_sid.h"
+
+bool namemap_cache_set_sid2name(const struct dom_sid *sid,
+				const char *domain, const char *name,
+				enum lsa_SidType type, time_t timeout)
+{
+	char typebuf[16];
+	char sidbuf[DOM_SID_STR_BUFLEN];
+	char keybuf[DOM_SID_STR_BUFLEN+10];
+	char *val = NULL;
+	DATA_BLOB data;
+	int ret;
+	bool ok = false;
+
+	if ((sid == NULL) || is_null_sid(sid)) {
+		return true;
+	}
+	if (domain == NULL) {
+		domain = "";
+	}
+	if (name == NULL) {
+		name = "";
+	}
+	if (type == SID_NAME_UNKNOWN) {
+		domain = "";
+		name = "";
+	}
+
+	snprintf(typebuf, sizeof(typebuf), "%d", (int)type);
+	snprintf(keybuf, sizeof(keybuf), "SID2NAME/%s", sidbuf);
+
+	ret = strv_add(talloc_tos(), &val, domain);
+	if (ret != 0) {
+		DBG_DEBUG("strv_add failed: %s\n", strerror(ret));
+		goto fail;
+	}
+	ret = strv_add(NULL, &val, name);
+	if (ret != 0) {
+		DBG_DEBUG("strv_add failed: %s\n", strerror(ret));
+		goto fail;
+	}
+	ret = strv_add(NULL, &val, typebuf);
+	if (ret != 0) {
+		DBG_DEBUG("strv_add failed: %s\n", strerror(ret));
+		goto fail;
+	}
+
+	dom_sid_string_buf(sid, sidbuf, sizeof(sidbuf));
+	snprintf(keybuf, sizeof(keybuf), "SID2NAME/%s", sidbuf);
+
+	data = data_blob_const(val, talloc_get_size(val));
+
+	ok = gencache_set_data_blob(keybuf, data, timeout);
+	if (!ok) {
+		DBG_DEBUG("gencache_set_data_blob failed\n");
+	}
+fail:
+	TALLOC_FREE(val);
+	return ok;
+}
+
+struct namemap_cache_find_sid_state {
+	void (*fn)(const char *domain, const char *name,
+		   enum lsa_SidType type, time_t timeout,
+		   void *private_data);
+	void *private_data;
+	bool ok;
+};
+
+static void namemap_cache_find_sid_parser(time_t timeout, DATA_BLOB blob,
+					  void *private_data)
+{
+	struct namemap_cache_find_sid_state *state = private_data;
+	const char *strv = (const char *)blob.data;
+	size_t strv_len = blob.length;
+	const char *domain;
+	const char *name;
+	const char *typebuf;
+	char *endptr;
+	unsigned long type;
+
+	state->ok = false;
+
+	domain = strv_len_next(strv, strv_len, NULL);
+	if (domain == NULL) {
+		return;
+	}
+	name = strv_len_next(strv, strv_len, domain);
+	if (name == NULL) {
+		return;
+	}
+	typebuf = strv_len_next(strv, strv_len, name);
+	if (typebuf == NULL) {
+		return;
+	}
+
+	type = strtoul(typebuf, &endptr, 10);
+	if (*endptr != '\0') {
+		return;
+	}
+	if ((type == ULONG_MAX) && (errno == ERANGE)) {
+		return;
+	}
+
+	state->fn(domain, name, (enum lsa_SidType)type, timeout,
+		  state->private_data);
+
+	state->ok = true;
+}
+
+bool namemap_cache_find_sid(const struct dom_sid *sid,
+			    void (*fn)(const char *domain, const char *name,
+				       enum lsa_SidType type, time_t timeout,
+				       void *private_data),
+			    void *private_data)
+{
+	struct namemap_cache_find_sid_state state = {
+		.fn = fn, .private_data = private_data
+	};
+	char sidbuf[DOM_SID_STR_BUFLEN];
+	char keybuf[DOM_SID_STR_BUFLEN+10];
+	bool ok;
+
+	dom_sid_string_buf(sid, sidbuf, sizeof(sidbuf));
+	snprintf(keybuf, sizeof(keybuf), "SID2NAME/%s", sidbuf);
+
+	ok = gencache_parse(keybuf, namemap_cache_find_sid_parser, &state);
+	if (!ok) {
+		DBG_DEBUG("gencache_parse(%s) failed\n", keybuf);
+		return false;
+	}
+
+	if (!state.ok) {
+		DBG_DEBUG("Could not parse %s, deleting\n", keybuf);
+		gencache_del(keybuf);
+		return false;
+	}
+
+	return true;
+}
+
+bool namemap_cache_set_name2sid(const char *domain, const char *name,
+				const struct dom_sid *sid,
+				enum lsa_SidType type,
+				time_t timeout)
+{
+	char typebuf[16];
+	char sidbuf[DOM_SID_STR_BUFLEN];
+	char *key;
+	char *key_upper;
+	char *val = NULL;
+	DATA_BLOB data;
+	int ret;
+	bool ok = false;
+
+	if (domain == NULL) {
+		domain = "";
+	}
+	if (name == NULL) {
+		name = "";
+	}
+	if (type == SID_NAME_UNKNOWN) {
+		sidbuf[0] = '\0';
+	} else {
+		dom_sid_string_buf(sid, sidbuf, sizeof(sidbuf));
+	}
+
+	snprintf(typebuf, sizeof(typebuf), "%d", (int)type);
+
+	key = talloc_asprintf(talloc_tos(), "NAME2SID/%s\\%s", domain, name);
+	if (key == NULL) {
+		DBG_DEBUG("talloc_asprintf failed\n");
+		goto fail;
+	}
+	key_upper = strupper_talloc(key, key);
+	if (key_upper == NULL) {
+		DBG_DEBUG("strupper_talloc failed\n");
+		goto fail;
+	}
+
+	ret = strv_add(key, &val, sidbuf);
+	if (ret != 0) {
+		DBG_DEBUG("strv_add failed: %s\n", strerror(ret));
+		goto fail;
+	}
+	ret = strv_add(NULL, &val, typebuf);
+	if (ret != 0) {
+		DBG_DEBUG("strv_add failed: %s\n", strerror(ret));
+		goto fail;
+	}
+
+	data = data_blob_const(val, talloc_get_size(val));
+
+	ok = gencache_set_data_blob(key_upper, data, timeout);
+	if (!ok) {
+		DBG_DEBUG("gencache_set_data_blob failed\n");
+	}
+fail:
+	TALLOC_FREE(key);
+	return ok;
+}
+
+struct namemap_cache_find_name_state {
+	void (*fn)(const struct dom_sid *sid,
+		   enum lsa_SidType type, time_t timeout,
+		   void *private_data);
+	void *private_data;
+	bool ok;
+};
+
+static void namemap_cache_find_name_parser(time_t timeout, DATA_BLOB blob,
+					   void *private_data)
+{
+	struct namemap_cache_find_name_state *state = private_data;
+	const char *strv = (const char *)blob.data;
+	size_t strv_len = blob.length;
+	const char *sidbuf;
+	const char *sid_endptr;
+	const char *typebuf;
+	char *endptr;
+	struct dom_sid sid;
+	unsigned long type;
+	bool ok;
+
+	state->ok = false;
+
+	sidbuf = strv_len_next(strv, strv_len, NULL);
+	if (sidbuf == NULL) {
+		return;
+	}
+	typebuf = strv_len_next(strv, strv_len, sidbuf);
+	if (typebuf == NULL) {
+		return;
+	}
+
+	ok = dom_sid_parse_endp(sidbuf, &sid, &sid_endptr);
+	if (!ok) {
+		return;
+	}
+	if (*sid_endptr != '\0') {
+		return;
+	}
+
+	type = strtoul(typebuf, &endptr, 10);
+	if (*endptr != '\0') {
+		return;
+	}
+	if ((type == ULONG_MAX) && (errno == ERANGE)) {
+		return;
+	}
+
+	state->fn(&sid, (enum lsa_SidType)type, timeout, state->private_data);
+
+	state->ok = true;
+}
+
+bool namemap_cache_find_name(const char *domain, const char *name,
+			     void (*fn)(const struct dom_sid *sid,
+					enum lsa_SidType type, time_t timeout,
+					void *private_data),
+			     void *private_data)
+{
+	struct namemap_cache_find_name_state state = {
+		.fn = fn, .private_data = private_data
+	};
+	char *key;
+	char *key_upper;
+	bool ret = false;
+	bool ok;
+
+	key = talloc_asprintf(talloc_tos(), "NAME2SID/%s\\%s", domain, name);
+	if (key == NULL) {
+		DBG_DEBUG("talloc_asprintf failed\n");
+		return false;
+	}
+	key_upper = strupper_talloc(key, key);
+	if (key_upper == NULL) {
+		DBG_DEBUG("strupper_talloc failed\n");
+		goto fail;
+	}
+
+	ok = gencache_parse(key_upper, namemap_cache_find_name_parser, &state);
+	if (!ok) {
+		DBG_DEBUG("gencache_parse(%s) failed\n", key_upper);
+		goto fail;
+	}
+
+	if (!state.ok) {
+		DBG_DEBUG("Could not parse %s, deleting\n", key_upper);
+		goto fail;
+	}
+
+	ret = true;
+fail:
+	TALLOC_FREE(key);
+	return ret;
+}
diff -Npur samba-4.7.7/source3/lib/namemap_cache.h samba-4.7.8/source3/lib/namemap_cache.h
--- samba-4.7.7/source3/lib/namemap_cache.h	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/source3/lib/namemap_cache.h	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,45 @@
+/*
+ * Unix SMB/CIFS implementation.
+ * Utils for caching sid2name and name2sid
+ * Copyright (C) Volker Lendecke 2017
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef __LIB_NAMEMAP_CACHE_H__
+#define __LIB_NAMEMAP_CACHE_H__
+
+#include "lib/util/time.h"
+#include "lib/util/data_blob.h"
+#include "librpc/gen_ndr/lsa.h"
+
+bool namemap_cache_set_sid2name(const struct dom_sid *sid,
+				const char *domain, const char *name,
+				enum lsa_SidType type, time_t timeout);
+bool namemap_cache_set_name2sid(const char *domain, const char *name,
+				const struct dom_sid *sid,
+				enum lsa_SidType type,
+				time_t timeout);
+bool namemap_cache_find_sid(const struct dom_sid *sid,
+			    void (*fn)(const char *domain, const char *name,
+				       enum lsa_SidType type, time_t timeout,
+				       void *private_data),
+			    void *private_data);
+bool namemap_cache_find_name(const char *domain, const char *name,
+			     void (*fn)(const struct dom_sid *sid,
+					enum lsa_SidType type, time_t timeout,
+					void *private_data),
+			     void *private_data);
+
+#endif
diff -Npur samba-4.7.7/source3/lib/util.c samba-4.7.8/source3/lib/util.c
--- samba-4.7.7/source3/lib/util.c	2018-02-07 09:37:51.000000000 +0100
+++ samba-4.7.8/source3/lib/util.c	2018-06-21 10:00:46.000000000 +0200
@@ -839,145 +839,6 @@ void smb_panic_s3(const char *why)
 }
 
 /*******************************************************************
- Print a backtrace of the stack to the debug log. This function
- DELIBERATELY LEAKS MEMORY. The expectation is that you should
- exit shortly after calling it.
-********************************************************************/
-
-#ifdef HAVE_LIBUNWIND_H
-#include <libunwind.h>
-#endif
-
-#ifdef HAVE_EXECINFO_H
-#include <execinfo.h>
-#endif
-
-#ifdef HAVE_LIBEXC_H
-#include <libexc.h>
-#endif
-
-void log_stack_trace(void)
-{
-#ifdef HAVE_LIBUNWIND
-	/* Try to use libunwind before any other technique since on ia64
-	 * libunwind correctly walks the stack in more circumstances than
-	 * backtrace.
-	 */ 
-	unw_cursor_t cursor;
-	unw_context_t uc;
-	unsigned i = 0;
-
-	char procname[256];
-	unw_word_t ip, sp, off;
-
-	procname[sizeof(procname) - 1] = '\0';
-
-	if (unw_getcontext(&uc) != 0) {
-		goto libunwind_failed;
-	}
-
-	if (unw_init_local(&cursor, &uc) != 0) {
-		goto libunwind_failed;
-	}
-
-	DEBUG(0, ("BACKTRACE:\n"));
-
-	do {
-	    ip = sp = 0;
-	    unw_get_reg(&cursor, UNW_REG_IP, &ip);
-	    unw_get_reg(&cursor, UNW_REG_SP, &sp);
-
-	    switch (unw_get_proc_name(&cursor,
-			procname, sizeof(procname) - 1, &off) ) {
-	    case 0:
-		    /* Name found. */
-	    case -UNW_ENOMEM:
-		    /* Name truncated. */
-		    DEBUGADD(0, (" #%u %s + %#llx [ip=%#llx] [sp=%#llx]\n",
-			    i, procname, (long long)off,
-			    (long long)ip, (long long) sp));
-		    break;
-	    default:
-	    /* case -UNW_ENOINFO: */
-	    /* case -UNW_EUNSPEC: */
-		    /* No symbol name found. */
-		    DEBUGADD(0, (" #%u %s [ip=%#llx] [sp=%#llx]\n",
-			    i, "<unknown symbol>",
-			    (long long)ip, (long long) sp));
-	    }
-	    ++i;
-	} while (unw_step(&cursor) > 0);
-
-	return;
-
-libunwind_failed:
-	DEBUG(0, ("unable to produce a stack trace with libunwind\n"));
-
-#elif HAVE_BACKTRACE_SYMBOLS
-	void *backtrace_stack[BACKTRACE_STACK_SIZE];
-	size_t backtrace_size;
-	char **backtrace_strings;
-
-	/* get the backtrace (stack frames) */
-	backtrace_size = backtrace(backtrace_stack,BACKTRACE_STACK_SIZE);
-	backtrace_strings = backtrace_symbols(backtrace_stack, backtrace_size);
-
-	DEBUG(0, ("BACKTRACE: %lu stack frames:\n", 
-		  (unsigned long)backtrace_size));
-
-	if (backtrace_strings) {
-		int i;
-
-		for (i = 0; i < backtrace_size; i++)
-			DEBUGADD(0, (" #%u %s\n", i, backtrace_strings[i]));
-
-		/* Leak the backtrace_strings, rather than risk what free() might do */
-	}
-
-#elif HAVE_LIBEXC
-
-	/* The IRIX libexc library provides an API for unwinding the stack. See
-	 * libexc(3) for details. Apparantly trace_back_stack leaks memory, but
-	 * since we are about to abort anyway, it hardly matters.
-	 */
-
-#define NAMESIZE 32 /* Arbitrary */
-
-	__uint64_t	addrs[BACKTRACE_STACK_SIZE];
-	char *      	names[BACKTRACE_STACK_SIZE];
-	char		namebuf[BACKTRACE_STACK_SIZE * NAMESIZE];
-
-	int		i;
-	int		levels;
-
-	ZERO_ARRAY(addrs);
-	ZERO_ARRAY(names);
-	ZERO_ARRAY(namebuf);
-
-	/* We need to be root so we can open our /proc entry to walk
-	 * our stack. It also helps when we want to dump core.
-	 */
-	become_root();
-
-	for (i = 0; i < BACKTRACE_STACK_SIZE; i++) {
-		names[i] = namebuf + (i * NAMESIZE);
-	}
-
-	levels = trace_back_stack(0, addrs, names,
-			BACKTRACE_STACK_SIZE, NAMESIZE - 1);
-
-	DEBUG(0, ("BACKTRACE: %d stack frames:\n", levels));
-	for (i = 0; i < levels; i++) {
-		DEBUGADD(0, (" #%d 0x%llx %s\n", i, addrs[i], names[i]));
-	}
-#undef NAMESIZE
-
-#else
-	DEBUG(0, ("unable to produce a stack trace on this platform\n"));
-#endif
-}
-
-/*******************************************************************
   A readdir wrapper which just returns the file name.
  ********************************************************************/
 
diff -Npur samba-4.7.7/source3/libads/kerberos_keytab.c samba-4.7.8/source3/libads/kerberos_keytab.c
--- samba-4.7.7/source3/libads/kerberos_keytab.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/libads/kerberos_keytab.c	2018-06-21 10:00:46.000000000 +0200
@@ -640,7 +640,11 @@ int ads_keytab_list(const char *keytab_n
 	}
 
 	if (keytab_name == NULL) {
+#ifdef HAVE_ADS
 		ret = ads_keytab_open(context, &keytab);
+#else
+		ret = ENOENT;
+#endif
 	} else {
 		ret = smb_krb5_kt_open(context, keytab_name, False, &keytab);
 	}
diff -Npur samba-4.7.7/source3/libsmb/cli_smb2_fnum.c samba-4.7.8/source3/libsmb/cli_smb2_fnum.c
--- samba-4.7.7/source3/libsmb/cli_smb2_fnum.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/libsmb/cli_smb2_fnum.c	2018-06-21 10:00:46.000000000 +0200
@@ -4089,3 +4089,104 @@ NTSTATUS cli_smb2_ftruncate(struct cli_s
 	TALLOC_FREE(frame);
 	return status;
 }
+
+NTSTATUS cli_smb2_notify(struct cli_state *cli, uint16_t fnum,
+			 uint32_t buffer_size, uint32_t completion_filter,
+			 bool recursive, TALLOC_CTX *mem_ctx,
+			 struct notify_change **pchanges,
+			 uint32_t *pnum_changes)
+{
+	NTSTATUS status;
+	struct smb2_hnd *ph = NULL;
+	TALLOC_CTX *frame = talloc_stackframe();
+	uint8_t *base;
+	uint32_t len, ofs;
+	struct notify_change *changes = NULL;
+	size_t num_changes = 0;
+
+	if (smbXcli_conn_has_async_calls(cli->conn)) {
+		/*
+		 * Can't use sync call while an async call is in flight
+		 */
+		status = NT_STATUS_INVALID_PARAMETER;
+		goto fail;
+	}
+
+	if (smbXcli_conn_protocol(cli->conn) < PROTOCOL_SMB2_02) {
+		status = NT_STATUS_INVALID_PARAMETER;
+		goto fail;
+	}
+
+	status = map_fnum_to_smb2_handle(cli, fnum, &ph);
+	if (!NT_STATUS_IS_OK(status)) {
+		goto fail;
+	}
+
+	status = smb2cli_notify(cli->conn, cli->timeout,
+				cli->smb2.session, cli->smb2.tcon,
+				buffer_size,
+				ph->fid_persistent, ph->fid_volatile,
+				completion_filter, recursive,
+				frame, &base, &len);
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_IO_TIMEOUT)) {
+		len = 0;
+		status = NT_STATUS_OK;
+	}
+
+	if (!NT_STATUS_IS_OK(status)) {
+		goto fail;
+	}
+
+	ofs = 0;
+
+	while (len - ofs >= 12) {
+		struct notify_change *tmp;
+		struct notify_change *c;
+		uint32_t next_ofs = IVAL(base, ofs);
+		uint32_t file_name_length = IVAL(base, ofs+8);
+		size_t namelen;
+		bool ok;
+
+		tmp = talloc_realloc(frame, changes, struct notify_change,
+				     num_changes + 1);
+		if (tmp == NULL) {
+			status = NT_STATUS_NO_MEMORY;
+			goto fail;
+		}
+		changes = tmp;
+		c = &changes[num_changes];
+		num_changes += 1;
+
+		if (smb_buffer_oob(len, ofs, next_ofs) ||
+		    smb_buffer_oob(len, ofs+12, file_name_length)) {
+			status = NT_STATUS_INVALID_NETWORK_RESPONSE;
+			goto fail;
+		}
+
+		c->action = IVAL(base, ofs+4);
+
+		ok = convert_string_talloc(changes, CH_UTF16LE, CH_UNIX,
+					   base + ofs + 12, file_name_length,
+					   &c->name, &namelen);
+		if (!ok) {
+			status = NT_STATUS_INVALID_NETWORK_RESPONSE;
+			goto fail;
+		}
+
+		if (next_ofs == 0) {
+			break;
+		}
+		ofs += next_ofs;
+	}
+
+	*pchanges = talloc_move(mem_ctx, &changes);
+	*pnum_changes = num_changes;
+	status = NT_STATUS_OK;
+
+fail:
+	cli->raw_status = status;
+
+	TALLOC_FREE(frame);
+	return status;
+}
diff -Npur samba-4.7.7/source3/libsmb/cli_smb2_fnum.h samba-4.7.8/source3/libsmb/cli_smb2_fnum.h
--- samba-4.7.7/source3/libsmb/cli_smb2_fnum.h	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/libsmb/cli_smb2_fnum.h	2018-06-21 10:00:46.000000000 +0200
@@ -237,4 +237,9 @@ NTSTATUS cli_smb2_shadow_copy_data(TALLO
 NTSTATUS cli_smb2_ftruncate(struct cli_state *cli,
 			uint16_t fnum,
 			uint64_t newsize);
+NTSTATUS cli_smb2_notify(struct cli_state *cli, uint16_t fnum,
+			 uint32_t buffer_size, uint32_t completion_filter,
+			 bool recursive, TALLOC_CTX *mem_ctx,
+			 struct notify_change **pchanges,
+			 uint32_t *pnum_changes);
 #endif /* __SMB2CLI_FNUM_H__ */
diff -Npur samba-4.7.7/source3/libsmb/clifile.c samba-4.7.8/source3/libsmb/clifile.c
--- samba-4.7.7/source3/libsmb/clifile.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/libsmb/clifile.c	2018-06-21 10:00:46.000000000 +0200
@@ -5609,11 +5609,19 @@ NTSTATUS cli_notify(struct cli_state *cl
 		    TALLOC_CTX *mem_ctx, uint32_t *pnum_changes,
 		    struct notify_change **pchanges)
 {
-	TALLOC_CTX *frame = talloc_stackframe();
+	TALLOC_CTX *frame;
 	struct tevent_context *ev;
 	struct tevent_req *req;
 	NTSTATUS status = NT_STATUS_NO_MEMORY;
 
+	if (smbXcli_conn_protocol(cli->conn) >= PROTOCOL_SMB2_02) {
+		return cli_smb2_notify(cli, fnum, buffer_size,
+				       completion_filter, recursive,
+				       mem_ctx, pchanges, pnum_changes);
+	}
+
+	frame = talloc_stackframe();
+
 	if (smbXcli_conn_has_async_calls(cli->conn)) {
 		/*
 		 * Can't use sync call while an async call is in flight
diff -Npur samba-4.7.7/source3/libsmb/dsgetdcname.c samba-4.7.8/source3/libsmb/dsgetdcname.c
--- samba-4.7.7/source3/libsmb/dsgetdcname.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/source3/libsmb/dsgetdcname.c	2018-06-21 10:00:46.000000000 +0200
@@ -154,7 +154,7 @@ static NTSTATUS dsgetdcname_cache_delete
 
 static NTSTATUS dsgetdcname_cache_store(TALLOC_CTX *mem_ctx,
 					const char *domain_name,
-					const DATA_BLOB *blob)
+					DATA_BLOB blob)
 {
 	time_t expire_time;
 	char *key;
@@ -200,7 +200,8 @@ static NTSTATUS store_cldap_reply(TALLOC
 	}
 
 	if (r->domain_name) {
-		status = dsgetdcname_cache_store(mem_ctx, r->domain_name, &blob);
+		status = dsgetdcname_cache_store(mem_ctx, r->domain_name,
+						 blob);
 		if (!NT_STATUS_IS_OK(status)) {
 			goto done;
 		}
@@ -209,7 +210,7 @@ static NTSTATUS store_cldap_reply(TALLOC
 		}
 	}
 	if (r->dns_domain) {
-		status = dsgetdcname_cache_store(mem_ctx, r->dns_domain, &blob);
+		status = dsgetdcname_cache_store(mem_ctx, r->dns_domain, blob);
 		if (!NT_STATUS_IS_OK(status)) {
 			goto done;
 		}
diff -Npur samba-4.7.7/source3/libsmb/libsmb_server.c samba-4.7.8/source3/libsmb/libsmb_server.c
--- samba-4.7.7/source3/libsmb/libsmb_server.c	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/source3/libsmb/libsmb_server.c	2018-06-21 10:00:46.000000000 +0200
@@ -500,7 +500,7 @@ SMBC_server_internal(TALLOC_CTX *ctx,
 				 lp_client_max_protocol());
 	if (!NT_STATUS_IS_OK(status)) {
 		cli_shutdown(c);
-		errno = ETIMEDOUT;
+		errno = map_errno_from_nt_status(status);
 		return NULL;
 	}
 
diff -Npur samba-4.7.7/source3/modules/vfs_acl_common.c samba-4.7.8/source3/modules/vfs_acl_common.c
--- samba-4.7.7/source3/modules/vfs_acl_common.c	2017-11-02 12:38:36.000000000 +0100
+++ samba-4.7.8/source3/modules/vfs_acl_common.c	2018-06-21 10:00:46.000000000 +0200
@@ -1172,8 +1172,11 @@ static NTSTATUS fset_nt_acl_common(vfs_h
 	}
 
 	psd->revision = orig_psd->revision;
-	/* All our SD's are self relative. */
-	psd->type = orig_psd->type | SEC_DESC_SELF_RELATIVE;
+	if (security_info_sent & SECINFO_DACL) {
+		psd->type = orig_psd->type;
+		/* All our SD's are self relative. */
+		psd->type |= SEC_DESC_SELF_RELATIVE;
+	}
 
 	if ((security_info_sent & SECINFO_OWNER) && (orig_psd->owner_sid != NULL)) {
 		if (!dom_sid_equal(orig_psd->owner_sid, psd->owner_sid)) {
diff -Npur samba-4.7.7/source3/modules/vfs_ceph.c samba-4.7.8/source3/modules/vfs_ceph.c
--- samba-4.7.7/source3/modules/vfs_ceph.c	2018-02-07 09:37:51.000000000 +0100
+++ samba-4.7.8/source3/modules/vfs_ceph.c	2018-06-21 10:00:46.000000000 +0200
@@ -37,6 +37,7 @@
 #include "cephfs/libcephfs.h"
 #include "smbprofile.h"
 #include "modules/posixacl_xattr.h"
+#include "lib/util/tevent_unix.h"
 
 #undef DBGC_CLASS
 #define DBGC_CLASS DBGC_VFS
@@ -481,6 +482,57 @@ static ssize_t cephwrap_pread(struct vfs
 	WRAP_RETURN(result);
 }
 
+struct cephwrap_pread_state {
+	ssize_t bytes_read;
+	struct vfs_aio_state vfs_aio_state;
+};
+
+/*
+ * Fake up an async ceph read by calling the synchronous API.
+ */
+static struct tevent_req *cephwrap_pread_send(struct vfs_handle_struct *handle,
+					      TALLOC_CTX *mem_ctx,
+					      struct tevent_context *ev,
+					      struct files_struct *fsp,
+					      void *data,
+					      size_t n, off_t offset)
+{
+	struct tevent_req *req = NULL;
+	struct cephwrap_pread_state *state = NULL;
+	int ret = -1;
+
+	DBG_DEBUG("[CEPH] %s\n", __func__);
+	req = tevent_req_create(mem_ctx, &state, struct cephwrap_pread_state);
+	if (req == NULL) {
+		return NULL;
+	}
+
+	ret = ceph_read(handle->data, fsp->fh->fd, data, n, offset);
+	if (ret < 0) {
+		/* ceph returns -errno on error. */
+		tevent_req_error(req, -ret);
+		return tevent_req_post(req, ev);
+	}
+
+	state->bytes_read = ret;
+	tevent_req_done(req);
+	/* Return and schedule the completion of the call. */
+	return tevent_req_post(req, ev);
+}
+
+static ssize_t cephwrap_pread_recv(struct tevent_req *req,
+				   struct vfs_aio_state *vfs_aio_state)
+{
+	struct cephwrap_pread_state *state =
+		tevent_req_data(req, struct cephwrap_pread_state);
+
+	DBG_DEBUG("[CEPH] %s\n", __func__);
+	if (tevent_req_is_unix_error(req, &vfs_aio_state->error)) {
+		return -1;
+	}
+	*vfs_aio_state = state->vfs_aio_state;
+	return state->bytes_read;
+}
 
 static ssize_t cephwrap_write(struct vfs_handle_struct *handle, files_struct *fsp, const void *data, size_t n)
 {
@@ -509,6 +561,58 @@ static ssize_t cephwrap_pwrite(struct vf
 	WRAP_RETURN(result);
 }
 
+struct cephwrap_pwrite_state {
+	ssize_t bytes_written;
+	struct vfs_aio_state vfs_aio_state;
+};
+
+/*
+ * Fake up an async ceph write by calling the synchronous API.
+ */
+static struct tevent_req *cephwrap_pwrite_send(struct vfs_handle_struct *handle,
+					       TALLOC_CTX *mem_ctx,
+					       struct tevent_context *ev,
+					       struct files_struct *fsp,
+					       const void *data,
+					       size_t n, off_t offset)
+{
+	struct tevent_req *req = NULL;
+	struct cephwrap_pwrite_state *state = NULL;
+	int ret = -1;
+
+	DBG_DEBUG("[CEPH] %s\n", __func__);
+	req = tevent_req_create(mem_ctx, &state, struct cephwrap_pwrite_state);
+	if (req == NULL) {
+		return NULL;
+	}
+
+	ret = ceph_write(handle->data, fsp->fh->fd, data, n, offset);
+	if (ret < 0) {
+		/* ceph returns -errno on error. */
+		tevent_req_error(req, -ret);
+		return tevent_req_post(req, ev);
+	}
+
+	state->bytes_written = ret;
+	tevent_req_done(req);
+	/* Return and schedule the completion of the call. */
+	return tevent_req_post(req, ev);
+}
+
+static ssize_t cephwrap_pwrite_recv(struct tevent_req *req,
+				    struct vfs_aio_state *vfs_aio_state)
+{
+	struct cephwrap_pwrite_state *state =
+		tevent_req_data(req, struct cephwrap_pwrite_state);
+
+	DBG_DEBUG("[CEPH] %s\n", __func__);
+	if (tevent_req_is_unix_error(req, &vfs_aio_state->error)) {
+		return -1;
+	}
+	*vfs_aio_state = state->vfs_aio_state;
+	return state->bytes_written;
+}
+
 static off_t cephwrap_lseek(struct vfs_handle_struct *handle, files_struct *fsp, off_t offset, int whence)
 {
 	off_t result = 0;
@@ -569,6 +673,56 @@ static int cephwrap_fsync(struct vfs_han
 	WRAP_RETURN(result);
 }
 
+/*
+ * Fake up an async ceph fsync by calling the synchronous API.
+ */
+
+static struct tevent_req *cephwrap_fsync_send(struct vfs_handle_struct *handle,
+					TALLOC_CTX *mem_ctx,
+					struct tevent_context *ev,
+					files_struct *fsp)
+{
+	struct tevent_req *req = NULL;
+	struct vfs_aio_state *state = NULL;
+	int ret = -1;
+
+	DBG_DEBUG("[CEPH] cephwrap_fsync_send\n");
+
+	req = tevent_req_create(mem_ctx, &state, struct vfs_aio_state);
+	if (req == NULL) {
+		return NULL;
+	}
+
+	/* Make sync call. */
+	ret = ceph_fsync(handle->data, fsp->fh->fd, false);
+
+	if (ret != 0) {
+		/* ceph_fsync returns -errno on error. */
+		tevent_req_error(req, -ret);
+		return tevent_req_post(req, ev);
+	}
+
+	/* Mark it as done. */
+	tevent_req_done(req);
+	/* Return and schedule the completion of the call. */
+	return tevent_req_post(req, ev);
+}
+
+static int cephwrap_fsync_recv(struct tevent_req *req,
+				struct vfs_aio_state *vfs_aio_state)
+{
+	struct vfs_aio_state *state =
+		tevent_req_data(req, struct vfs_aio_state);
+
+	DBG_DEBUG("[CEPH] cephwrap_fsync_recv\n");
+
+	if (tevent_req_is_unix_error(req, &vfs_aio_state->error)) {
+		return -1;
+	}
+	*vfs_aio_state = *state;
+	return 0;
+}
+
 #ifdef HAVE_CEPH_STATX
 #define SAMBA_STATX_ATTR_MASK	(CEPH_STATX_BASIC_STATS|CEPH_STATX_BTIME)
 
@@ -1201,30 +1355,31 @@ static struct smb_filename *cephwrap_rea
 				TALLOC_CTX *ctx,
 				const struct smb_filename *smb_fname)
 {
-	char *result;
+	char *result = NULL;
 	const char *path = smb_fname->base_name;
 	size_t len = strlen(path);
 	struct smb_filename *result_fname = NULL;
+	int r = -1;
 
-	result = SMB_MALLOC_ARRAY(char, PATH_MAX+1);
 	if (len && (path[0] == '/')) {
-		int r = asprintf(&result, "%s", path);
-		if (r < 0) return NULL;
+		r = asprintf(&result, "%s", path);
 	} else if ((len >= 2) && (path[0] == '.') && (path[1] == '/')) {
 		if (len == 2) {
-			int r = asprintf(&result, "%s",
+			r = asprintf(&result, "%s",
 					handle->conn->connectpath);
-			if (r < 0) return NULL;
 		} else {
-			int r = asprintf(&result, "%s/%s",
+			r = asprintf(&result, "%s/%s",
 					handle->conn->connectpath, &path[2]);
-			if (r < 0) return NULL;
 		}
 	} else {
-		int r = asprintf(&result, "%s/%s",
+		r = asprintf(&result, "%s/%s",
 				handle->conn->connectpath, path);
-		if (r < 0) return NULL;
 	}
+
+	if (r < 0) {
+		return NULL;
+	}
+
 	DBG_DEBUG("[CEPH] realpath(%p, %s) = %s\n", handle, path, result);
 	result_fname = synthetic_smb_fname(ctx,
 				result,
@@ -1433,13 +1588,19 @@ static struct vfs_fn_pointers ceph_fns =
 	.close_fn = cephwrap_close,
 	.read_fn = cephwrap_read,
 	.pread_fn = cephwrap_pread,
+	.pread_send_fn = cephwrap_pread_send,
+	.pread_recv_fn = cephwrap_pread_recv,
 	.write_fn = cephwrap_write,
 	.pwrite_fn = cephwrap_pwrite,
+	.pwrite_send_fn = cephwrap_pwrite_send,
+	.pwrite_recv_fn = cephwrap_pwrite_recv,
 	.lseek_fn = cephwrap_lseek,
 	.sendfile_fn = cephwrap_sendfile,
 	.recvfile_fn = cephwrap_recvfile,
 	.rename_fn = cephwrap_rename,
 	.fsync_fn = cephwrap_fsync,
+	.fsync_send_fn = cephwrap_fsync_send,
+	.fsync_recv_fn = cephwrap_fsync_recv,
 	.stat_fn = cephwrap_stat,
 	.fstat_fn = cephwrap_fstat,
 	.lstat_fn = cephwrap_lstat,
diff -Npur samba-4.7.7/source3/modules/vfs_streams_xattr.c samba-4.7.8/source3/modules/vfs_streams_xattr.c
--- samba-4.7.7/source3/modules/vfs_streams_xattr.c	2017-09-17 21:15:34.000000000 +0200
+++ samba-4.7.8/source3/modules/vfs_streams_xattr.c	2018-06-21 10:00:46.000000000 +0200
@@ -277,6 +277,7 @@ static int streams_xattr_fstat(vfs_handl
 
 	sbuf->st_ex_ino = stream_inode(sbuf, io->xattr_name);
 	sbuf->st_ex_mode &= ~S_IFMT;
+	sbuf->st_ex_mode &= ~S_IFDIR;
         sbuf->st_ex_mode |= S_IFREG;
         sbuf->st_ex_blocks = sbuf->st_ex_size / STAT_ST_BLOCKSIZE + 1;
 
@@ -331,6 +332,7 @@ static int streams_xattr_stat(vfs_handle
 
 	smb_fname->st.st_ex_ino = stream_inode(&smb_fname->st, xattr_name);
 	smb_fname->st.st_ex_mode &= ~S_IFMT;
+	smb_fname->st.st_ex_mode &= ~S_IFDIR;
         smb_fname->st.st_ex_mode |= S_IFREG;
         smb_fname->st.st_ex_blocks =
 	    smb_fname->st.st_ex_size / STAT_ST_BLOCKSIZE + 1;
diff -Npur samba-4.7.7/source3/passdb/machine_account_secrets.c samba-4.7.8/source3/passdb/machine_account_secrets.c
--- samba-4.7.7/source3/passdb/machine_account_secrets.c	2017-11-02 12:38:36.000000000 +0100
+++ samba-4.7.8/source3/passdb/machine_account_secrets.c	2018-06-21 10:00:46.000000000 +0200
@@ -1317,7 +1317,7 @@ NTSTATUS secrets_fetch_or_upgrade_domain
 
 	last_set_time = secrets_fetch_pass_last_set_time(domain);
 	if (last_set_time == 0) {
-		return NT_STATUS_OK;
+		return NT_STATUS_CANT_ACCESS_DOMAIN_INFO;
 	}
 	unix_to_nt_time(&last_set_nt, last_set_time);
 
diff -Npur samba-4.7.7/source3/printing/nt_printing.c samba-4.7.8/source3/printing/nt_printing.c
--- samba-4.7.7/source3/printing/nt_printing.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/source3/printing/nt_printing.c	2018-06-21 10:00:46.000000000 +0200
@@ -1143,7 +1143,7 @@ static WERROR move_driver_file_to_downlo
 				 "to rename [%s] to [%s]: %s\n",
 				 smb_fname_old->base_name, new_name,
 				 nt_errstr(status)));
-			ret = WERR_ACCESS_DENIED;
+			ret = WERR_APP_INIT_FAILURE;
 			goto out;
 		}
 	}
diff -Npur samba-4.7.7/source3/printing/printspoolss.c samba-4.7.8/source3/printing/printspoolss.c
--- samba-4.7.7/source3/printing/printspoolss.c	2017-07-04 12:05:25.000000000 +0200
+++ samba-4.7.8/source3/printing/printspoolss.c	2018-06-21 10:00:46.000000000 +0200
@@ -309,6 +309,23 @@ void print_spool_end(files_struct *fsp,
 	WERROR werr;
 	struct dcerpc_binding_handle *b = NULL;
 
+	if (fsp->fh->private_options &
+	    NTCREATEX_OPTIONS_PRIVATE_DELETE_ON_CLOSE) {
+		int ret;
+
+		/*
+		 * Job was requested to be cancelled by setting
+		 * delete on close so truncate the job file.
+		 * print_job_end() which is called from
+		 * _spoolss_EndDocPrinter() will take
+		 * care of deleting it for us.
+		 */
+		ret = ftruncate(fsp->fh->fd, 0);
+		if (ret == -1) {
+			DBG_ERR("ftruncate failed: %s\n", strerror(errno));
+		}
+	}
+
 	b = fsp->conn->spoolss_pipe->binding_handle;
 
 	switch (close_type) {
diff -Npur samba-4.7.7/source3/rpc_server/rpc_ncacn_np.c samba-4.7.8/source3/rpc_server/rpc_ncacn_np.c
--- samba-4.7.7/source3/rpc_server/rpc_ncacn_np.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/rpc_server/rpc_ncacn_np.c	2018-06-21 10:00:46.000000000 +0200
@@ -69,14 +69,16 @@ fail:
 	return NULL;
 }
 
-NTSTATUS make_internal_rpc_pipe_socketpair(TALLOC_CTX *mem_ctx,
-					   struct tevent_context *ev_ctx,
-					   struct messaging_context *msg_ctx,
-					   const char *pipe_name,
-					   const struct ndr_syntax_id *syntax,
-					   const struct tsocket_address *remote_address,
-					   const struct auth_session_info *session_info,
-					   struct npa_state **pnpa)
+NTSTATUS make_internal_rpc_pipe_socketpair(
+	TALLOC_CTX *mem_ctx,
+	struct tevent_context *ev_ctx,
+	struct messaging_context *msg_ctx,
+	const char *pipe_name,
+	const struct ndr_syntax_id *syntax,
+	const struct tsocket_address *remote_address,
+	const struct tsocket_address *local_address,
+	const struct auth_session_info *session_info,
+	struct npa_state **pnpa)
 {
 	TALLOC_CTX *tmp_ctx = talloc_stackframe();
 	struct named_pipe_client *npc;
@@ -135,6 +137,19 @@ NTSTATUS make_internal_rpc_pipe_socketpa
 		status = NT_STATUS_NO_MEMORY;
 		goto out;
 	}
+
+	npc->local_server_addr = tsocket_address_copy(local_address, npc);
+	if (npc->local_server_addr == NULL) {
+		status = NT_STATUS_NO_MEMORY;
+		goto out;
+	}
+
+	npc->local_server_name = tsocket_address_inet_addr_string(
+		npc->local_server_addr, npc);
+	if (npc->local_server_name == NULL) {
+		status = NT_STATUS_NO_MEMORY;
+		goto out;
+	}
 
 	npc->session_info = copy_session_info(npc, session_info);
 	if (npc->session_info == NULL) {
diff -Npur samba-4.7.7/source3/rpc_server/rpc_ncacn_np.h samba-4.7.8/source3/rpc_server/rpc_ncacn_np.h
--- samba-4.7.7/source3/rpc_server/rpc_ncacn_np.h	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/rpc_server/rpc_ncacn_np.h	2018-06-21 10:00:46.000000000 +0200
@@ -44,14 +44,16 @@ NTSTATUS make_external_rpc_pipe(TALLOC_C
 				const struct auth_session_info *session_info,
 				struct npa_state **pnpa);
 
-NTSTATUS make_internal_rpc_pipe_socketpair(TALLOC_CTX *mem_ctx,
-					   struct tevent_context *ev_ctx,
-					   struct messaging_context *msg_ctx,
-					   const char *pipe_name,
-					   const struct ndr_syntax_id *syntax,
-					   const struct tsocket_address *remote_address,
-					   const struct auth_session_info *session_info,
-					   struct npa_state **pnpa);
+NTSTATUS make_internal_rpc_pipe_socketpair(
+	TALLOC_CTX *mem_ctx,
+	struct tevent_context *ev_ctx,
+	struct messaging_context *msg_ctx,
+	const char *pipe_name,
+	const struct ndr_syntax_id *syntax,
+	const struct tsocket_address *remote_address,
+	const struct tsocket_address *local_address,
+	const struct auth_session_info *session_info,
+	struct npa_state **pnpa);
 
 struct np_proxy_state {
 	uint16_t file_type;
diff -Npur samba-4.7.7/source3/rpc_server/srv_pipe_hnd.c samba-4.7.8/source3/rpc_server/srv_pipe_hnd.c
--- samba-4.7.7/source3/rpc_server/srv_pipe_hnd.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/rpc_server/srv_pipe_hnd.c	2018-06-21 10:00:46.000000000 +0200
@@ -106,14 +106,16 @@ NTSTATUS np_open(TALLOC_CTX *mem_ctx, co
 			return NT_STATUS_OBJECT_NAME_NOT_FOUND;
 		}
 
-		status = make_internal_rpc_pipe_socketpair(handle,
-							   ev_ctx,
-							   msg_ctx,
-							   name,
-							   &syntax,
-							   remote_client_address,
-							   session_info,
-							   &npa);
+		status = make_internal_rpc_pipe_socketpair(
+			handle,
+			ev_ctx,
+			msg_ctx,
+			name,
+			&syntax,
+			remote_client_address,
+			local_server_address,
+			session_info,
+			&npa);
 		if (!NT_STATUS_IS_OK(status)) {
 			talloc_free(handle);
 			return status;
diff -Npur samba-4.7.7/source3/rpcclient/cmd_srvsvc.c samba-4.7.8/source3/rpcclient/cmd_srvsvc.c
--- samba-4.7.7/source3/rpcclient/cmd_srvsvc.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/rpcclient/cmd_srvsvc.c	2018-06-21 10:00:46.000000000 +0200
@@ -883,6 +883,8 @@ static WERROR cmd_srvsvc_net_sess_enum(s
 		goto done;
 	}
 
+	d_printf("Received %d entries.\n", total_entries);
+
  done:
 	return result;
 }
diff -Npur samba-4.7.7/source3/script/tests/test_dfree_quota.sh samba-4.7.8/source3/script/tests/test_dfree_quota.sh
--- samba-4.7.7/source3/script/tests/test_dfree_quota.sh	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/script/tests/test_dfree_quota.sh	2018-06-21 10:00:46.000000000 +0200
@@ -130,6 +130,35 @@ test_smbclient_dfree() {
 	return $status
 }
 
+# Issue two queries to different directories in one session to test
+# caching effects
+test_smbclient_dfree_2() {
+	name="$1"
+	share="$2"
+	dir1="$3"
+	dir2="$4"
+	confs="$5"
+	expected="$6"
+	subunit_start_test "$name"
+	setup_conf $confs
+	output=$($VALGRIND $smbclient //$SERVER/$share \
+			   -c "cd $dir1; du; cd ..; cd $dir2 ; du" $@ 2>&1)
+	status=$?
+	if [ "$status" = "0" ]; then
+		received=$(echo "$output" | \
+				   awk '/blocks of size/ {print $1, $5, $6}' | \
+				   tr '\n' ' ')
+		if [ "$expected" = "$received" ]; then
+			subunit_pass_test "$name"
+		else
+			echo "$output" | subunit_fail_test "$name"
+		fi
+	else
+		echo "$output" | subunit_fail_test "$name"
+	fi
+	return $status
+}
+
 test_smbcquotas() {
 	name="$1"
     conf="$2"
@@ -164,6 +193,12 @@ test_smbclient_dfree "Test large disk" d
 #basic quota test (SMB1 only)
 test_smbcquotas "Test user quota" confq1 $USERNAME "40960/4096000/3072000" -U$USERNAME%$PASSWORD --option=clientmaxprotocol=NT1 || failed=`expr $failed + 1`
 
+# Test dfree cache through queries in two different directories
+test_smbclient_dfree_2 "Test dfree cache" dfq_cache "." "subdir1" \
+		       "conf1 . conf2 subdir1" "10 1024. 5 20 1024. 10 " \
+		       -U$USERNAME%$PASSWORD --option=clientmaxprotocol=SMB3 \
+	|| failed=`expr $failed + 1`
+
 #quota limit > disk size, remaining quota > disk free
 test_smbclient_dfree "Test dfree share root df vs quota case 1" dfq "." "confdfq1 ." "80 1024. 40" -U$USERNAME%$PASSWORD --option=clientmaxprotocol=SMB3 || failed=`expr $failed + 1`
 #quota limit > disk size, remaining quota < disk free
diff -Npur samba-4.7.7/source3/script/tests/test_rpcclient_netsessenum.sh samba-4.7.8/source3/script/tests/test_rpcclient_netsessenum.sh
--- samba-4.7.7/source3/script/tests/test_rpcclient_netsessenum.sh	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/source3/script/tests/test_rpcclient_netsessenum.sh	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,55 @@
+#!/bin/sh
+#
+# Blackbox tests for the rpcclient srvsvc commands
+#
+# Copyright (C) 2018 Christof Schmitt
+
+if [ $# -lt 6 ]; then
+cat <<EOF
+Usage: $0 DOMAIN ADMIN_USER ADMIN_PASSWORD SERVER RPCCLIENT SMBTORTURE3 SHARE
+EOF
+exit 1;
+fi
+
+DOMAIN="$1"
+ADMIN_USER="$2"
+ADMIN_PASSWORD="$3"
+SERVER="$4"
+RPCCLIENT="$5"
+SMBTORTURE3="$6"
+SHARE="$7"
+
+USERPASS="-U$DOMAIN/$ADMIN_USER%$ADMIN_PASSWORD"
+RPCCLIENTCMD="$RPCCLIENT $SERVER $USERPASS"
+
+incdir=$(dirname $0)/../../../testprogs/blackbox
+. $incdir/subunit.sh
+
+failed=0
+
+#
+# Verify initial number of sessions.
+#
+$RPCCLIENTCMD -c NetSessEnum | grep Received
+RC=$?
+testit "netsessenum" test $RC = 0 || failed=$(expr $failed + 1)
+
+OUT=$($RPCCLIENTCMD -c NetSessEnum | grep Received)
+test "$OUT" = "Received 1 entries."
+RC=$?
+testit "count1" test $RC -eq 0  || failed=$(expr $failed + 1)
+
+#
+# Inject smbd crash
+#
+$SMBTORTURE3 //"$SERVER"/"$SHARE" "$USERPASS" CLEANUP1
+
+#
+# Verify number of sessions after crash
+#
+OUT=$($RPCCLIENTCMD -c NetSessEnum | grep Received)
+test "$OUT" = "Received 1 entries."
+RC=$?
+testit "count2" test $RC -eq 0  || failed=$(expr $failed + 1)
+
+testok $0 $failed
diff -Npur samba-4.7.7/source3/script/tests/test_smbclient_s3.sh samba-4.7.8/source3/script/tests/test_smbclient_s3.sh
--- samba-4.7.7/source3/script/tests/test_smbclient_s3.sh	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/source3/script/tests/test_smbclient_s3.sh	2018-06-21 10:00:46.000000000 +0200
@@ -1521,6 +1521,78 @@ EOF
     return 0
 }
 
+# Test xattr_stream correctly reports mode.
+# BUG: https://bugzilla.samba.org/show_bug.cgi?id=13380
+
+test_stream_directory_xattr()
+{
+    tmpfile=$PREFIX/smbclient_interactive_prompt_commands
+#
+# Test against streams_xattr
+#
+    cat > $tmpfile <<EOF
+deltree foo
+mkdir foo
+put ${PREFIX}/smbclient_interactive_prompt_commands foo:bar
+setmode foo -a
+allinfo foo:bar
+deltree foo
+quit
+EOF
+    cmd='CLI_FORCE_INTERACTIVE=yes $SMBCLIENT "$@" -U$USERNAME%$PASSWORD //$SERVER/streams_xattr -I $SERVER_IP $ADDARGS < $tmpfile 2>&1'
+    eval echo "$cmd"
+    out=`eval $cmd`
+    ret=$?
+    rm -f $tmpfile
+
+    if [ $ret != 0 ] ; then
+	echo "$out"
+	echo "failed checking attributes on xattr stream foo:bar with error $ret"
+	return 1
+    fi
+
+    echo "$out" | grep "attributes:.*80"
+    ret=$?
+    if [ $ret != 0 ] ; then
+	echo "$out"
+	echo "failed checking attributes on xattr stream foo:bar"
+	return 1
+    fi
+
+#
+# Test against streams_depot
+#
+    cat > $tmpfile <<EOF
+deltree foo
+mkdir foo
+put ${PREFIX}/smbclient_interactive_prompt_commands foo:bar
+setmode foo -a
+allinfo foo:bar
+deltree foo
+quit
+EOF
+    cmd='CLI_FORCE_INTERACTIVE=yes $SMBCLIENT "$@" -U$USERNAME%$PASSWORD //$SERVER/tmp -I $SERVER_IP $ADDARGS < $tmpfile 2>&1'
+    eval echo "$cmd"
+    out=`eval $cmd`
+    ret=$?
+    rm -f $tmpfile
+
+    if [ $ret != 0 ] ; then
+	echo "$out"
+	echo "failed checking attributes on depot stream foo:bar with error $ret"
+	return 1
+    fi
+
+    echo "$out" | grep "attributes:.*80"
+    ret=$?
+    if [ $ret != 0 ] ; then
+	echo "$out"
+	echo "failed checking attributes on depot stream foo:bar"
+	return 1
+    fi
+}
+
+#
 LOGDIR_PREFIX=test_smbclient_s3
 
 # possibly remove old logdirs:
@@ -1620,6 +1692,10 @@ testit "streams_depot can delete correct
     test_streams_depot_delete || \
     failed=`expr $failed + 1`
 
+testit "stream_xattr attributes" \
+    test_stream_directory_xattr || \
+    failed=`expr $failed + 1`
+
 testit "follow symlinks = no" \
     test_nosymlinks || \
     failed=`expr $failed + 1`
diff -Npur samba-4.7.7/source3/selftest/tests.py samba-4.7.8/source3/selftest/tests.py
--- samba-4.7.7/source3/selftest/tests.py	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/source3/selftest/tests.py	2018-06-21 10:00:46.000000000 +0200
@@ -78,7 +78,7 @@ tests = ["FDPASS", "LOCK1", "LOCK2", "LO
         "GETADDRINFO", "UID-REGRESSION-TEST", "SHORTNAME-TEST",
         "CASE-INSENSITIVE-CREATE", "SMB2-BASIC", "NTTRANS-FSCTL", "SMB2-NEGPROT",
         "SMB2-SESSION-REAUTH", "SMB2-SESSION-RECONNECT", "SMB2-FTRUNCATE",
-        "SMB2-ANONYMOUS",
+        "SMB2-ANONYMOUS", "SMB2-DIR-FSYNC",
         "CLEANUP1",
         "CLEANUP2",
         "CLEANUP4",
@@ -201,7 +201,21 @@ plantestsuite("samba3.wbinfo_simple.(%s:
 plantestsuite("samba3.wbinfo_name_lookup", env,
               [ os.path.join(srcdir(),
                             "nsswitch/tests/test_wbinfo_name_lookup.sh"),
-                '$DOMAIN', '$DC_USERNAME' ])
+                '$DOMAIN', '$REALM', '$DC_USERNAME' ])
+
+env = "ad_member:local"
+plantestsuite("samba3.wbinfo_user_info", env,
+              [ os.path.join(srcdir(),
+                            "nsswitch/tests/test_wbinfo_user_info.sh"),
+                '$DOMAIN', '$REALM', 'alice', 'alice', 'jane', 'jane.doe' ])
+
+env = "fl2008r2dc:local"
+plantestsuite("samba3.wbinfo_user_info", env,
+              [ os.path.join(srcdir(),
+                            "nsswitch/tests/test_wbinfo_user_info.sh"),
+                '$TRUST_DOMAIN', '$TRUST_REALM', 'alice', 'alice', 'jane', 'jane.doe' ])
+
+env = "ad_member"
 t = "WBCLIENT-MULTI-PING"
 plantestsuite("samba3.smbtorture_s3.%s" % t, env, [os.path.join(samba3srcdir, "script/tests/test_smbtorture_s3.sh"), t, '//foo/bar', '""', '""', smbtorture3, ""])
 plantestsuite("samba3.substitutions", env, [os.path.join(samba3srcdir, "script/tests/test_substitutions.sh"), "$SERVER", "alice", "Secret007", "$PREFIX"])
@@ -612,6 +626,12 @@ plantestsuite("samba3.blackbox.smbclient
                "$USERNAME", "$PASSWORD", "$SERVER",
                smbclient3])
 
+plantestsuite("samba3.blackbox.rpcclient_netsessenum", "ad_member",
+              [os.path.join(samba3srcdir,
+                            "script/tests/test_rpcclient_netsessenum.sh"),
+               "$DOMAIN", "$DC_USERNAME", "$DC_PASSWORD", "$SERVER",
+               os.path.join(bindir(), "rpcclient"), smbtorture3, "tmp"])
+
 # The ktest environment uses:
 # server min protocol = SMB3_00
 # client max protocol = SMB3
diff -Npur samba-4.7.7/source3/smbd/dfree.c samba-4.7.8/source3/smbd/dfree.c
--- samba-4.7.7/source3/smbd/dfree.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/smbd/dfree.c	2018-06-21 10:00:46.000000000 +0200
@@ -21,6 +21,7 @@
 #include "smbd/smbd.h"
 #include "smbd/globals.h"
 #include "lib/util_file.h"
+#include "lib/util/memcache.h"
 
 /****************************************************************************
  Normalise for DOS usage.
@@ -167,48 +168,113 @@ dfree_done:
 
 /****************************************************************************
  Potentially returned cached dfree info.
+
+ Depending on the file system layout and file system features, the free space
+ information can be different for different sub directories underneath a SMB
+ share. Store the cache information in memcache using the query path as the
+ key to accomodate this.
 ****************************************************************************/
 
 uint64_t get_dfree_info(connection_struct *conn, struct smb_filename *fname,
 			uint64_t *bsize, uint64_t *dfree, uint64_t *dsize)
 {
 	int dfree_cache_time = lp_dfree_cache_time(SNUM(conn));
-	struct dfree_cached_info *dfc = conn->dfree_info;
+	struct dfree_cached_info *dfc = NULL;
+	struct dfree_cached_info dfc_new = { 0 };
 	uint64_t dfree_ret;
+	char tmpbuf[PATH_MAX];
+	char *full_path = NULL;
+	char *to_free = NULL;
+	char *key_path = NULL;
+	size_t len;
+	DATA_BLOB key, value;
+	bool found;
 
 	if (!dfree_cache_time) {
 		return sys_disk_free(conn, fname, bsize, dfree, dsize);
 	}
 
+	len = full_path_tos(conn->connectpath,
+			    fname->base_name,
+			    tmpbuf,
+			    sizeof(tmpbuf),
+			    &full_path,
+			    &to_free);
+	if (len == -1) {
+		errno = ENOMEM;
+		return -1;
+	}
+
+	if (VALID_STAT(fname->st) && S_ISREG(fname->st.st_ex_mode)) {
+		/*
+		 * In case of a file use the parent directory to reduce number
+		 * of cache entries.
+		 */
+		bool ok;
+
+		ok = parent_dirname(talloc_tos(),
+				    full_path,
+				    &key_path,
+				    NULL);
+		TALLOC_FREE(to_free); /* We're done with full_path */
+
+		if (!ok) {
+			errno = ENOMEM;
+			return -1;
+		}
+
+		/*
+		 * key_path is always a talloced object.
+		 */
+		to_free = key_path;
+	} else {
+		/*
+		 * key_path might not be a talloced object; rely on
+		 * to_free set from full_path_tos.
+		 */
+		key_path = full_path;
+	}
+
+	key = data_blob_const(key_path, strlen(key_path));
+	found = memcache_lookup(smbd_memcache(),
+				DFREE_CACHE,
+				key,
+				&value);
+	dfc = found ? (struct dfree_cached_info *)value.data : NULL;
+
 	if (dfc && (conn->lastused - dfc->last_dfree_time < dfree_cache_time)) {
-		/* Return cached info. */
+		DBG_DEBUG("Returning dfree cache entry for %s\n", key_path);
 		*bsize = dfc->bsize;
 		*dfree = dfc->dfree;
 		*dsize = dfc->dsize;
-		return dfc->dfree_ret;
+		dfree_ret = dfc->dfree_ret;
+		goto out;
 	}
 
 	dfree_ret = sys_disk_free(conn, fname, bsize, dfree, dsize);
 
 	if (dfree_ret == (uint64_t)-1) {
 		/* Don't cache bad data. */
-		return dfree_ret;
+		goto out;
 	}
 
-	/* No cached info or time to refresh. */
-	if (!dfc) {
-		dfc = talloc(conn, struct dfree_cached_info);
-		if (!dfc) {
-			return dfree_ret;
-		}
-		conn->dfree_info = dfc;
-	}
-
-	dfc->bsize = *bsize;
-	dfc->dfree = *dfree;
-	dfc->dsize = *dsize;
-	dfc->dfree_ret = dfree_ret;
-	dfc->last_dfree_time = conn->lastused;
+	DBG_DEBUG("Creating dfree cache entry for %s\n", key_path);
+	dfc_new.bsize = *bsize;
+	dfc_new.dfree = *dfree;
+	dfc_new.dsize = *dsize;
+	dfc_new.dfree_ret = dfree_ret;
+	dfc_new.last_dfree_time = conn->lastused;
+	memcache_add(smbd_memcache(),
+		     DFREE_CACHE,
+		     key,
+		     data_blob_const(&dfc_new, sizeof(dfc_new)));
 
+out:
+	TALLOC_FREE(to_free);
 	return dfree_ret;
 }
+
+void flush_dfree_cache(void)
+{
+	memcache_flush(smbd_memcache(), DFREE_CACHE);
+}
diff -Npur samba-4.7.7/source3/smbd/dosmode.c samba-4.7.8/source3/smbd/dosmode.c
--- samba-4.7.7/source3/smbd/dosmode.c	2017-11-02 12:38:36.000000000 +0100
+++ samba-4.7.8/source3/smbd/dosmode.c	2018-06-21 10:00:46.000000000 +0200
@@ -681,6 +681,28 @@ uint32_t dos_mode(connection_struct *con
 		}
 	}
 
+	/*
+	 * According to MS-FSA a stream name does not have
+	 * separate DOS attribute metadata, so we must return
+	 * the DOS attribute from the base filename. With one caveat,
+	 * a non-default stream name can never be a directory.
+	 *
+	 * As this is common to all streams data stores, we handle
+	 * it here instead of inside all stream VFS modules.
+	 *
+	 * BUG: https://bugzilla.samba.org/show_bug.cgi?id=13380
+	 */
+
+	if (is_ntfs_stream_smb_fname(smb_fname)) {
+		/* is_ntfs_stream_smb_fname() returns false for a POSIX path. */
+		if (!is_ntfs_default_stream_smb_fname(smb_fname)) {
+			/*
+			 * Non-default stream name, not a posix path.
+			 */
+			result &= ~(FILE_ATTRIBUTE_DIRECTORY);
+		}
+	}
+
 	if (conn->fs_capabilities & FILE_FILE_COMPRESSION) {
 		bool compressed = false;
 		status = dos_mode_check_compressed(conn, smb_fname,
diff -Npur samba-4.7.7/source3/smbd/proto.h samba-4.7.8/source3/smbd/proto.h
--- samba-4.7.7/source3/smbd/proto.h	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/smbd/proto.h	2018-06-21 10:00:46.000000000 +0200
@@ -176,6 +176,7 @@ uint64_t sys_disk_free(connection_struct
 		       uint64_t *bsize, uint64_t *dfree, uint64_t *dsize);
 uint64_t get_dfree_info(connection_struct *conn, struct smb_filename *fname,
 			uint64_t *bsize, uint64_t *dfree, uint64_t *dsize);
+void flush_dfree_cache(void);
 
 /* The following definitions come from smbd/dir.c  */
 
diff -Npur samba-4.7.7/source3/smbd/pysmbd.c samba-4.7.8/source3/smbd/pysmbd.c
--- samba-4.7.7/source3/smbd/pysmbd.c	2018-02-07 09:37:51.000000000 +0100
+++ samba-4.7.8/source3/smbd/pysmbd.c	2018-06-21 10:00:46.000000000 +0200
@@ -268,101 +268,101 @@ static int set_acl_entry_perms(SMB_ACL_E
 	return 0;
 }
 
-static SMB_ACL_T make_simple_acl(gid_t gid, mode_t chmod_mode)
+static SMB_ACL_T make_simple_acl(TALLOC_CTX *mem_ctx,
+			gid_t gid,
+			mode_t chmod_mode)
 {
-	TALLOC_CTX *frame = talloc_stackframe();
-
 	mode_t mode = SMB_ACL_READ|SMB_ACL_WRITE|SMB_ACL_EXECUTE;
 
 	mode_t mode_user = (chmod_mode & 0700) >> 6;
 	mode_t mode_group = (chmod_mode & 070) >> 3;
 	mode_t mode_other = chmod_mode &  07;
 	SMB_ACL_ENTRY_T entry;
-	SMB_ACL_T acl = sys_acl_init(frame);
+	SMB_ACL_T acl = sys_acl_init(mem_ctx);
 
 	if (!acl) {
 		return NULL;
 	}
 
 	if (sys_acl_create_entry(&acl, &entry) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (sys_acl_set_tag_type(entry, SMB_ACL_USER_OBJ) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (set_acl_entry_perms(entry, mode_user) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (sys_acl_create_entry(&acl, &entry) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (sys_acl_set_tag_type(entry, SMB_ACL_GROUP_OBJ) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (set_acl_entry_perms(entry, mode_group) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (sys_acl_create_entry(&acl, &entry) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (sys_acl_set_tag_type(entry, SMB_ACL_OTHER) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (set_acl_entry_perms(entry, mode_other) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (gid != -1) {
 		if (sys_acl_create_entry(&acl, &entry) != 0) {
-			TALLOC_FREE(frame);
+			TALLOC_FREE(acl);
 			return NULL;
 		}
 
 		if (sys_acl_set_tag_type(entry, SMB_ACL_GROUP) != 0) {
-			TALLOC_FREE(frame);
+			TALLOC_FREE(acl);
 			return NULL;
 		}
 
 		if (sys_acl_set_qualifier(entry, &gid) != 0) {
-			TALLOC_FREE(frame);
+			TALLOC_FREE(acl);
 			return NULL;
 		}
 
 		if (set_acl_entry_perms(entry, mode_group) != 0) {
-			TALLOC_FREE(frame);
+			TALLOC_FREE(acl);
 			return NULL;
 		}
 	}
 
 	if (sys_acl_create_entry(&acl, &entry) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (sys_acl_set_tag_type(entry, SMB_ACL_MASK) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 
 	if (set_acl_entry_perms(entry, mode) != 0) {
-		TALLOC_FREE(frame);
+		TALLOC_FREE(acl);
 		return NULL;
 	}
 	return acl;
@@ -386,17 +386,20 @@ static PyObject *py_smbd_set_simple_acl(
 					 &fname, &mode, &gid, &service))
 		return NULL;
 
-	acl = make_simple_acl(gid, mode);
-
 	frame = talloc_stackframe();
 
+	acl = make_simple_acl(frame, gid, mode);
+	if (acl == NULL) {
+		TALLOC_FREE(frame);
+		return NULL;
+	}
+
 	conn = get_conn(frame, service);
 	if (!conn) {
 		return NULL;
 	}
 
 	ret = set_sys_acl_conn(fname, SMB_ACL_TYPE_ACCESS, acl, conn);
-	TALLOC_FREE(acl);
 
 	if (ret != 0) {
 		TALLOC_FREE(frame);
diff -Npur samba-4.7.7/source3/smbd/server_reload.c samba-4.7.8/source3/smbd/server_reload.c
--- samba-4.7.7/source3/smbd/server_reload.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/smbd/server_reload.c	2018-06-21 10:00:46.000000000 +0200
@@ -164,6 +164,7 @@ bool reload_services(struct smbd_server_
 
 	mangle_reset_cache();
 	reset_stat_cache();
+	flush_dfree_cache();
 
 	/* this forces service parameters to be flushed */
 	set_current_service(NULL,0,True);
diff -Npur samba-4.7.7/source3/smbd/session.c samba-4.7.8/source3/smbd/session.c
--- samba-4.7.7/source3/smbd/session.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/smbd/session.c	2018-06-21 10:00:46.000000000 +0200
@@ -139,6 +139,10 @@ static int gather_sessioninfo(const char
 		return 0;
 	}
 
+	if (!process_exists(session->pid)) {
+		return 0;
+	}
+
 	sesslist->sessions = talloc_realloc(
 		sesslist->mem_ctx, sesslist->sessions, struct sessionid,
 		sesslist->count+1);
diff -Npur samba-4.7.7/source3/smbd/smb2_flush.c samba-4.7.8/source3/smbd/smb2_flush.c
--- samba-4.7.7/source3/smbd/smb2_flush.c	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/source3/smbd/smb2_flush.c	2018-06-21 10:00:46.000000000 +0200
@@ -23,6 +23,7 @@
 #include "smbd/globals.h"
 #include "../libcli/smb/smb_common.h"
 #include "../lib/util/tevent_ntstatus.h"
+#include "libcli/security/security.h"
 
 #undef DBGC_CLASS
 #define DBGC_CLASS DBGC_SMB2
@@ -147,8 +148,29 @@ static struct tevent_req *smbd_smb2_flus
 	}
 
 	if (!CHECK_WRITE(fsp)) {
-		tevent_req_nterror(req, NT_STATUS_ACCESS_DENIED);
-		return tevent_req_post(req, ev);
+		bool allow_dir_flush = false;
+		uint32_t flush_access = FILE_ADD_FILE | FILE_ADD_SUBDIRECTORY;
+
+		if (!fsp->is_directory) {
+			tevent_req_nterror(req, NT_STATUS_ACCESS_DENIED);
+			return tevent_req_post(req, ev);
+		}
+
+		/*
+		 * Directories are not writable in the conventional
+		 * sense, but if opened with *either*
+		 * FILE_ADD_FILE or FILE_ADD_SUBDIRECTORY
+		 * they can be flushed.
+		 */
+
+		if ((fsp->access_mask & flush_access) != 0) {
+			allow_dir_flush = true;
+		}
+
+		if (allow_dir_flush == false) {
+			tevent_req_nterror(req, NT_STATUS_ACCESS_DENIED);
+			return tevent_req_post(req, ev);
+		}
 	}
 
 	if (fsp->fh->fd == -1) {
diff -Npur samba-4.7.7/source3/torture/proto.h samba-4.7.8/source3/torture/proto.h
--- samba-4.7.7/source3/torture/proto.h	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/source3/torture/proto.h	2018-06-21 10:00:46.000000000 +0200
@@ -101,6 +101,7 @@ bool run_smb2_tcon_dependence(int dummy)
 bool run_smb2_multi_channel(int dummy);
 bool run_smb2_session_reauth(int dummy);
 bool run_smb2_ftruncate(int dummy);
+bool run_smb2_dir_fsync(int dummy);
 bool run_chain3(int dummy);
 bool run_local_conv_auth_info(int dummy);
 bool run_local_sprintf_append(int dummy);
diff -Npur samba-4.7.7/source3/torture/test_smb2.c samba-4.7.8/source3/torture/test_smb2.c
--- samba-4.7.7/source3/torture/test_smb2.c	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/source3/torture/test_smb2.c	2018-06-21 10:00:46.000000000 +0200
@@ -2065,3 +2065,273 @@ bool run_smb2_ftruncate(int dummy)
 	}
 	return correct;
 }
+
+/* Ensure SMB2 flush on directories behaves correctly. */
+
+static bool test_dir_fsync(struct cli_state *cli, const char *path)
+{
+	NTSTATUS status;
+	uint64_t fid_persistent, fid_volatile;
+	uint8_t *dir_data = NULL;
+	uint32_t dir_data_length = 0;
+
+	/* Open directory - no write abilities. */
+	status = smb2cli_create(cli->conn, cli->timeout, cli->smb2.session,
+			cli->smb2.tcon, path,
+			SMB2_OPLOCK_LEVEL_NONE, /* oplock_level, */
+			SMB2_IMPERSONATION_IMPERSONATION, /* impersonation_level, */
+			SEC_STD_SYNCHRONIZE|
+			SEC_DIR_LIST|
+			SEC_DIR_READ_ATTRIBUTE, /* desired_access, */
+			0, /* file_attributes, */
+			FILE_SHARE_READ|FILE_SHARE_WRITE|FILE_SHARE_DELETE, /* share_access, */
+			FILE_OPEN, /* create_disposition, */
+			FILE_SYNCHRONOUS_IO_NONALERT|FILE_DIRECTORY_FILE, /* create_options, */
+			NULL, /* smb2_create_blobs *blobs */
+			&fid_persistent,
+			&fid_volatile,
+			NULL, NULL, NULL);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_create '%s' (readonly) returned %s\n",
+			path,
+			nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_query_directory(
+		cli->conn, cli->timeout, cli->smb2.session, cli->smb2.tcon,
+		1, 0, 0, fid_persistent, fid_volatile, "*", 0xffff,
+		talloc_tos(), &dir_data, &dir_data_length);
+
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_query_directory returned %s\n",
+			nt_errstr(status));
+		return false;
+	}
+
+	/* Open directory no write access. Flush should fail. */
+
+	status = smb2cli_flush(cli->conn, cli->timeout, cli->smb2.session,
+			       cli->smb2.tcon, fid_persistent, fid_volatile);
+	if (!NT_STATUS_EQUAL(status, NT_STATUS_ACCESS_DENIED)) {
+		printf("smb2cli_flush on a read-only directory returned %s\n",
+			nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_close(cli->conn, cli->timeout, cli->smb2.session,
+			       cli->smb2.tcon, 0, fid_persistent, fid_volatile);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_close returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	/* Open directory write-attributes only. Flush should still fail. */
+
+	status = smb2cli_create(cli->conn, cli->timeout, cli->smb2.session,
+			cli->smb2.tcon, path,
+			SMB2_OPLOCK_LEVEL_NONE, /* oplock_level, */
+			SMB2_IMPERSONATION_IMPERSONATION, /* impersonation_level, */
+			SEC_STD_SYNCHRONIZE|
+			SEC_DIR_LIST|
+			SEC_DIR_WRITE_ATTRIBUTE|
+			SEC_DIR_READ_ATTRIBUTE, /* desired_access, */
+			0, /* file_attributes, */
+			FILE_SHARE_READ|FILE_SHARE_WRITE|FILE_SHARE_DELETE, /* share_access, */
+			FILE_OPEN, /* create_disposition, */
+			FILE_SYNCHRONOUS_IO_NONALERT|FILE_DIRECTORY_FILE, /* create_options, */
+			NULL, /* smb2_create_blobs *blobs */
+			&fid_persistent,
+			&fid_volatile,
+			NULL, NULL, NULL);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_create '%s' (write attr) returned %s\n",
+			path,
+			nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_query_directory(
+		cli->conn, cli->timeout, cli->smb2.session, cli->smb2.tcon,
+		1, 0, 0, fid_persistent, fid_volatile, "*", 0xffff,
+		talloc_tos(), &dir_data, &dir_data_length);
+
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_query_directory returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_flush(cli->conn, cli->timeout, cli->smb2.session,
+			       cli->smb2.tcon, fid_persistent, fid_volatile);
+	if (!NT_STATUS_EQUAL(status, NT_STATUS_ACCESS_DENIED)) {
+		printf("smb2cli_flush on a write-attributes directory "
+			"returned %s\n",
+			nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_close(cli->conn, cli->timeout, cli->smb2.session,
+			       cli->smb2.tcon, 0, fid_persistent, fid_volatile);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_close returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	/* Open directory with SEC_DIR_ADD_FILE access. Flush should now succeed. */
+
+	status = smb2cli_create(cli->conn, cli->timeout, cli->smb2.session,
+			cli->smb2.tcon, path,
+			SMB2_OPLOCK_LEVEL_NONE, /* oplock_level, */
+			SMB2_IMPERSONATION_IMPERSONATION, /* impersonation_level, */
+			SEC_STD_SYNCHRONIZE|
+			SEC_DIR_LIST|
+			SEC_DIR_ADD_FILE, /* desired_access, */
+			0, /* file_attributes, */
+			FILE_SHARE_READ|FILE_SHARE_WRITE|FILE_SHARE_DELETE, /* share_access, */
+			FILE_OPEN, /* create_disposition, */
+			FILE_SYNCHRONOUS_IO_NONALERT|FILE_DIRECTORY_FILE, /* create_options, */
+			NULL, /* smb2_create_blobs *blobs */
+			&fid_persistent,
+			&fid_volatile,
+			NULL, NULL, NULL);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_create '%s' (write FILE access) returned %s\n",
+			path,
+			nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_query_directory(
+		cli->conn, cli->timeout, cli->smb2.session, cli->smb2.tcon,
+		1, 0, 0, fid_persistent, fid_volatile, "*", 0xffff,
+		talloc_tos(), &dir_data, &dir_data_length);
+
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_query_directory returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_flush(cli->conn, cli->timeout, cli->smb2.session,
+			       cli->smb2.tcon, fid_persistent, fid_volatile);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_flush on a directory returned %s\n",
+			nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_close(cli->conn, cli->timeout, cli->smb2.session,
+			       cli->smb2.tcon, 0, fid_persistent, fid_volatile);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_close returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	/* Open directory with SEC_DIR_ADD_FILE access. Flush should now succeed. */
+
+	status = smb2cli_create(cli->conn, cli->timeout, cli->smb2.session,
+			cli->smb2.tcon, path,
+			SMB2_OPLOCK_LEVEL_NONE, /* oplock_level, */
+			SMB2_IMPERSONATION_IMPERSONATION, /* impersonation_level, */
+			SEC_STD_SYNCHRONIZE|
+			SEC_DIR_LIST|
+			SEC_DIR_ADD_SUBDIR, /* desired_access, */
+			0, /* file_attributes, */
+			FILE_SHARE_READ|FILE_SHARE_WRITE|FILE_SHARE_DELETE, /* share_access, */
+			FILE_OPEN, /* create_disposition, */
+			FILE_SYNCHRONOUS_IO_NONALERT|FILE_DIRECTORY_FILE, /* create_options, */
+			NULL, /* smb2_create_blobs *blobs */
+			&fid_persistent,
+			&fid_volatile,
+			NULL, NULL, NULL);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_create '%s' (write DIR access) returned %s\n",
+			path,
+			nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_query_directory(
+		cli->conn, cli->timeout, cli->smb2.session, cli->smb2.tcon,
+		1, 0, 0, fid_persistent, fid_volatile, "*", 0xffff,
+		talloc_tos(), &dir_data, &dir_data_length);
+
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_query_directory returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_flush(cli->conn, cli->timeout, cli->smb2.session,
+			       cli->smb2.tcon, fid_persistent, fid_volatile);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_flush on a directory returned %s\n",
+			nt_errstr(status));
+		return false;
+	}
+
+	status = smb2cli_close(cli->conn, cli->timeout, cli->smb2.session,
+			       cli->smb2.tcon, 0, fid_persistent, fid_volatile);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smb2cli_close returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+
+	return true;
+}
+
+bool run_smb2_dir_fsync(int dummy)
+{
+	struct cli_state *cli = NULL;
+	NTSTATUS status;
+	bool bret = false;
+	const char *dname = "fsync_test_dir";
+
+	printf("Starting SMB2-DIR-FSYNC\n");
+
+	if (!torture_init_connection(&cli)) {
+		return false;
+	}
+
+	status = smbXcli_negprot(cli->conn, cli->timeout,
+				 PROTOCOL_SMB2_02, PROTOCOL_SMB2_02);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("smbXcli_negprot returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	status = cli_session_setup_creds(cli, torture_creds);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("cli_session_setup returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	status = cli_tree_connect(cli, share, "?????", NULL);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("cli_tree_connect returned %s\n", nt_errstr(status));
+		return false;
+	}
+
+	(void)cli_rmdir(cli, dname);
+	status = cli_mkdir(cli, dname);
+	if (!NT_STATUS_IS_OK(status)) {
+		printf("cli_mkdir(%s) returned %s\n",
+			dname,
+			nt_errstr(status));
+		return false;
+	}
+
+	/* Test on a subdirectory. */
+	bret = test_dir_fsync(cli, dname);
+	if (bret == false) {
+		(void)cli_rmdir(cli, dname);
+		return false;
+	}
+	(void)cli_rmdir(cli, dname);
+
+	/* Test on the root handle of a share. */
+	bret = test_dir_fsync(cli, "");
+	if (bret == false) {
+		return false;
+	}
+	return true;
+}
diff -Npur samba-4.7.7/source3/torture/torture.c samba-4.7.8/source3/torture/torture.c
--- samba-4.7.7/source3/torture/torture.c	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/source3/torture/torture.c	2018-06-21 10:00:46.000000000 +0200
@@ -10034,7 +10034,7 @@ static bool run_local_gencache(int dummy
 	blob = data_blob_string_const_null("bar");
 	tm = time(NULL) + 60;
 
-	if (!gencache_set_data_blob("foo", &blob, tm)) {
+	if (!gencache_set_data_blob("foo", blob, tm)) {
 		d_printf("%s: gencache_set_data_blob() failed\n", __location__);
 		return False;
 	}
@@ -10073,7 +10073,7 @@ static bool run_local_gencache(int dummy
 	blob.data = (uint8_t *)&v;
 	blob.length = sizeof(v);
 
-	if (!gencache_set_data_blob("blob", &blob, tm)) {
+	if (!gencache_set_data_blob("blob", blob, tm)) {
 		d_printf("%s: gencache_set_data_blob() failed\n",
 			 __location__);
 		return false;
@@ -11650,6 +11650,7 @@ static struct {
 	{ "SMB2-MULTI-CHANNEL", run_smb2_multi_channel },
 	{ "SMB2-SESSION-REAUTH", run_smb2_session_reauth },
 	{ "SMB2-FTRUNCATE", run_smb2_ftruncate },
+	{ "SMB2-DIR-FSYNC", run_smb2_dir_fsync },
 	{ "CLEANUP1", run_cleanup1 },
 	{ "CLEANUP2", run_cleanup2 },
 	{ "CLEANUP3", run_cleanup3 },
diff -Npur samba-4.7.7/source3/utils/destroy_netlogon_creds_cli.c samba-4.7.8/source3/utils/destroy_netlogon_creds_cli.c
--- samba-4.7.7/source3/utils/destroy_netlogon_creds_cli.c	1970-01-01 01:00:00.000000000 +0100
+++ samba-4.7.8/source3/utils/destroy_netlogon_creds_cli.c	2018-06-21 10:00:46.000000000 +0200
@@ -0,0 +1,136 @@
+/*
+ * Unix SMB/CIFS implementation.
+ * Garble the netlogon_creds_cli key for testing purposes
+ * Copyright (C) Volker Lendecke 2018
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "includes.h"
+#include "system/filesys.h"
+#include <talloc.h>
+#include <tevent.h>
+#include "messages.h"
+#include "lib/util/talloc_stack.h"
+#include "popt_common.h"
+#include "lib/param/loadparm.h"
+#include "lib/param/param.h"
+#include "libcli/auth/netlogon_creds_cli.h"
+#include "lib/dbwrap/dbwrap.h"
+#include "lib/dbwrap/dbwrap_open.h"
+
+int main(int argc, const char *argv[])
+{
+	TALLOC_CTX *mem_ctx = talloc_stackframe();
+	struct tevent_context *ev;
+	struct messaging_context *msg_ctx;
+	struct loadparm_context *lp_ctx;
+	struct db_context *global_db;
+	struct netlogon_creds_cli_context *ctx;
+	struct netlogon_creds_CredentialState *creds;
+	NTSTATUS status;
+	int ret = 1;
+
+	smb_init_locale();
+
+	if (!lp_load_global(get_dyn_CONFIGFILE())) {
+		fprintf(stderr, "error opening config file %s. Error was %s\n",
+			get_dyn_CONFIGFILE(), strerror(errno));
+		goto done;
+	}
+
+	if (argc != 4) {
+		fprintf(stderr, "usage: %s cli_computer domain dc\n", argv[0]);
+		goto done;
+	}
+
+	lp_ctx = loadparm_init_s3(mem_ctx, loadparm_s3_helpers());
+	if (lp_ctx == NULL) {
+		fprintf(stderr, "loadparm_init_s3 failed\n");
+		goto done;
+	}
+
+	ev = samba_tevent_context_init(mem_ctx);
+	if (ev == NULL) {
+		fprintf(stderr, "samba3_tevent_context_init failed\n");
+		goto done;
+	}
+	msg_ctx = messaging_init(mem_ctx, ev);
+	if (msg_ctx == NULL) {
+		fprintf(stderr, "messaging_init failed\n");
+		goto done;
+	}
+
+	global_db = db_open(
+		mem_ctx,
+		lpcfg_private_db_path(mem_ctx, lp_ctx, "netlogon_creds_cli"),
+		0, TDB_CLEAR_IF_FIRST|TDB_INCOMPATIBLE_HASH,
+		O_RDWR|O_CREAT, 0600, DBWRAP_LOCK_ORDER_2,
+		DBWRAP_FLAG_OPTIMIZE_READONLY_ACCESS);
+	if (global_db == NULL) {
+		fprintf(stderr, "db_open failed\n");
+		goto done;
+	}
+
+	status = netlogon_creds_cli_set_global_db(&global_db);
+	if (!NT_STATUS_IS_OK(status)) {
+		fprintf(stderr,
+			"netlogon_creds_cli_set_global_db failed: %s\n",
+			nt_errstr(status));
+		goto done;
+	}
+
+	status = netlogon_creds_cli_context_global(
+		lp_ctx,
+		msg_ctx,
+		talloc_asprintf(mem_ctx, "%s$", argv[1]),
+		SEC_CHAN_WKSTA,
+		argv[3],
+		argv[2],
+		mem_ctx,
+		&ctx);
+	if (!NT_STATUS_IS_OK(status)) {
+		fprintf(stderr,
+			"netlogon_creds_cli_context_global failed: %s\n",
+			nt_errstr(status));
+		goto done;
+	}
+
+	status = netlogon_creds_cli_lock(ctx,
+					 mem_ctx,
+					 &creds);
+	if (!NT_STATUS_IS_OK(status)) {
+		fprintf(stderr,
+			"netlogon_creds_cli_get failed: %s\n",
+			nt_errstr(status));
+		goto done;
+	}
+
+	creds->session_key[0]++;
+
+	status = netlogon_creds_cli_store(ctx, &creds);
+	if (!NT_STATUS_IS_OK(status)) {
+		fprintf(stderr,
+			"netlogon_creds_cli_store failed: %s\n",
+			nt_errstr(status));
+		goto done;
+	}
+
+	TALLOC_FREE(creds);
+
+	ret = 0;
+done:
+	TALLOC_FREE(mem_ctx);
+	return ret;
+}
diff -Npur samba-4.7.7/source3/utils/net_cache.c samba-4.7.8/source3/utils/net_cache.c
--- samba-4.7.7/source3/utils/net_cache.c	2017-07-04 21:22:39.000000000 +0200
+++ samba-4.7.8/source3/utils/net_cache.c	2018-06-21 10:00:46.000000000 +0200
@@ -23,6 +23,7 @@
 #include "../librpc/gen_ndr/netlogon.h"
 #include "../librpc/gen_ndr/ndr_netlogon.h"
 #include "libcli/security/dom_sid.h"
+#include "lib/util/strv.h"
 
 /**
  * @file net_cache.c
@@ -77,6 +78,24 @@ static void print_cache_entry(const char
 
 	datastr = (char *)value.data;
 
+	if (strnequal(keystr, "NAME2SID/", strlen("NAME2SID/"))) {
+		const char *strv = (char *)value.data;
+		size_t strv_len = value.length;
+		const char *sid = strv_len_next(strv, strv_len, NULL);
+		const char *type = strv_len_next(strv, strv_len, sid);
+		datastr = talloc_asprintf(talloc_tos(), "%s (%s)", sid, type);
+	}
+
+	if (strnequal(keystr, "SID2NAME/", strlen("SID2NAME/"))) {
+		const char *strv = (char *)value.data;
+		size_t strv_len = value.length;
+		const char *domain = strv_len_next(strv, strv_len, NULL);
+		const char *name = strv_len_next(strv, strv_len, domain);
+		const char *type = strv_len_next(strv, strv_len, name);
+		datastr = talloc_asprintf(talloc_tos(), "%s\\%s (%s)",
+					  domain, name, type);
+	}
+
 	if ((value.length > 0) && (value.data[value.length-1] != '\0')) {
 		datastr_free = talloc_asprintf(
 			talloc_tos(), "<binary length %d>",
diff -Npur samba-4.7.7/source3/utils/net_dns.c samba-4.7.8/source3/utils/net_dns.c
--- samba-4.7.7/source3/utils/net_dns.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/utils/net_dns.c	2018-06-21 10:00:46.000000000 +0200
@@ -75,6 +75,7 @@ DNS_ERROR DoDNSUpdate(char *pszServerNam
 
 		if (!ERR_DNS_IS_OK(err)) {
 			DEBUG(3,("DoDNSUpdate: failed to probe DNS\n"));
+			goto error;
 		}
 
 		if ((dns_response_code(resp->flags) == DNS_NO_ERROR) &&
diff -Npur samba-4.7.7/source3/utils/smbcontrol.c samba-4.7.8/source3/utils/smbcontrol.c
--- samba-4.7.7/source3/utils/smbcontrol.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/utils/smbcontrol.c	2018-06-21 10:00:46.000000000 +0200
@@ -1267,6 +1267,19 @@ static bool do_winbind_dump_domain_list(
 	return num_replies;
 }
 
+static bool do_msg_disconnect_dc(struct tevent_context *ev_ctx,
+				 struct messaging_context *msg_ctx,
+				 const struct server_id pid,
+				 const int argc, const char **argv)
+{
+	if (argc != 1) {
+		fprintf(stderr, "Usage: smbcontrol <dest> disconnect-dc\n");
+		return False;
+	}
+
+	return send_message(msg_ctx, pid, MSG_WINBIND_DISCONNECT_DC, NULL, 0);
+}
+
 static void winbind_validate_cache_cb(struct messaging_context *msg,
 				      void *private_data,
 				      uint32_t msg_type,
@@ -1445,6 +1458,7 @@ static const struct {
 	{ "validate-cache" , do_winbind_validate_cache,
 	  "Validate winbind's credential cache" },
 	{ "dump-domain-list", do_winbind_dump_domain_list, "Dump winbind domain list"},
+	{ "disconnect-dc", do_msg_disconnect_dc },
 	{ "notify-cleanup", do_notify_cleanup },
 	{ "num-children", do_num_children,
 	  "Print number of smbd child processes" },
diff -Npur samba-4.7.7/source3/utils/wscript_build samba-4.7.8/source3/utils/wscript_build
--- samba-4.7.7/source3/utils/wscript_build	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/utils/wscript_build	2018-06-21 10:00:46.000000000 +0200
@@ -258,3 +258,12 @@ bld.SAMBA3_BINARY('mvxattr',
                  popt_samba3
                  ''',
                  enabled=bld.env.build_mvxattr)
+
+bld.SAMBA3_BINARY('destroy_netlogon_creds_cli',
+                  source='destroy_netlogon_creds_cli.c',
+                  deps = '''
+                      talloc
+                      popt_samba3
+                      NETLOGON_CREDS_CLI
+                  ''',
+                  install=False)
diff -Npur samba-4.7.7/source3/winbindd/wb_dsgetdcname.c samba-4.7.8/source3/winbindd/wb_dsgetdcname.c
--- samba-4.7.7/source3/winbindd/wb_dsgetdcname.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/wb_dsgetdcname.c	2018-06-21 10:00:46.000000000 +0200
@@ -37,7 +37,7 @@ struct tevent_req *wb_dsgetdcname_send(T
 {
 	struct tevent_req *req, *subreq;
 	struct wb_dsgetdcname_state *state;
-	struct winbindd_child *child;
+	struct dcerpc_binding_handle *child_binding_handle = NULL;
 	struct GUID guid;
 	struct GUID *guid_ptr = NULL;
 
@@ -72,10 +72,10 @@ struct tevent_req *wb_dsgetdcname_send(T
 		/*
 		 * We have to figure out the DC ourselves
 		 */
-		child = locator_child();
+		child_binding_handle = locator_child_handle();
 	} else {
 		struct winbindd_domain *domain = find_our_domain();
-		child = choose_domain_child(domain);
+		child_binding_handle = dom_child_handle(domain);
 	}
 
 	if (domain_guid != NULL) {
@@ -85,7 +85,7 @@ struct tevent_req *wb_dsgetdcname_send(T
 	}
 
 	subreq = dcerpc_wbint_DsGetDcName_send(
-		state, ev, child->binding_handle, domain_name, guid_ptr, site_name,
+		state, ev, child_binding_handle, domain_name, guid_ptr, site_name,
 		flags, &state->dcinfo);
 	if (tevent_req_nomem(subreq, req)) {
 		return tevent_req_post(req, ev);
@@ -153,7 +153,7 @@ NTSTATUS wb_dsgetdcname_gencache_set(con
 		return status;
 	}
 
-	ok = gencache_set_data_blob(key, &blob, time(NULL)+3600);
+	ok = gencache_set_data_blob(key, blob, time(NULL)+3600);
 
 	if (!ok) {
 		DBG_WARNING("gencache_set_data_blob for key %s failed\n", key);
diff -Npur samba-4.7.7/source3/winbindd/wb_lookupsids.c samba-4.7.8/source3/winbindd/wb_lookupsids.c
--- samba-4.7.7/source3/winbindd/wb_lookupsids.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/wb_lookupsids.c	2018-06-21 10:00:46.000000000 +0200
@@ -513,7 +513,7 @@ static void wb_lookupsids_single_done(st
 		req, struct wb_lookupsids_state);
 	const char *domain_name = NULL;
 	const char *name = NULL;
-	enum lsa_SidType type;
+	enum lsa_SidType type = SID_NAME_UNKNOWN;
 	uint32_t res_sid_index;
 	uint32_t src_rid;
 
@@ -545,7 +545,9 @@ static void wb_lookupsids_single_done(st
 		 */
 
 		sid_copy(&src_domain_sid, &state->sids[res_sid_index]);
-		sid_split_rid(&src_domain_sid, &src_rid);
+		if (type != SID_NAME_DOMAIN) {
+			sid_split_rid(&src_domain_sid, &src_rid);
+		}
 
 		src_domain.name.string = domain_name;
 		src_domain.sid = &src_domain_sid;
diff -Npur samba-4.7.7/source3/winbindd/wb_sids2xids.c samba-4.7.8/source3/winbindd/wb_sids2xids.c
--- samba-4.7.7/source3/winbindd/wb_sids2xids.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/wb_sids2xids.c	2018-06-21 10:00:46.000000000 +0200
@@ -167,7 +167,7 @@ static void wb_sids2xids_lookupsids_done
 		req, struct wb_sids2xids_state);
 	struct lsa_RefDomainList *domains = NULL;
 	struct lsa_TransNameArray *names = NULL;
-	struct winbindd_child *child;
+	struct dcerpc_binding_handle *child_binding_handle = NULL;
 	NTSTATUS status;
 	int i;
 
@@ -237,7 +237,7 @@ static void wb_sids2xids_lookupsids_done
 	TALLOC_FREE(names);
 	TALLOC_FREE(domains);
 
-	child = idmap_child();
+	child_binding_handle = idmap_child_handle();
 
 	state->dom_ids = wb_sids2xids_extract_for_domain_index(
 		state, &state->ids, state->dom_index);
@@ -252,7 +252,7 @@ static void wb_sids2xids_lookupsids_done
 	};
 
 	subreq = dcerpc_wbint_Sids2UnixIDs_send(
-		state, state->ev, child->binding_handle, &state->idmap_dom,
+		state, state->ev, child_binding_handle, &state->idmap_dom,
 		state->dom_ids);
 	if (tevent_req_nomem(subreq, req)) {
 		return;
diff -Npur samba-4.7.7/source3/winbindd/winbindd.c samba-4.7.8/source3/winbindd/winbindd.c
--- samba-4.7.7/source3/winbindd/winbindd.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/winbindd/winbindd.c	2018-06-21 10:00:46.000000000 +0200
@@ -1356,6 +1356,10 @@ static void winbindd_register_handlers(s
 			   MSG_DEBUG,
 			   winbind_msg_debug);
 
+	messaging_register(msg_ctx, NULL,
+			   MSG_WINBIND_DISCONNECT_DC,
+			   winbind_disconnect_dc_parent);
+
 	netsamlogon_cache_init(); /* Non-critical */
 
 	/* clear the cached list of trusted domains */
diff -Npur samba-4.7.7/source3/winbindd/winbindd.h samba-4.7.8/source3/winbindd/winbindd.h
--- samba-4.7.7/source3/winbindd/winbindd.h	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd.h	2018-06-21 10:00:46.000000000 +0200
@@ -185,6 +185,9 @@ struct winbindd_domain {
 
 	struct winbindd_child *children;
 
+	struct tevent_queue *queue;
+	struct dcerpc_binding_handle *binding_handle;
+
 	/* Callback we use to try put us back online. */
 
 	uint32_t check_online_timeout;
diff -Npur samba-4.7.7/source3/winbindd/winbindd_allocate_gid.c samba-4.7.8/source3/winbindd/winbindd_allocate_gid.c
--- samba-4.7.7/source3/winbindd/winbindd_allocate_gid.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_allocate_gid.c	2018-06-21 10:00:46.000000000 +0200
@@ -34,7 +34,7 @@ struct tevent_req *winbindd_allocate_gid
 {
 	struct tevent_req *req, *subreq;
 	struct winbindd_allocate_gid_state *state;
-	struct winbindd_child *child;
+	struct dcerpc_binding_handle *child_binding_handle = NULL;
 
 	req = tevent_req_create(mem_ctx, &state,
 				struct winbindd_allocate_gid_state);
@@ -44,9 +44,9 @@ struct tevent_req *winbindd_allocate_gid
 
 	DEBUG(3, ("allocate_gid\n"));
 
-	child = idmap_child();
+	child_binding_handle = idmap_child_handle();
 
-	subreq = dcerpc_wbint_AllocateGid_send(state, ev, child->binding_handle,
+	subreq = dcerpc_wbint_AllocateGid_send(state, ev, child_binding_handle,
 					       &state->gid);
 	if (tevent_req_nomem(subreq, req)) {
 		return tevent_req_post(req, ev);
diff -Npur samba-4.7.7/source3/winbindd/winbindd_allocate_uid.c samba-4.7.8/source3/winbindd/winbindd_allocate_uid.c
--- samba-4.7.7/source3/winbindd/winbindd_allocate_uid.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_allocate_uid.c	2018-06-21 10:00:46.000000000 +0200
@@ -34,7 +34,7 @@ struct tevent_req *winbindd_allocate_uid
 {
 	struct tevent_req *req, *subreq;
 	struct winbindd_allocate_uid_state *state;
-	struct winbindd_child *child;
+	struct dcerpc_binding_handle *child_binding_handle = NULL;
 
 	req = tevent_req_create(mem_ctx, &state,
 				struct winbindd_allocate_uid_state);
@@ -44,9 +44,9 @@ struct tevent_req *winbindd_allocate_uid
 
 	DEBUG(3, ("allocate_uid\n"));
 
-	child = idmap_child();
+	child_binding_handle = idmap_child_handle();
 
-	subreq = dcerpc_wbint_AllocateUid_send(state, ev, child->binding_handle,
+	subreq = dcerpc_wbint_AllocateUid_send(state, ev, child_binding_handle,
 					       &state->uid);
 	if (tevent_req_nomem(subreq, req)) {
 		return tevent_req_post(req, ev);
diff -Npur samba-4.7.7/source3/winbindd/winbindd_cache.c samba-4.7.8/source3/winbindd/winbindd_cache.c
--- samba-4.7.7/source3/winbindd/winbindd_cache.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_cache.c	2018-06-21 10:00:46.000000000 +0200
@@ -35,6 +35,7 @@
 #include "passdb/machine_sid.h"
 #include "util_tdb.h"
 #include "libsmb/samlogon_cache.h"
+#include "lib/namemap_cache.h"
 
 #undef DBGC_CLASS
 #define DBGC_CLASS DBGC_WINBIND
@@ -119,12 +120,11 @@ static char *wcache_path(void)
 	return state_path("winbindd_cache.tdb");
 }
 
-/* get the winbind_cache structure */
-static struct winbind_cache *get_cache(struct winbindd_domain *domain)
+static void winbindd_domain_init_backend(struct winbindd_domain *domain)
 {
-	struct winbind_cache *ret = wcache;
-
-	/* We have to know what type of domain we are dealing with first. */
+	if (domain->backend != NULL) {
+		return;
+	}
 
 	if (domain->internal) {
 		domain->backend = &builtin_passdb_methods;
@@ -189,6 +189,14 @@ static struct winbind_cache *get_cache(s
 		DBG_INFO("Setting MS-RPC methods for domain %s\n", domain->name);
 		domain->backend = &reconnect_methods;
 	}
+}
+
+/* get the winbind_cache structure */
+static struct winbind_cache *get_cache(struct winbindd_domain *domain)
+{
+	struct winbind_cache *ret = wcache;
+
+	winbindd_domain_init_backend(domain);
 
 	if (ret != NULL) {
 		return ret;
@@ -954,59 +962,40 @@ static void wcache_save_name_to_sid(stru
 				    const char *name, const struct dom_sid *sid,
 				    enum lsa_SidType type)
 {
-	struct cache_entry *centry;
-	fstring uname;
+	bool ok;
 
-	centry = centry_start(domain, status);
-	if (!centry)
-		return;
-
-	if ((domain_name == NULL) || (domain_name[0] == '\0')) {
-		struct winbindd_domain *mydomain =
-			find_domain_from_sid_noinit(sid);
-		if (mydomain != NULL) {
-			domain_name = mydomain->name;
-		}
+	ok = namemap_cache_set_name2sid(domain_name, name, sid, type,
+					time(NULL) + lp_winbind_cache_time());
+	if (!ok) {
+		DBG_DEBUG("namemap_cache_set_name2sid failed\n");
 	}
 
-	centry_put_uint32(centry, type);
-	centry_put_sid(centry, sid);
-	fstrcpy(uname, name);
-	(void)strupper_m(uname);
-	centry_end(centry, "NS/%s/%s", domain_name, uname);
-	DEBUG(10,("wcache_save_name_to_sid: %s\\%s -> %s (%s)\n", domain_name,
-		  uname, sid_string_dbg(sid), nt_errstr(status)));
-	centry_free(centry);
+	/*
+	 * Don't store the reverse mapping. The name came from user
+	 * input, and we might not have the correct capitalization,
+	 * which is important for nsswitch.
+	 */
 }
 
 static void wcache_save_sid_to_name(struct winbindd_domain *domain, NTSTATUS status, 
 				    const struct dom_sid *sid, const char *domain_name, const char *name, enum lsa_SidType type)
 {
-	struct cache_entry *centry;
-	fstring sid_string;
+	bool ok;
 
-	centry = centry_start(domain, status);
-	if (!centry)
-		return;
-
-	if ((domain_name == NULL) || (domain_name[0] == '\0')) {
-		struct winbindd_domain *mydomain =
-			find_domain_from_sid_noinit(sid);
-		if (mydomain != NULL) {
-			domain_name = mydomain->name;
-		}
+	ok = namemap_cache_set_sid2name(sid, domain_name, name, type,
+					time(NULL) + lp_winbind_cache_time());
+	if (!ok) {
+		DBG_DEBUG("namemap_cache_set_sid2name failed\n");
 	}
 
-	if (NT_STATUS_IS_OK(status)) {
-		centry_put_uint32(centry, type);
-		centry_put_string(centry, domain_name);
-		centry_put_string(centry, name);
+	if (type != SID_NAME_UNKNOWN) {
+		ok = namemap_cache_set_name2sid(
+			domain_name, name, sid, type,
+			time(NULL) + lp_winbind_cache_time());
+		if (!ok) {
+			DBG_DEBUG("namemap_cache_set_name2sid failed\n");
+		}
 	}
-
-	centry_end(centry, "SN/%s", sid_to_fstring(sid_string, sid));
-	DEBUG(10,("wcache_save_sid_to_name: %s -> %s\\%s (%s)\n", sid_string,
-		  domain_name, name, nt_errstr(status)));
-	centry_free(centry);
 }
 
 static void wcache_save_lockout_policy(struct winbindd_domain *domain,
@@ -1762,47 +1751,51 @@ skip_save:
 	return status;
 }
 
+struct wcache_name_to_sid_state {
+	struct dom_sid *sid;
+	enum lsa_SidType *type;
+	bool offline;
+	bool found;
+};
+
+static void wcache_name_to_sid_fn(const struct dom_sid *sid,
+				  enum lsa_SidType type, time_t timeout,
+				  void *private_data)
+{
+	struct wcache_name_to_sid_state *state = private_data;
+
+	*state->sid = *sid;
+	*state->type = type;
+	state->found = (state->offline || (timeout < time(NULL)));
+}
+
 NTSTATUS wcache_name_to_sid(struct winbindd_domain *domain,
-			    const char *domain_name,
-			    const char *name,
-			    struct dom_sid *sid,
-			    enum lsa_SidType *type)
+				   const char *domain_name,
+				   const char *name,
+				   struct dom_sid *sid,
+				   enum lsa_SidType *type)
 {
-	struct winbind_cache *cache = get_cache(domain);
-	struct cache_entry *centry;
-	NTSTATUS status;
-	char *uname;
+	struct wcache_name_to_sid_state state = {
+		.sid = sid, .type = type, .found = false,
+		.offline = is_domain_offline(domain),
+	};
+	bool ok;
 
-	if (cache->tdb == NULL) {
+	ok = namemap_cache_find_name(domain_name, name, wcache_name_to_sid_fn,
+				     &state);
+	if (!ok) {
+		DBG_DEBUG("namemap_cache_find_name failed\n");
 		return NT_STATUS_NOT_FOUND;
 	}
-
-	uname = talloc_strdup_upper(talloc_tos(), name);
-	if (uname == NULL) {
-		return NT_STATUS_NO_MEMORY;
-	}
-
-	if ((domain_name == NULL) || (domain_name[0] == '\0')) {
-		domain_name = domain->name;
-	}
-
-	centry = wcache_fetch(cache, domain, "NS/%s/%s", domain_name, uname);
-	TALLOC_FREE(uname);
-	if (centry == NULL) {
+	if (!state.found) {
+		DBG_DEBUG("cache entry not found\n");
 		return NT_STATUS_NOT_FOUND;
 	}
-
-	status = centry->status;
-	if (NT_STATUS_IS_OK(status)) {
-		*type = (enum lsa_SidType)centry_uint32(centry);
-		centry_sid(centry, sid);
+	if (*type == SID_NAME_UNKNOWN) {
+		return NT_STATUS_NONE_MAPPED;
 	}
 
-	DEBUG(10,("name_to_sid: [Cached] - cached name for domain %s status: "
-		  "%s\n", domain->name, nt_errstr(status) ));
-
-	centry_free(centry);
-	return status;
+	return NT_STATUS_OK;
 }
 
 /* convert a single name to a sid in a domain */
@@ -1840,6 +1833,7 @@ NTSTATUS wb_cache_name_to_sid(struct win
 	DEBUG(10,("name_to_sid: [Cached] - doing backend query for name for domain %s\n",
 		domain->name ));
 
+	winbindd_domain_init_backend(domain);
 	status = domain->backend->name_to_sid(domain, mem_ctx, domain_name,
 					      name, flags, sid, type);
 
@@ -1857,11 +1851,17 @@ NTSTATUS wb_cache_name_to_sid(struct win
 		}
 	}
 	/* and save it */
-	refresh_sequence_number(domain);
 
 	if (domain->online &&
 	    (NT_STATUS_IS_OK(status) || NT_STATUS_EQUAL(status, NT_STATUS_NONE_MAPPED))) {
-		wcache_save_name_to_sid(domain, status, domain_name, name, sid, *type);
+		enum lsa_SidType save_type = *type;
+
+		if (NT_STATUS_EQUAL(status, NT_STATUS_NONE_MAPPED)) {
+			save_type = SID_NAME_UNKNOWN;
+		}
+
+		wcache_save_name_to_sid(domain, status, domain_name, name, sid,
+					save_type);
 
 		/* Only save the reverse mapping if this was not a UPN */
 		if (!strchr(name, '@')) {
@@ -1869,13 +1869,41 @@ NTSTATUS wb_cache_name_to_sid(struct win
 				return NT_STATUS_INVALID_PARAMETER;
 			}
 			(void)strlower_m(discard_const_p(char, name));
-			wcache_save_sid_to_name(domain, status, sid, domain_name, name, *type);
+			wcache_save_sid_to_name(domain, status, sid,
+						domain_name, name, save_type);
 		}
 	}
 
 	return status;
 }
 
+struct wcache_sid_to_name_state {
+	TALLOC_CTX *mem_ctx;
+	char **domain_name;
+	char **name;
+	enum lsa_SidType *type;
+	bool offline;
+	bool found;
+};
+
+static void wcache_sid_to_name_fn(const char *domain, const char *name,
+				  enum lsa_SidType type, time_t timeout,
+				  void *private_data)
+{
+	struct wcache_sid_to_name_state *state = private_data;
+
+	*state->domain_name = talloc_strdup(state->mem_ctx, domain);
+	if (*state->domain_name == NULL) {
+		return;
+	}
+	*state->name = talloc_strdup(state->mem_ctx, name);
+	if (*state->name == NULL) {
+		return;
+	}
+	*state->type = type;
+	state->found = (state->offline || (timeout < time(NULL)));
+}
+
 static NTSTATUS wcache_sid_to_name(struct winbindd_domain *domain,
 				   const struct dom_sid *sid,
 				   TALLOC_CTX *mem_ctx,
@@ -1883,39 +1911,27 @@ static NTSTATUS wcache_sid_to_name(struc
 				   char **name,
 				   enum lsa_SidType *type)
 {
-	struct winbind_cache *cache = get_cache(domain);
-	struct cache_entry *centry;
-	char *sid_string;
-	NTSTATUS status;
+	struct wcache_sid_to_name_state state = {
+		.mem_ctx = mem_ctx, .found = false,
+		.domain_name = domain_name, .name = name, .type = type,
+		.offline = is_domain_offline(domain)
+	};
+	bool ok;
 
-	if (cache->tdb == NULL) {
+	ok = namemap_cache_find_sid(sid, wcache_sid_to_name_fn, &state);
+	if (!ok) {
+		DBG_DEBUG("namemap_cache_find_name failed\n");
 		return NT_STATUS_NOT_FOUND;
 	}
-
-	sid_string = sid_string_tos(sid);
-	if (sid_string == NULL) {
-		return NT_STATUS_NO_MEMORY;
-	}
-
-	centry = wcache_fetch(cache, domain, "SN/%s", sid_string);
-	TALLOC_FREE(sid_string);
-	if (centry == NULL) {
+	if (!state.found) {
+		DBG_DEBUG("cache entry not found\n");
 		return NT_STATUS_NOT_FOUND;
 	}
-
-	if (NT_STATUS_IS_OK(centry->status)) {
-		*type = (enum lsa_SidType)centry_uint32(centry);
-		*domain_name = centry_string(centry, mem_ctx);
-		*name = centry_string(centry, mem_ctx);
+	if (*type == SID_NAME_UNKNOWN) {
+		return NT_STATUS_NONE_MAPPED;
 	}
 
-	status = centry->status;
-	centry_free(centry);
-
-	DEBUG(10,("sid_to_name: [Cached] - cached name for domain %s status: "
-		  "%s\n", domain->name, nt_errstr(status) ));
-
-	return status;
+	return NT_STATUS_OK;
 }
 
 /* convert a sid to a user or group name. The sid is guaranteed to be in the domain
@@ -1954,6 +1970,8 @@ NTSTATUS wb_cache_sid_to_name(struct win
 	DEBUG(10,("sid_to_name: [Cached] - doing backend query for name for domain %s\n",
 		domain->name ));
 
+	winbindd_domain_init_backend(domain);
+
 	status = domain->backend->sid_to_name(domain, mem_ctx, sid, domain_name, name, type);
 
 	if (NT_STATUS_EQUAL(status, NT_STATUS_IO_TIMEOUT) ||
@@ -1971,7 +1989,6 @@ NTSTATUS wb_cache_sid_to_name(struct win
 		}
 	}
 	/* and save it */
-	refresh_sequence_number(domain);
 	if (!NT_STATUS_IS_OK(status)) {
 		return status;
 	}
@@ -2024,49 +2041,45 @@ NTSTATUS wb_cache_rids_to_names(struct w
 
 	for (i=0; i<num_rids; i++) {
 		struct dom_sid sid;
-		struct cache_entry *centry;
-		fstring tmp;
+		NTSTATUS status;
+		enum lsa_SidType type;
+		char *dom, *name;
 
 		if (!sid_compose(&sid, domain_sid, rids[i])) {
 			result = NT_STATUS_INTERNAL_ERROR;
 			goto error;
 		}
 
-		centry = wcache_fetch(cache, domain, "SN/%s",
-				      sid_to_fstring(tmp, &sid));
-		if (!centry) {
-			goto do_query;
-		}
+		status = wcache_sid_to_name(domain, &sid, *names, &dom,
+					    &name, &type);
 
 		(*types)[i] = SID_NAME_UNKNOWN;
 		(*names)[i] = talloc_strdup(*names, "");
 
-		if (NT_STATUS_IS_OK(centry->status)) {
-			char *dom;
+		if (NT_STATUS_EQUAL(status, NT_STATUS_NOT_FOUND)) {
+			/* not cached */
+			goto do_query;
+		}
+
+		if (NT_STATUS_IS_OK(status)) {
 			have_mapped = true;
-			(*types)[i] = (enum lsa_SidType)centry_uint32(centry);
+			(*types)[i] = type;
 
-			dom = centry_string(centry, mem_ctx);
 			if (*domain_name == NULL) {
 				*domain_name = dom;
 			} else {
-				talloc_free(dom);
+				TALLOC_FREE(dom);
 			}
 
-			(*names)[i] = centry_string(centry, *names);
+			(*names)[i] = name;
 
-		} else if (NT_STATUS_EQUAL(centry->status, NT_STATUS_NONE_MAPPED)
-			   || NT_STATUS_EQUAL(centry->status, STATUS_SOME_UNMAPPED)) {
+		} else if (NT_STATUS_EQUAL(status, NT_STATUS_NONE_MAPPED)) {
 			have_unmapped = true;
-
 		} else {
 			/* something's definitely wrong */
-			result = centry->status;
-			centry_free(centry);
+			result = status;
 			goto error;
 		}
-
-		centry_free(centry);
 	}
 
 	if (!have_mapped) {
@@ -2112,50 +2125,43 @@ NTSTATUS wb_cache_rids_to_names(struct w
 
 			for (i=0; i<num_rids; i++) {
 				struct dom_sid sid;
-				struct cache_entry *centry;
-				fstring tmp;
+				NTSTATUS status;
+				enum lsa_SidType type;
+				char *dom, *name;
 
 				if (!sid_compose(&sid, domain_sid, rids[i])) {
 					result = NT_STATUS_INTERNAL_ERROR;
 					goto error;
 				}
 
-				centry = wcache_fetch(cache, domain, "SN/%s",
-						      sid_to_fstring(tmp, &sid));
-				if (!centry) {
-					(*types)[i] = SID_NAME_UNKNOWN;
-					(*names)[i] = talloc_strdup(*names, "");
-					continue;
-				}
+				status = wcache_sid_to_name(domain, &sid,
+							    *names, &dom,
+							    &name, &type);
 
 				(*types)[i] = SID_NAME_UNKNOWN;
 				(*names)[i] = talloc_strdup(*names, "");
 
-				if (NT_STATUS_IS_OK(centry->status)) {
-					char *dom;
+				if (NT_STATUS_IS_OK(status)) {
 					have_mapped = true;
-					(*types)[i] = (enum lsa_SidType)centry_uint32(centry);
+					(*types)[i] = type;
 
-					dom = centry_string(centry, mem_ctx);
 					if (*domain_name == NULL) {
 						*domain_name = dom;
 					} else {
-						talloc_free(dom);
+						TALLOC_FREE(dom);
 					}
 
-					(*names)[i] = centry_string(centry, *names);
+					(*names)[i] = name;
 
-				} else if (NT_STATUS_EQUAL(centry->status, NT_STATUS_NONE_MAPPED)) {
+				} else if (NT_STATUS_EQUAL(
+						   status,
+						   NT_STATUS_NONE_MAPPED)) {
 					have_unmapped = true;
-
 				} else {
 					/* something's definitely wrong */
-					result = centry->status;
-					centry_free(centry);
+					result = status;
 					goto error;
 				}
-
-				centry_free(centry);
 			}
 
 			if (!have_mapped) {
@@ -3613,52 +3619,6 @@ static int validate_seqnum(TALLOC_CTX *m
 	return 0;
 }
 
-static int validate_ns(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf,
-		       struct tdb_validation_status *state)
-{
-	struct cache_entry *centry = create_centry_validate(keystr, dbuf, state);
-	if (!centry) {
-		return 1;
-	}
-
-	(void)centry_uint32(centry);
-	if (NT_STATUS_IS_OK(centry->status)) {
-		struct dom_sid sid;
-		(void)centry_sid(centry, &sid);
-	}
-
-	centry_free(centry);
-
-	if (!(state->success)) {
-		return 1;
-	}
-	DEBUG(10,("validate_ns: %s ok\n", keystr));
-	return 0;
-}
-
-static int validate_sn(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf,
-		       struct tdb_validation_status *state)
-{
-	struct cache_entry *centry = create_centry_validate(keystr, dbuf, state);
-	if (!centry) {
-		return 1;
-	}
-
-	if (NT_STATUS_IS_OK(centry->status)) {
-		(void)centry_uint32(centry);
-		(void)centry_string(centry, mem_ctx);
-		(void)centry_string(centry, mem_ctx);
-	}
-
-	centry_free(centry);
-
-	if (!(state->success)) {
-		return 1;
-	}
-	DEBUG(10,("validate_sn: %s ok\n", keystr));
-	return 0;
-}
-
 static int validate_u(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf,
 		      struct tdb_validation_status *state)
 {
@@ -4033,8 +3993,6 @@ struct key_val_struct {
 	int (*validate_data_fn)(TALLOC_CTX *mem_ctx, const char *keystr, TDB_DATA dbuf, struct tdb_validation_status* state);
 } key_val[] = {
 	{"SEQNUM/", validate_seqnum},
-	{"NS/", validate_ns},
-	{"SN/", validate_sn},
 	{"U/", validate_u},
 	{"LOC_POL/", validate_loc_pol},
 	{"PWD_POL/", validate_pwd_pol},
diff -Npur samba-4.7.7/source3/winbindd/winbindd_cm.c samba-4.7.8/source3/winbindd/winbindd_cm.c
--- samba-4.7.7/source3/winbindd/winbindd_cm.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/winbindd/winbindd_cm.c	2018-06-21 10:00:46.000000000 +0200
@@ -2036,7 +2036,6 @@ void invalidate_cm_connection(struct win
 	}
 
 	conn->auth_level = DCERPC_AUTH_LEVEL_PRIVACY;
-	conn->netlogon_force_reauth = false;
 	conn->netlogon_flags = 0;
 	TALLOC_FREE(conn->netlogon_creds);
 
@@ -3347,6 +3346,7 @@ static NTSTATUS cm_connect_netlogon_tran
 		creds,
 		conn->netlogon_creds,
 		&conn->netlogon_pipe);
+	conn->netlogon_force_reauth = false;
 	if (!NT_STATUS_IS_OK(result)) {
 		DEBUG(3, ("Could not open schannel'ed NETLOGON pipe. Error "
 			  "was %s\n", nt_errstr(result)));
@@ -3467,3 +3467,19 @@ void winbind_msg_ip_dropped(struct messa
 	}
 	TALLOC_FREE(freeit);
 }
+
+void winbind_msg_disconnect_dc(struct messaging_context *msg_ctx,
+			       void *private_data,
+			       uint32_t msg_type,
+			       struct server_id server_id,
+			       DATA_BLOB *data)
+{
+	struct winbindd_domain *domain;
+
+	for (domain = domain_list(); domain; domain = domain->next) {
+		if (domain->internal) {
+			continue;
+		}
+		invalidate_cm_connection(domain);
+	}
+}
diff -Npur samba-4.7.7/source3/winbindd/winbindd_dsgetdcname.c samba-4.7.8/source3/winbindd/winbindd_dsgetdcname.c
--- samba-4.7.7/source3/winbindd/winbindd_dsgetdcname.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_dsgetdcname.c	2018-06-21 10:00:46.000000000 +0200
@@ -35,7 +35,7 @@ struct tevent_req *winbindd_dsgetdcname_
 					     struct winbindd_request *request)
 {
 	struct tevent_req *req, *subreq;
-	struct winbindd_child *child;
+	struct dcerpc_binding_handle *child_binding_handle = NULL;
 	struct winbindd_dsgetdcname_state *state;
 	struct GUID *guid_ptr = NULL;
 	uint32_t ds_flags = 0;
@@ -65,10 +65,10 @@ struct tevent_req *winbindd_dsgetdcname_
 		guid_ptr = &state->guid;
 	}
 
-	child = locator_child();
+	child_binding_handle = locator_child_handle();
 
 	subreq = dcerpc_wbint_DsGetDcName_send(
-		state, ev, child->binding_handle,
+		state, ev, child_binding_handle,
 		request->data.dsgetdcname.domain_name, guid_ptr,
 		request->data.dsgetdcname.site_name,
 		ds_flags, &state->dc_info);
diff -Npur samba-4.7.7/source3/winbindd/winbindd_dual.c samba-4.7.8/source3/winbindd/winbindd_dual.c
--- samba-4.7.7/source3/winbindd/winbindd_dual.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/winbindd/winbindd_dual.c	2018-06-21 10:00:46.000000000 +0200
@@ -119,6 +119,7 @@ static NTSTATUS child_write_response(int
 
 struct wb_child_request_state {
 	struct tevent_context *ev;
+	struct tevent_req *queue_subreq;
 	struct tevent_req *subreq;
 	struct winbindd_child *child;
 	struct winbindd_request *request;
@@ -127,9 +128,9 @@ struct wb_child_request_state {
 
 static bool fork_domain_child(struct winbindd_child *child);
 
-static void wb_child_request_trigger(struct tevent_req *req,
-					    void *private_data);
+static void wb_child_request_waited(struct tevent_req *subreq);
 static void wb_child_request_done(struct tevent_req *subreq);
+static void wb_child_request_orphaned(struct tevent_req *subreq);
 
 static void wb_child_request_cleanup(struct tevent_req *req,
 				     enum tevent_req_state req_state);
@@ -141,6 +142,7 @@ struct tevent_req *wb_child_request_send
 {
 	struct tevent_req *req;
 	struct wb_child_request_state *state;
+	struct tevent_req *subreq;
 
 	req = tevent_req_create(mem_ctx, &state,
 				struct wb_child_request_state);
@@ -152,23 +154,36 @@ struct tevent_req *wb_child_request_send
 	state->child = child;
 	state->request = request;
 
-	if (!tevent_queue_add(child->queue, ev, req,
-			      wb_child_request_trigger, NULL)) {
-		tevent_req_oom(req);
+	subreq = tevent_queue_wait_send(state, ev, child->queue);
+	if (tevent_req_nomem(subreq, req)) {
 		return tevent_req_post(req, ev);
 	}
+	tevent_req_set_callback(subreq, wb_child_request_waited, req);
+	state->queue_subreq = subreq;
 
 	tevent_req_set_cleanup_fn(req, wb_child_request_cleanup);
 
 	return req;
 }
 
-static void wb_child_request_trigger(struct tevent_req *req,
-				     void *private_data)
+static void wb_child_request_waited(struct tevent_req *subreq)
 {
+	struct tevent_req *req = tevent_req_callback_data(
+		subreq, struct tevent_req);
 	struct wb_child_request_state *state = tevent_req_data(
 		req, struct wb_child_request_state);
-	struct tevent_req *subreq;
+	bool ok;
+
+	ok = tevent_queue_wait_recv(subreq);
+	if (!ok) {
+		tevent_req_oom(req);
+		return;
+	}
+	/*
+	 * We need to keep state->queue_subreq
+	 * in order to block the queue.
+	 */
+	subreq = NULL;
 
 	if ((state->child->sock == -1) && (!fork_domain_child(state->child))) {
 		tevent_req_error(req, errno);
@@ -206,6 +221,25 @@ static void wb_child_request_done(struct
 	tevent_req_done(req);
 }
 
+static void wb_child_request_orphaned(struct tevent_req *subreq)
+{
+	struct winbindd_child *child =
+		(struct winbindd_child *)tevent_req_callback_data_void(subreq);
+
+	DBG_WARNING("cleanup orphaned subreq[%p]\n", subreq);
+	TALLOC_FREE(subreq);
+
+	if (child->domain != NULL) {
+		/*
+		 * If the child is attached to a domain,
+		 * we need to make sure the domain queue
+		 * can move forward, after the orphaned
+		 * request is done.
+		 */
+		tevent_queue_start(child->domain->queue);
+	}
+}
+
 int wb_child_request_recv(struct tevent_req *req, TALLOC_CTX *mem_ctx,
 			  struct winbindd_response **presponse, int *err)
 {
@@ -230,7 +264,40 @@ static void wb_child_request_cleanup(str
 		return;
 	}
 
+	if (req_state == TEVENT_REQ_RECEIVED) {
+		struct tevent_req *subreq = NULL;
+
+		/*
+		 * Our caller gave up, but we need to keep
+		 * the low level request (wb_simple_trans)
+		 * in order to maintain the parent child protocol.
+		 *
+		 * We also need to keep the child queue blocked
+		 * until we got the response from the child.
+		 */
+
+		subreq = talloc_move(state->child->queue, &state->subreq);
+		talloc_move(subreq, &state->queue_subreq);
+		tevent_req_set_callback(subreq,
+					wb_child_request_orphaned,
+					state->child);
+
+		DBG_WARNING("keep orphaned subreq[%p]\n", subreq);
+		return;
+	}
+
 	TALLOC_FREE(state->subreq);
+	TALLOC_FREE(state->queue_subreq);
+
+	if (state->child->domain != NULL) {
+		/*
+		 * If the child is attached to a domain,
+		 * we need to make sure the domain queue
+		 * can move forward, after the request
+		 * is done.
+		 */
+		tevent_queue_start(state->child->domain->queue);
+	}
 
 	if (req_state == TEVENT_REQ_DONE) {
 		/* transmitted request and got response */
@@ -248,52 +315,69 @@ static void wb_child_request_cleanup(str
 	DLIST_REMOVE(winbindd_children, state->child);
 }
 
-static bool winbindd_child_busy(struct winbindd_child *child)
-{
-	return tevent_queue_length(child->queue) > 0;
-}
-
-static struct winbindd_child *find_idle_child(struct winbindd_domain *domain)
+static struct winbindd_child *choose_domain_child(struct winbindd_domain *domain)
 {
+	struct winbindd_child *shortest = &domain->children[0];
+	struct winbindd_child *current;
 	int i;
 
 	for (i=0; i<lp_winbind_max_domain_connections(); i++) {
-		if (!winbindd_child_busy(&domain->children[i])) {
-			return &domain->children[i];
-		}
-	}
+		size_t shortest_len, current_len;
 
-	return NULL;
-}
+		current = &domain->children[i];
+		current_len = tevent_queue_length(current->queue);
 
-struct winbindd_child *choose_domain_child(struct winbindd_domain *domain)
-{
-	struct winbindd_child *result;
+		if (current_len == 0) {
+			/* idle child */
+			return current;
+		}
+
+		shortest_len = tevent_queue_length(shortest->queue);
 
-	result = find_idle_child(domain);
-	if (result != NULL) {
-		return result;
+		if (current_len < shortest_len) {
+			shortest = current;
+		}
 	}
-	return &domain->children[rand() % lp_winbind_max_domain_connections()];
+
+	return shortest;
 }
 
 struct dcerpc_binding_handle *dom_child_handle(struct winbindd_domain *domain)
 {
-	struct winbindd_child *child;
-
-	child = choose_domain_child(domain);
-	return child->binding_handle;
+	return domain->binding_handle;
 }
 
 struct wb_domain_request_state {
 	struct tevent_context *ev;
+	struct tevent_queue_entry *queue_entry;
 	struct winbindd_domain *domain;
 	struct winbindd_child *child;
 	struct winbindd_request *request;
 	struct winbindd_request *init_req;
 	struct winbindd_response *response;
+	struct tevent_req *pending_subreq;
 };
 
+static void wb_domain_request_cleanup(struct tevent_req *req,
+				      enum tevent_req_state req_state)
+{
+	struct wb_domain_request_state *state = tevent_req_data(
+		req, struct wb_domain_request_state);
+
+	/*
+	 * If we're completely done or got a failure.
+	 * we should remove ourself from the domain queue,
+	 * after removing the child subreq from the child queue
+	 * and give the next one in the queue the chance
+	 * to check for an idle child.
+	 */
+	TALLOC_FREE(state->pending_subreq);
+	TALLOC_FREE(state->queue_entry);
+	tevent_queue_start(state->domain->queue);
+}
+
+static void wb_domain_request_trigger(struct tevent_req *req,
+				      void *private_data);
 static void wb_domain_request_gotdc(struct tevent_req *subreq);
 static void wb_domain_request_initialized(struct tevent_req *subreq);
 static void wb_domain_request_done(struct tevent_req *subreq);
@@ -303,7 +387,7 @@ struct tevent_req *wb_domain_request_sen
 					  struct winbindd_domain *domain,
 					  struct winbindd_request *request)
 {
-	struct tevent_req *req, *subreq;
+	struct tevent_req *req;
 	struct wb_domain_request_state *state;
 
 	req = tevent_req_create(mem_ctx, &state,
@@ -312,25 +396,70 @@ struct tevent_req *wb_domain_request_sen
 		return NULL;
 	}
 
+	state->domain = domain;
+	state->ev = ev;
+	state->request = request;
+
+	tevent_req_set_cleanup_fn(req, wb_domain_request_cleanup);
+
+	state->queue_entry = tevent_queue_add_entry(
+			domain->queue, state->ev, req,
+			wb_domain_request_trigger, NULL);
+	if (tevent_req_nomem(state->queue_entry, req)) {
+		return tevent_req_post(req, ev);
+	}
+
+	return req;
+}
+
+static void wb_domain_request_trigger(struct tevent_req *req,
+				      void *private_data)
+{
+	struct wb_domain_request_state *state = tevent_req_data(
+		req, struct wb_domain_request_state);
+	struct winbindd_domain *domain = state->domain;
+	struct tevent_req *subreq = NULL;
+	size_t shortest_queue_length;
+
 	state->child = choose_domain_child(domain);
+	shortest_queue_length = tevent_queue_length(state->child->queue);
+	if (shortest_queue_length > 0) {
+		/*
+		 * All children are busy, we need to stop
+		 * the queue and untrigger our own queue
+		 * entry. Once a pending request
+		 * is done it calls tevent_queue_start
+		 * and we get retriggered.
+		 */
+		state->child = NULL;
+		tevent_queue_stop(state->domain->queue);
+		tevent_queue_entry_untrigger(state->queue_entry);
+		return;
+	}
 
 	if (domain->initialized) {
-		subreq = wb_child_request_send(state, ev, state->child,
-					       request);
+		subreq = wb_child_request_send(state, state->ev, state->child,
+					       state->request);
 		if (tevent_req_nomem(subreq, req)) {
-			return tevent_req_post(req, ev);
+			return;
 		}
 		tevent_req_set_callback(subreq, wb_domain_request_done, req);
-		return req;
-	}
+		state->pending_subreq = subreq;
 
-	state->domain = domain;
-	state->ev = ev;
-	state->request = request;
+		/*
+		 * Once the domain is initialized and
+		 * once we placed our real request into the child queue,
+		 * we can remove ourself from the domain queue
+		 * and give the next one in the queue the chance
+		 * to check for an idle child.
+		 */
+		TALLOC_FREE(state->queue_entry);
+		return;
+	}
 
 	state->init_req = talloc_zero(state, struct winbindd_request);
 	if (tevent_req_nomem(state->init_req, req)) {
-		return tevent_req_post(req, ev);
+		return;
 	}
 
 	if (IS_DC || domain->primary || domain->internal) {
@@ -340,33 +469,36 @@ struct tevent_req *wb_domain_request_sen
 		state->init_req->data.init_conn.is_primary = domain->primary;
 		fstrcpy(state->init_req->data.init_conn.dcname, "");
 
-		subreq = wb_child_request_send(state, ev, state->child,
+		subreq = wb_child_request_send(state, state->ev, state->child,
 					       state->init_req);
 		if (tevent_req_nomem(subreq, req)) {
-			return tevent_req_post(req, ev);
+			return;
 		}
 		tevent_req_set_callback(subreq, wb_domain_request_initialized,
 					req);
-		return req;
+		state->pending_subreq = subreq;
+		return;
 	}
 
 	/*
-	 * Ask our DC for a DC name
+	 * This is *not* the primary domain,
+	 * let's ask our DC about a DC name.
+	 *
+	 * We prefer getting a dns name in dc_unc,
+	 * which is indicated by DS_RETURN_DNS_NAME.
+	 * For NT4 domains we still get the netbios name.
 	 */
-	domain = find_our_domain();
-
-	/* This is *not* the primary domain, let's ask our DC about a DC
-	 * name */
-
-	state->init_req->cmd = WINBINDD_GETDCNAME;
-	fstrcpy(state->init_req->domain_name, domain->name);
-
-	subreq = wb_child_request_send(state, ev, state->child, request);
+	subreq = wb_dsgetdcname_send(state, state->ev,
+				     state->domain->name,
+				     NULL, /* domain_guid */
+				     NULL, /* site_name */
+				     DS_RETURN_DNS_NAME); /* flags */
 	if (tevent_req_nomem(subreq, req)) {
-		return tevent_req_post(req, ev);
+		return;
 	}
 	tevent_req_set_callback(subreq, wb_domain_request_gotdc, req);
-	return req;
+	state->pending_subreq = subreq;
+	return;
 }
 
 static void wb_domain_request_gotdc(struct tevent_req *subreq)
@@ -375,22 +507,28 @@ static void wb_domain_request_gotdc(stru
 		subreq, struct tevent_req);
 	struct wb_domain_request_state *state = tevent_req_data(
 		req, struct wb_domain_request_state);
-	struct winbindd_response *response;
-	int ret, err;
+	struct netr_DsRGetDCNameInfo *dcinfo = NULL;
+	NTSTATUS status;
+	const char *dcname = NULL;
 
-	ret = wb_child_request_recv(subreq, talloc_tos(), &response, &err);
+	state->pending_subreq = NULL;
+
+	status = wb_dsgetdcname_recv(subreq, state, &dcinfo);
 	TALLOC_FREE(subreq);
-	if (ret == -1) {
-		tevent_req_error(req, err);
+	if (tevent_req_nterror(req, status)) {
 		return;
 	}
+	dcname = dcinfo->dc_unc;
+	while (dcname != NULL && *dcname == '\\') {
+		dcname++;
+	}
 	state->init_req->cmd = WINBINDD_INIT_CONNECTION;
 	fstrcpy(state->init_req->domain_name, state->domain->name);
 	state->init_req->data.init_conn.is_primary = False;
 	fstrcpy(state->init_req->data.init_conn.dcname,
-		response->data.dc_name);
+		dcname);
 
-	TALLOC_FREE(response);
+	TALLOC_FREE(dcinfo);
 
 	subreq = wb_child_request_send(state, state->ev, state->child,
 				       state->init_req);
@@ -398,6 +536,7 @@ static void wb_domain_request_gotdc(stru
 		return;
 	}
 	tevent_req_set_callback(subreq, wb_domain_request_initialized, req);
+	state->pending_subreq = subreq;
 }
 
 static void wb_domain_request_initialized(struct tevent_req *subreq)
@@ -409,6 +548,8 @@ static void wb_domain_request_initialize
 	struct winbindd_response *response;
 	int ret, err;
 
+	state->pending_subreq = NULL;
+
 	ret = wb_child_request_recv(subreq, talloc_tos(), &response, &err);
 	TALLOC_FREE(subreq);
 	if (ret == -1) {
@@ -456,6 +597,16 @@ static void wb_domain_request_initialize
 		return;
 	}
 	tevent_req_set_callback(subreq, wb_domain_request_done, req);
+	state->pending_subreq = subreq;
+
+	/*
+	 * Once the domain is initialized and
+	 * once we placed our real request into the child queue,
+	 * we can remove ourself from the domain queue
+	 * and give the next one in the queue the chance
+	 * to check for an idle child.
+	 */
+	TALLOC_FREE(state->queue_entry);
 }
 
 static void wb_domain_request_done(struct tevent_req *subreq)
@@ -466,6 +617,8 @@ static void wb_domain_request_done(struc
 		req, struct wb_domain_request_state);
 	int ret, err;
 
+	state->pending_subreq = NULL;
+
 	ret = wb_child_request_recv(subreq, talloc_tos(), &state->response,
 				    &err);
 	TALLOC_FREE(subreq);
@@ -561,8 +714,10 @@ void setup_child(struct winbindd_domain
 	child->table = table;
 	child->queue = tevent_queue_create(NULL, "winbind_child");
 	SMB_ASSERT(child->queue != NULL);
-	child->binding_handle = wbint_binding_handle(NULL, domain, child);
-	SMB_ASSERT(child->binding_handle != NULL);
+	if (domain == NULL) {
+		child->binding_handle = wbint_binding_handle(NULL, NULL, child);
+		SMB_ASSERT(child->binding_handle != NULL);
+	}
 }
 
 void winbind_child_died(pid_t pid)
@@ -630,6 +785,23 @@ void winbind_msg_debug(struct messaging_
 			   strlen((char *) data->data) + 1);
 	}
 }
+void winbind_disconnect_dc_parent(struct messaging_context *msg_ctx,
+				  void *private_data,
+				  uint32_t msg_type,
+				  struct server_id server_id,
+				  DATA_BLOB *data)
+{
+	struct winbindd_child *child = NULL;
+
+	DBG_DEBUG("Got disconnect_dc message\n");
+
+	for (child = winbindd_children; child != NULL; child = child->next) {
+		messaging_send_buf(msg_ctx,
+				   pid_to_procid(child->pid),
+				   MSG_WINBIND_DISCONNECT_DC,
+				   NULL, 0);
+	}
+}
 
 /* Set our domains as offline and forward the offline message to our children. */
 
@@ -1503,7 +1675,9 @@ static bool fork_domain_child(struct win
 	messaging_register(server_messaging_context(), NULL,
 			   MSG_WINBIND_IP_DROPPED,
 			   winbind_msg_ip_dropped);
-
+	messaging_register(server_messaging_context(), NULL,
+			   MSG_WINBIND_DISCONNECT_DC,
+			   winbind_msg_disconnect_dc);
 
 	primary_domain = find_our_domain();
 
diff -Npur samba-4.7.7/source3/winbindd/winbindd_dual_ndr.c samba-4.7.8/source3/winbindd/winbindd_dual_ndr.c
--- samba-4.7.7/source3/winbindd/winbindd_dual_ndr.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_dual_ndr.c	2018-06-21 10:00:46.000000000 +0200
@@ -42,7 +42,7 @@ static bool wbint_bh_is_connected(struct
 	struct wbint_bh_state *hs = dcerpc_binding_handle_data(h,
 				     struct wbint_bh_state);
 
-	if (!hs->child) {
+	if ((hs->domain == NULL) && (hs->child == NULL)) {
 		return false;
 	}
 
@@ -65,7 +65,8 @@ struct wbint_bh_raw_call_state {
 	DATA_BLOB out_data;
 };
 
-static void wbint_bh_raw_call_done(struct tevent_req *subreq);
+static void wbint_bh_raw_call_child_done(struct tevent_req *subreq);
+static void wbint_bh_raw_call_domain_done(struct tevent_req *subreq);
 
 static struct tevent_req *wbint_bh_raw_call_send(TALLOC_CTX *mem_ctx,
 						  struct tevent_context *ev,
@@ -112,17 +113,28 @@ static struct tevent_req *wbint_bh_raw_c
 	state->request.extra_data.data = (char *)state->in_data.data;
 	state->request.extra_len = state->in_data.length;
 
-	subreq = wb_child_request_send(state, ev, hs->child,
-				       &state->request);
+	if (hs->child != NULL) {
+		subreq = wb_child_request_send(state, ev, hs->child,
+					       &state->request);
+		if (tevent_req_nomem(subreq, req)) {
+			return tevent_req_post(req, ev);
+		}
+		tevent_req_set_callback(
+			subreq, wbint_bh_raw_call_child_done, req);
+		return req;
+	}
+
+	subreq = wb_domain_request_send(state, ev, hs->domain,
+					&state->request);
 	if (tevent_req_nomem(subreq, req)) {
 		return tevent_req_post(req, ev);
 	}
-	tevent_req_set_callback(subreq, wbint_bh_raw_call_done, req);
+	tevent_req_set_callback(subreq, wbint_bh_raw_call_domain_done, req);
 
 	return req;
 }
 
-static void wbint_bh_raw_call_done(struct tevent_req *subreq)
+static void wbint_bh_raw_call_child_done(struct tevent_req *subreq)
 {
 	struct tevent_req *req =
 		tevent_req_callback_data(subreq,
@@ -156,6 +168,40 @@ static void wbint_bh_raw_call_done(struc
 	tevent_req_done(req);
 }
 
+static void wbint_bh_raw_call_domain_done(struct tevent_req *subreq)
+{
+	struct tevent_req *req =
+		tevent_req_callback_data(subreq,
+		struct tevent_req);
+	struct wbint_bh_raw_call_state *state =
+		tevent_req_data(req,
+		struct wbint_bh_raw_call_state);
+	int ret, err;
+
+	ret = wb_domain_request_recv(subreq, state, &state->response, &err);
+	TALLOC_FREE(subreq);
+	if (ret == -1) {
+		NTSTATUS status = map_nt_error_from_unix(err);
+		tevent_req_nterror(req, status);
+		return;
+	}
+
+	state->out_data = data_blob_talloc(state,
+		state->response->extra_data.data,
+		state->response->length - sizeof(struct winbindd_response));
+	if (state->response->extra_data.data && !state->out_data.data) {
+		tevent_req_oom(req);
+		return;
+	}
+
+	if (state->domain != NULL) {
+		wcache_store_ndr(state->domain, state->opnum,
+				 &state->in_data, &state->out_data);
+	}
+
+	tevent_req_done(req);
+}
+
 static NTSTATUS wbint_bh_raw_call_recv(struct tevent_req *req,
 					TALLOC_CTX *mem_ctx,
 					uint8_t **out_data,
@@ -207,9 +253,8 @@ static struct tevent_req *wbint_bh_disco
 
 	/*
 	 * TODO: do a real async disconnect ...
-	 *
-	 * For now the caller needs to free rpc_cli
 	 */
+	hs->domain = NULL;
 	hs->child = NULL;
 
 	tevent_req_done(req);
diff -Npur samba-4.7.7/source3/winbindd/winbindd_dual_srv.c samba-4.7.8/source3/winbindd/winbindd_dual_srv.c
--- samba-4.7.7/source3/winbindd/winbindd_dual_srv.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/winbindd/winbindd_dual_srv.c	2018-06-21 10:00:46.000000000 +0200
@@ -39,14 +39,31 @@ void _wbint_Ping(struct pipes_struct *p,
 	*r->out.out_data = r->in.in_data;
 }
 
-static bool reset_cm_connection_on_error(struct winbindd_domain *domain,
-					NTSTATUS status)
-{
-	if (NT_STATUS_EQUAL(status, NT_STATUS_IO_TIMEOUT)) {
+bool reset_cm_connection_on_error(struct winbindd_domain *domain,
+				  struct dcerpc_binding_handle *b,
+				  NTSTATUS status)
+{
+	if (NT_STATUS_EQUAL(status, NT_STATUS_ACCESS_DENIED) ||
+	    NT_STATUS_EQUAL(status, NT_STATUS_RPC_SEC_PKG_ERROR) ||
+	    NT_STATUS_EQUAL(status, NT_STATUS_NETWORK_ACCESS_DENIED)) {
+		invalidate_cm_connection(domain);
+		domain->conn.netlogon_force_reauth = true;
+		return true;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_IO_TIMEOUT) ||
+	    NT_STATUS_EQUAL(status, NT_STATUS_IO_DEVICE_ERROR))
+	{
 		invalidate_cm_connection(domain);
 		/* We invalidated the connection. */
 		return true;
 	}
+
+	if (b != NULL && !dcerpc_binding_handle_is_connected(b)) {
+		invalidate_cm_connection(domain);
+		return true;
+	}
+
 	return false;
 }
 
@@ -64,7 +81,7 @@ NTSTATUS _wbint_LookupSid(struct pipes_s
 
 	status = wb_cache_sid_to_name(domain, p->mem_ctx, r->in.sid,
 				      &dom_name, &name, &type);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (!NT_STATUS_IS_OK(status)) {
 		return status;
 	}
@@ -80,6 +97,7 @@ NTSTATUS _wbint_LookupSids(struct pipes_
 	struct winbindd_domain *domain = wb_child_domain();
 	struct lsa_RefDomainList *domains = r->out.domains;
 	NTSTATUS status;
+	bool retry = false;
 
 	if (domain == NULL) {
 		return NT_STATUS_REQUEST_NOT_ACCEPTED;
@@ -91,6 +109,7 @@ NTSTATUS _wbint_LookupSids(struct pipes_
 	 * and winbindd_ad call into lsa_lookupsids anyway. Caching is
 	 * done at the wbint RPC layer.
 	 */
+again:
 	status = rpc_lookup_sids(p->mem_ctx, domain, r->in.sids,
 				 &domains, &r->out.names);
 
@@ -98,7 +117,11 @@ NTSTATUS _wbint_LookupSids(struct pipes_
 		r->out.domains = domains;
 	}
 
-	reset_cm_connection_on_error(domain, status);
+	if (!retry && reset_cm_connection_on_error(domain, NULL, status)) {
+		retry = true;
+		goto again;
+	}
+
 	return status;
 }
 
@@ -114,7 +137,7 @@ NTSTATUS _wbint_LookupName(struct pipes_
 	status = wb_cache_name_to_sid(domain, p->mem_ctx, r->in.domain,
 				      r->in.name, r->in.flags,
 				      r->out.sid, r->out.type);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	return status;
 }
 
@@ -302,7 +325,7 @@ NTSTATUS _wbint_LookupUserAliases(struct
 					     r->in.sids->sids,
 					     &r->out.rids->num_rids,
 					     &r->out.rids->rids);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	return status;
 }
 
@@ -319,7 +342,7 @@ NTSTATUS _wbint_LookupUserGroups(struct
 	status = wb_cache_lookup_usergroups(domain, p->mem_ctx, r->in.sid,
 					    &r->out.sids->num_sids,
 					    &r->out.sids->sids);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	return status;
 }
 
@@ -334,7 +357,7 @@ NTSTATUS _wbint_QuerySequenceNumber(stru
 	}
 
 	status = wb_cache_sequence_number(domain, r->out.sequence);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	return status;
 }
 
@@ -355,7 +378,7 @@ NTSTATUS _wbint_LookupGroupMembers(struc
 	status = wb_cache_lookup_groupmem(domain, p->mem_ctx, r->in.sid,
 					  r->in.type, &num_names, &sid_mem,
 					  &names, &name_types);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (!NT_STATUS_IS_OK(status)) {
 		return status;
 	}
@@ -419,7 +442,7 @@ NTSTATUS _wbint_QueryGroupList(struct pi
 		status = wb_cache_enum_local_groups(domain, talloc_tos(),
 						    &num_local_groups,
 						    &local_groups);
-		reset_cm_connection_on_error(domain, status);
+		reset_cm_connection_on_error(domain, NULL, status);
 		if (!NT_STATUS_IS_OK(status)) {
 			return status;
 		}
@@ -428,7 +451,7 @@ NTSTATUS _wbint_QueryGroupList(struct pi
 	status = wb_cache_enum_dom_groups(domain, talloc_tos(),
 					  &num_dom_groups,
 					  &dom_groups);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (!NT_STATUS_IS_OK(status)) {
 		return status;
 	}
@@ -501,7 +524,7 @@ NTSTATUS _wbint_QueryUserRidList(struct
 
 	status = wb_cache_query_user_list(domain, p->mem_ctx,
 					  &r->out.rids->rids);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 
 	if (!NT_STATUS_IS_OK(status)) {
 		return status;
@@ -521,6 +544,8 @@ NTSTATUS _wbint_DsGetDcName(struct pipes
 	WERROR werr;
 	unsigned int orig_timeout;
 	struct dcerpc_binding_handle *b;
+	bool retry = false;
+	bool try_dsrgetdcname = false;
 
 	if (domain == NULL) {
 		return dsgetdcname(p->mem_ctx, server_messaging_context(),
@@ -530,9 +555,14 @@ NTSTATUS _wbint_DsGetDcName(struct pipes
 				   r->out.dc_info);
 	}
 
+	if (domain->active_directory) {
+		try_dsrgetdcname = true;
+	}
+
+reconnect:
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
 
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (!NT_STATUS_IS_OK(status)) {
 		DEBUG(10, ("Can't contact the NETLOGON pipe\n"));
 		return status;
@@ -545,7 +575,7 @@ NTSTATUS _wbint_DsGetDcName(struct pipes
 
 	orig_timeout = rpccli_set_timeout(netlogon_pipe, 35000);
 
-	if (domain->active_directory) {
+	if (try_dsrgetdcname) {
 		status = dcerpc_netr_DsRGetDCName(b,
 			p->mem_ctx, domain->dcname,
 			r->in.domain_name, NULL, r->in.domain_guid,
@@ -553,23 +583,14 @@ NTSTATUS _wbint_DsGetDcName(struct pipes
 		if (NT_STATUS_IS_OK(status) && W_ERROR_IS_OK(werr)) {
 			goto done;
 		}
-		if (reset_cm_connection_on_error(domain, status)) {
-			/* Re-initialize. */
-			status = cm_connect_netlogon(domain, &netlogon_pipe);
-
-			reset_cm_connection_on_error(domain, status);
-			if (!NT_STATUS_IS_OK(status)) {
-				DEBUG(10, ("Can't contact the NETLOGON pipe\n"));
-				return status;
-			}
-
-			b = netlogon_pipe->binding_handle;
-
-			/* This call can take a long time - allow the server to time out.
-			   35 seconds should do it. */
-
-			orig_timeout = rpccli_set_timeout(netlogon_pipe, 35000);
+		if (!retry &&
+		    reset_cm_connection_on_error(domain, NULL, status))
+		{
+			retry = true;
+			goto reconnect;
 		}
+		try_dsrgetdcname = false;
+		retry = false;
 	}
 
 	/*
@@ -592,7 +613,10 @@ NTSTATUS _wbint_DsGetDcName(struct pipes
 			r->in.domain_name, &dc_info->dc_unc, &werr);
 	}
 
-	reset_cm_connection_on_error(domain, status);
+	if (!retry && reset_cm_connection_on_error(domain, b, status)) {
+		retry = true;
+		goto reconnect;
+	}
 	if (!NT_STATUS_IS_OK(status)) {
 		DEBUG(10, ("dcerpc_netr_Get[Any]DCName failed: %s\n",
 			   nt_errstr(status)));
@@ -632,7 +656,7 @@ NTSTATUS _wbint_LookupRids(struct pipes_
 	status = wb_cache_rids_to_names(domain, talloc_tos(), r->in.domain_sid,
 					r->in.rids->rids, r->in.rids->num_rids,
 					&domain_name, &names, &types);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (!NT_STATUS_IS_OK(status)) {
 		return status;
 	}
@@ -770,7 +794,7 @@ NTSTATUS _wbint_PingDc(struct pipes_stru
 
 reconnect:
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
         if (!NT_STATUS_IS_OK(status)) {
 		DEBUG(3, ("could not open handle to NETLOGON pipe: %s\n",
 			  nt_errstr(status)));
@@ -796,15 +820,11 @@ reconnect:
 					  logon_server, NETLOGON_CONTROL_QUERY,
 					  2, &info, &werr);
 
-	if (!dcerpc_binding_handle_is_connected(b) && !retry) {
-		DEBUG(10, ("Session might have expired. "
-			   "Reconnect and retry once.\n"));
-		invalidate_cm_connection(domain);
+	if (!retry && reset_cm_connection_on_error(domain, b, status)) {
 		retry = true;
 		goto reconnect;
 	}
 
-	reset_cm_connection_on_error(domain, status);
 	if (!NT_STATUS_IS_OK(status)) {
 		DEBUG(2, ("dcerpc_netr_LogonControl failed: %s\n",
 			nt_errstr(status)));
@@ -828,24 +848,34 @@ NTSTATUS _winbind_DsrUpdateReadOnlyServe
 	struct winbindd_domain *domain;
 	NTSTATUS status;
 	struct rpc_pipe_client *netlogon_pipe;
+	struct dcerpc_binding_handle *b = NULL;
+	bool retry = false;
 
 	domain = wb_child_domain();
 	if (domain == NULL) {
 		return NT_STATUS_REQUEST_NOT_ACCEPTED;
 	}
 
+reconnect:
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
 	if (!NT_STATUS_IS_OK(status)) {
 		DEBUG(3, ("could not open handle to NETLOGON pipe\n"));
 		goto done;
 	}
 
+	b = netlogon_pipe->binding_handle;
+
 	status = netlogon_creds_cli_DsrUpdateReadOnlyServerDnsRecords(domain->conn.netlogon_creds,
 								      netlogon_pipe->binding_handle,
 								      r->in.site_name,
 								      r->in.dns_ttl,
 								      r->in.dns_names);
 
+	if (!retry && reset_cm_connection_on_error(domain, b, status)) {
+		retry = true;
+		goto reconnect;
+	}
+
 	/* Pass back result code - zero for success, other values for
 	   specific failures. */
 
@@ -926,7 +956,7 @@ static WERROR _winbind_LogonControl_REDI
 	invalidate_cm_connection(domain);
 	domain->conn.netlogon_force_reauth = true;
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (NT_STATUS_EQUAL(status, NT_STATUS_DOMAIN_CONTROLLER_NOT_FOUND)) {
 		status = NT_STATUS_NO_LOGON_SERVERS;
 	}
@@ -995,7 +1025,7 @@ static WERROR _winbind_LogonControl_TC_Q
 	}
 
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (NT_STATUS_EQUAL(status, NT_STATUS_DOMAIN_CONTROLLER_NOT_FOUND)) {
 		status = NT_STATUS_NO_LOGON_SERVERS;
 	}
@@ -1174,7 +1204,7 @@ static WERROR _winbind_LogonControl_TC_V
 
 reconnect:
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (NT_STATUS_EQUAL(status, NT_STATUS_DOMAIN_CONTROLLER_NOT_FOUND)) {
 		status = NT_STATUS_NO_LOGON_SERVERS;
 	}
@@ -1204,8 +1234,9 @@ reconnect:
 			status = NT_STATUS_OK;
 		}
 		if (!NT_STATUS_IS_OK(status)) {
-			if (!retry && dcerpc_binding_handle_is_connected(b)) {
-				invalidate_cm_connection(domain);
+			if (!retry &&
+			    reset_cm_connection_on_error(domain, b, status))
+			{
 				retry = true;
 				goto reconnect;
 			}
@@ -1270,8 +1301,7 @@ reconnect:
 		goto verify_return;
 	}
 	if (!NT_STATUS_IS_OK(status)) {
-		if (!retry && dcerpc_binding_handle_is_connected(b)) {
-			invalidate_cm_connection(domain);
+		if (!retry && reset_cm_connection_on_error(domain, b, status)) {
 			retry = true;
 			goto reconnect;
 		}
@@ -1394,7 +1424,7 @@ static WERROR _winbind_LogonControl_CHAN
 
 reconnect:
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (NT_STATUS_EQUAL(status, NT_STATUS_DOMAIN_CONTROLLER_NOT_FOUND)) {
 		status = NT_STATUS_NO_LOGON_SERVERS;
 	}
@@ -1421,8 +1451,7 @@ reconnect:
 				 domain->dcname,
 				 true); /* force */
 	if (!NT_STATUS_IS_OK(status)) {
-		if (!retry && dcerpc_binding_handle_is_connected(b)) {
-			invalidate_cm_connection(domain);
+		if (!retry && reset_cm_connection_on_error(domain, b, status)) {
 			retry = true;
 			goto reconnect;
 		}
@@ -1599,7 +1628,7 @@ WERROR _winbind_GetForestTrustInformatio
 
 reconnect:
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
-	reset_cm_connection_on_error(domain, status);
+	reset_cm_connection_on_error(domain, NULL, status);
 	if (NT_STATUS_EQUAL(status, NT_STATUS_DOMAIN_CONTROLLER_NOT_FOUND)) {
 		status = NT_STATUS_NO_LOGON_SERVERS;
 	}
@@ -1615,8 +1644,7 @@ reconnect:
 							      b, p->mem_ctx,
 							      &new_fti);
 	if (!NT_STATUS_IS_OK(status)) {
-		if (!retry && dcerpc_binding_handle_is_connected(b)) {
-			invalidate_cm_connection(domain);
+		if (!retry && reset_cm_connection_on_error(domain, b, status)) {
 			retry = true;
 			goto reconnect;
 		}
@@ -1710,6 +1738,8 @@ NTSTATUS _winbind_SendToSam(struct pipes
 	struct winbindd_domain *domain;
 	NTSTATUS status;
 	struct rpc_pipe_client *netlogon_pipe;
+	struct dcerpc_binding_handle *b = NULL;
+	bool retry = false;
 
 	DEBUG(5, ("_winbind_SendToSam received\n"));
 	domain = wb_child_domain();
@@ -1717,15 +1747,22 @@ NTSTATUS _winbind_SendToSam(struct pipes
 		return NT_STATUS_REQUEST_NOT_ACCEPTED;
 	}
 
+reconnect:
 	status = cm_connect_netlogon(domain, &netlogon_pipe);
 	if (!NT_STATUS_IS_OK(status)) {
 		DEBUG(3, ("could not open handle to NETLOGON pipe\n"));
 		return status;
 	}
 
+	b = netlogon_pipe->binding_handle;
+
 	status = netlogon_creds_cli_SendToSam(domain->conn.netlogon_creds,
 					      netlogon_pipe->binding_handle,
 					      &r->in.message);
+	if (!retry && reset_cm_connection_on_error(domain, b, status)) {
+		retry = true;
+		goto reconnect;
+	}
 
 	return status;
 }
diff -Npur samba-4.7.7/source3/winbindd/winbindd_getgrent.c samba-4.7.8/source3/winbindd/winbindd_getgrent.c
--- samba-4.7.7/source3/winbindd/winbindd_getgrent.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_getgrent.c	2018-06-21 10:00:46.000000000 +0200
@@ -50,11 +50,6 @@ struct tevent_req *winbindd_getgrent_sen
 
 	DEBUG(3, ("[%5lu]: getgrent\n", (unsigned long)cli->pid));
 
-	if (!lp_winbind_enum_groups()) {
-		tevent_req_nterror(req, NT_STATUS_NO_MORE_ENTRIES);
-		return tevent_req_post(req, ev);
-	}
-
 	if (cli->grent_state == NULL) {
 		tevent_req_nterror(req, NT_STATUS_NO_MORE_ENTRIES);
 		return tevent_req_post(req, ev);
@@ -146,6 +141,7 @@ NTSTATUS winbindd_getgrent_recv(struct t
 	int i;
 
 	if (tevent_req_is_nterror(req, &status)) {
+		TALLOC_FREE(state->cli->grent_state);
 		DEBUG(5, ("getgrent failed: %s\n", nt_errstr(status)));
 		return status;
 	}
@@ -156,6 +152,7 @@ NTSTATUS winbindd_getgrent_recv(struct t
 
 	memberstrings = talloc_array(talloc_tos(), char *, state->num_groups);
 	if (memberstrings == NULL) {
+		TALLOC_FREE(state->cli->grent_state);
 		return NT_STATUS_NO_MEMORY;
 	}
 
@@ -170,6 +167,7 @@ NTSTATUS winbindd_getgrent_recv(struct t
 
 		if (!NT_STATUS_IS_OK(status)) {
 			TALLOC_FREE(memberstrings);
+			TALLOC_FREE(state->cli->grent_state);
 			return status;
 		}
 		TALLOC_FREE(state->members[i]);
@@ -185,6 +183,7 @@ NTSTATUS winbindd_getgrent_recv(struct t
 	result = talloc_realloc(state, state->groups, char,
 				base_memberofs + total_memberlen);
 	if (result == NULL) {
+		TALLOC_FREE(state->cli->grent_state);
 		return NT_STATUS_NO_MEMORY;
 	}
 	state->groups = (struct winbindd_gr *)result;
diff -Npur samba-4.7.7/source3/winbindd/winbindd_getpwent.c samba-4.7.8/source3/winbindd/winbindd_getpwent.c
--- samba-4.7.7/source3/winbindd/winbindd_getpwent.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_getpwent.c	2018-06-21 10:00:46.000000000 +0200
@@ -49,11 +49,6 @@ struct tevent_req *winbindd_getpwent_sen
 
 	DEBUG(3, ("[%5lu]: getpwent\n", (unsigned long)cli->pid));
 
-	if (!lp_winbind_enum_users()) {
-		tevent_req_nterror(req, NT_STATUS_NO_MORE_ENTRIES);
-		return tevent_req_post(req, ev);
-	}
-
 	if (cli->pwent_state == NULL) {
 		tevent_req_nterror(req, NT_STATUS_NO_MORE_ENTRIES);
 		return tevent_req_post(req, ev);
@@ -129,6 +124,7 @@ NTSTATUS winbindd_getpwent_recv(struct t
 	NTSTATUS status;
 
 	if (tevent_req_is_nterror(req, &status)) {
+		TALLOC_FREE(state->cli->pwent_state);
 		DEBUG(5, ("getpwent failed: %s\n", nt_errstr(status)));
 		return status;
 	}
diff -Npur samba-4.7.7/source3/winbindd/winbindd_idmap.c samba-4.7.8/source3/winbindd/winbindd_idmap.c
--- samba-4.7.7/source3/winbindd/winbindd_idmap.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_idmap.c	2018-06-21 10:00:46.000000000 +0200
@@ -34,6 +34,11 @@ struct winbindd_child *idmap_child(void)
 	return &static_idmap_child;
 }
 
+struct dcerpc_binding_handle *idmap_child_handle(void)
+{
+	return static_idmap_child.binding_handle;
+}
+
 static const struct winbindd_child_dispatch_table idmap_dispatch_table[] = {
 	{
 		.name		= "PING",
diff -Npur samba-4.7.7/source3/winbindd/winbindd_locator.c samba-4.7.8/source3/winbindd/winbindd_locator.c
--- samba-4.7.7/source3/winbindd/winbindd_locator.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_locator.c	2018-06-21 10:00:46.000000000 +0200
@@ -34,6 +34,11 @@ struct winbindd_child *locator_child(voi
 	return &static_locator_child;
 }
 
+struct dcerpc_binding_handle *locator_child_handle(void)
+{
+	return static_locator_child.binding_handle;
+}
+
 static const struct winbindd_child_dispatch_table locator_dispatch_table[] = {
 	{
 		.name		= "PING",
diff -Npur samba-4.7.7/source3/winbindd/winbindd_proto.h samba-4.7.8/source3/winbindd/winbindd_proto.h
--- samba-4.7.7/source3/winbindd/winbindd_proto.h	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/winbindd/winbindd_proto.h	2018-06-21 10:00:46.000000000 +0200
@@ -295,7 +295,6 @@ void setup_domain_child(struct winbindd_
 /* The following definitions come from winbindd/winbindd_dual.c  */
 
 struct dcerpc_binding_handle *dom_child_handle(struct winbindd_domain *domain);
-struct winbindd_child *choose_domain_child(struct winbindd_domain *domain);
 
 struct tevent_req *wb_child_request_send(TALLOC_CTX *mem_ctx,
 					 struct tevent_context *ev,
@@ -321,6 +320,11 @@ void winbind_msg_debug(struct messaging_
 			 uint32_t msg_type,
 			 struct server_id server_id,
 			 DATA_BLOB *data);
+void winbind_disconnect_dc_parent(struct messaging_context *msg_ctx,
+				  void *private_data,
+				  uint32_t msg_type,
+				  struct server_id server_id,
+				  DATA_BLOB *data);
 void winbind_msg_offline(struct messaging_context *msg_ctx,
 			 void *private_data,
 			 uint32_t msg_type,
@@ -351,6 +355,11 @@ void winbind_msg_ip_dropped(struct messa
 			    uint32_t msg_type,
 			    struct server_id server_id,
 			    DATA_BLOB *data);
+void winbind_msg_disconnect_dc(struct messaging_context *msg_ctx,
+			       void *private_data,
+			       uint32_t msg_type,
+			       struct server_id server_id,
+			       DATA_BLOB *data);
 void winbind_msg_ip_dropped_parent(struct messaging_context *msg_ctx,
 				   void *private_data,
 				   uint32_t msg_type,
@@ -372,6 +381,7 @@ NTSTATUS winbindd_print_groupmembers(str
 
 void init_idmap_child(void);
 struct winbindd_child *idmap_child(void);
+struct dcerpc_binding_handle *idmap_child_handle(void);
 struct idmap_domain *idmap_find_domain_with_sid(const char *domname,
 						const struct dom_sid *sid);
 const char *idmap_config_const_string(const char *domname, const char *option,
@@ -387,6 +397,7 @@ bool lp_scan_idmap_domains(bool (*fn)(co
 
 void init_locator_child(void);
 struct winbindd_child *locator_child(void);
+struct dcerpc_binding_handle *locator_child_handle(void);
 
 /* The following definitions come from winbindd/winbindd_misc.c  */
 
@@ -959,4 +970,9 @@ NTSTATUS wb_irpc_register(void);
 /* The following definitions come from winbindd/winbindd_reconnect.c  */
 bool reconnect_need_retry(NTSTATUS status, struct winbindd_domain *domain);
 
+/* The following comes from winbindd/winbindd_dual_srv.c */
+bool reset_cm_connection_on_error(struct winbindd_domain *domain,
+				  struct dcerpc_binding_handle *b,
+				  NTSTATUS status);
+
 #endif /*  _WINBINDD_PROTO_H_  */
diff -Npur samba-4.7.7/source3/winbindd/winbindd_reconnect.c samba-4.7.8/source3/winbindd/winbindd_reconnect.c
--- samba-4.7.7/source3/winbindd/winbindd_reconnect.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_reconnect.c	2018-06-21 10:00:46.000000000 +0200
@@ -69,13 +69,7 @@ bool reconnect_need_retry(NTSTATUS statu
 		return false;
 	}
 
-	if (NT_STATUS_EQUAL(status, NT_STATUS_IO_DEVICE_ERROR)) {
-		/*
-		 * RPC call sent on expired session, needs
-		 * reauthentication.
-		 */
-		invalidate_cm_connection(domain);
-	}
+	reset_cm_connection_on_error(domain, NULL, status);
 
 	return true;
 }
diff -Npur samba-4.7.7/source3/winbindd/winbindd_reconnect_ads.c samba-4.7.8/source3/winbindd/winbindd_reconnect_ads.c
--- samba-4.7.7/source3/winbindd/winbindd_reconnect_ads.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_reconnect_ads.c	2018-06-21 10:00:46.000000000 +0200
@@ -31,6 +31,52 @@
 
 extern struct winbindd_methods ads_methods;
 
+static bool ldap_reconnect_need_retry(NTSTATUS status,
+				      struct winbindd_domain *domain)
+{
+	if (NT_STATUS_IS_OK(status)) {
+		return false;
+	}
+
+	if (!NT_STATUS_IS_ERR(status)) {
+		return false;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_NONE_MAPPED)) {
+		return false;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_NO_SUCH_USER)) {
+		return false;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_NO_SUCH_GROUP)) {
+		return false;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_NO_SUCH_ALIAS)) {
+		return false;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_NO_SUCH_MEMBER)) {
+		return false;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_NO_SUCH_DOMAIN)) {
+		return false;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_NO_SUCH_PRIVILEGE)) {
+		return false;
+	}
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_NO_MEMORY)) {
+		return false;
+	}
+
+	return true;
+}
+
 /* List all users */
 static NTSTATUS query_user_list(struct winbindd_domain *domain,
 				TALLOC_CTX *mem_ctx,
@@ -40,7 +86,7 @@ static NTSTATUS query_user_list(struct w
 
 	result = ads_methods.query_user_list(domain, mem_ctx, rids);
 
-	if (reconnect_need_retry(result, domain)) {
+	if (ldap_reconnect_need_retry(result, domain)) {
 		result = ads_methods.query_user_list(domain, mem_ctx, rids);
 	}
 
@@ -58,7 +104,7 @@ static NTSTATUS enum_dom_groups(struct w
 	result = ads_methods.enum_dom_groups(domain, mem_ctx,
 					     num_entries, info);
 
-	if (reconnect_need_retry(result, domain)) {
+	if (ldap_reconnect_need_retry(result, domain)) {
 		result = ads_methods.enum_dom_groups(domain, mem_ctx,
 						     num_entries, info);
 	}
@@ -77,7 +123,7 @@ static NTSTATUS enum_local_groups(struct
 	result = ads_methods.enum_local_groups(domain, mem_ctx,
 					       num_entries, info);
 
-	if (reconnect_need_retry(result, domain)) {
+	if (ldap_reconnect_need_retry(result, domain)) {
 		result = ads_methods.enum_local_groups(domain, mem_ctx,
 						       num_entries, info);
 	}
@@ -165,7 +211,7 @@ static NTSTATUS lookup_usergroups(struct
 	result = ads_methods.lookup_usergroups(domain, mem_ctx, user_sid,
 					       num_groups, user_gids);
 
-	if (reconnect_need_retry(result, domain)) {
+	if (ldap_reconnect_need_retry(result, domain)) {
 		result = ads_methods.lookup_usergroups(domain, mem_ctx,
 						       user_sid, num_groups,
 						       user_gids);
@@ -210,7 +256,7 @@ static NTSTATUS lookup_groupmem(struct w
 					     num_names, sid_mem, names,
 					     name_types);
 
-	if (reconnect_need_retry(result, domain)) {
+	if (ldap_reconnect_need_retry(result, domain)) {
 		result = ads_methods.lookup_groupmem(domain, mem_ctx, group_sid,
 						     type, num_names, sid_mem,
 						     names, name_types);
@@ -226,7 +272,7 @@ static NTSTATUS sequence_number(struct w
 
 	result = ads_methods.sequence_number(domain, seq);
 
-	if (reconnect_need_retry(result, domain)) {
+	if (ldap_reconnect_need_retry(result, domain)) {
 		result = ads_methods.sequence_number(domain, seq);
 	}
 
diff -Npur samba-4.7.7/source3/winbindd/winbindd_samr.c samba-4.7.8/source3/winbindd/winbindd_samr.c
--- samba-4.7.7/source3/winbindd/winbindd_samr.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_samr.c	2018-06-21 10:00:46.000000000 +0200
@@ -28,6 +28,7 @@
 #include "winbindd_rpc.h"
 #include "lib/util_unixsids.h"
 #include "rpc_client/rpc_client.h"
+#include "rpc_client/cli_pipe.h"
 #include "../librpc/gen_ndr/ndr_samr_c.h"
 #include "rpc_client/cli_samr.h"
 #include "../librpc/gen_ndr/ndr_lsa_c.h"
@@ -40,6 +41,20 @@
 #undef DBGC_CLASS
 #define DBGC_CLASS DBGC_WINBIND
 
+/*
+ * The other end of this won't go away easily, so we can trust it
+ *
+ * It is either a long-lived process with the same lifetime as
+ * winbindd or a part of this process
+ */
+struct winbind_internal_pipes {
+	struct rpc_pipe_client *samr_pipe;
+	struct policy_handle samr_domain_hnd;
+	struct rpc_pipe_client *lsa_pipe;
+	struct policy_handle lsa_hnd;
+};
+
+
 NTSTATUS open_internal_samr_conn(TALLOC_CTX *mem_ctx,
 				 struct winbindd_domain *domain,
 				 struct rpc_pipe_client **samr_pipe,
@@ -101,6 +116,96 @@ NTSTATUS open_internal_lsa_conn(TALLOC_C
 	return status;
 }
 
+
+static NTSTATUS open_cached_internal_pipe_conn(
+	struct winbindd_domain *domain,
+	struct rpc_pipe_client **samr_pipe,
+	struct policy_handle *samr_domain_hnd,
+	struct rpc_pipe_client **lsa_pipe,
+	struct policy_handle *lsa_hnd)
+{
+	struct winbind_internal_pipes *internal_pipes = NULL;
+
+	if (domain->private_data == NULL) {
+		TALLOC_CTX *frame = talloc_stackframe();
+		NTSTATUS status;
+
+		internal_pipes = talloc_zero(frame,
+					     struct winbind_internal_pipes);
+
+		status = open_internal_samr_conn(
+			internal_pipes,
+			domain,
+			&internal_pipes->samr_pipe,
+			&internal_pipes->samr_domain_hnd);
+		if (!NT_STATUS_IS_OK(status)) {
+			TALLOC_FREE(frame);
+			return status;
+		}
+
+		status = open_internal_lsa_conn(internal_pipes,
+						&internal_pipes->lsa_pipe,
+						&internal_pipes->lsa_hnd);
+
+		if (!NT_STATUS_IS_OK(status)) {
+			TALLOC_FREE(frame);
+			return status;
+		}
+
+		domain->private_data = talloc_move(domain, &internal_pipes);
+
+		TALLOC_FREE(frame);
+
+	}
+
+	internal_pipes = talloc_get_type_abort(
+		domain->private_data, struct winbind_internal_pipes);
+
+	if (samr_domain_hnd) {
+		*samr_domain_hnd = internal_pipes->samr_domain_hnd;
+	}
+
+	if (samr_pipe) {
+		*samr_pipe = internal_pipes->samr_pipe;
+	}
+
+	if (lsa_hnd) {
+		*lsa_hnd = internal_pipes->lsa_hnd;
+	}
+
+	if (lsa_pipe) {
+		*lsa_pipe = internal_pipes->lsa_pipe;
+	}
+
+	return NT_STATUS_OK;
+}
+
+static bool reset_connection_on_error(struct winbindd_domain *domain,
+				      struct rpc_pipe_client *p,
+				      NTSTATUS status)
+{
+	struct winbind_internal_pipes *internal_pipes = NULL;
+
+	internal_pipes = talloc_get_type_abort(
+		domain->private_data, struct winbind_internal_pipes);
+
+	if (NT_STATUS_EQUAL(status, NT_STATUS_IO_TIMEOUT) ||
+	    NT_STATUS_EQUAL(status, NT_STATUS_IO_DEVICE_ERROR))
+	{
+		TALLOC_FREE(internal_pipes);
+		domain->private_data = NULL;
+		return true;
+	}
+
+	if (!rpccli_is_connected(p)) {
+		TALLOC_FREE(internal_pipes);
+		domain->private_data = NULL;
+		return true;
+	}
+
+	return false;
+}
+
 /*********************************************************************
  SAM specific functions.
 *********************************************************************/
@@ -116,8 +221,8 @@ static NTSTATUS sam_enum_dom_groups(stru
 	struct wb_acct_info *info = NULL;
 	uint32_t num_info = 0;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("sam_enum_dom_groups\n"));
 
@@ -130,20 +235,31 @@ static NTSTATUS sam_enum_dom_groups(stru
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
-		goto error;
+		TALLOC_FREE(tmp_ctx);
+		return status;
 	}
 
-	b = samr_pipe->binding_handle;
-
 	status = rpc_enum_dom_groups(tmp_ctx,
 				     samr_pipe,
 				     &dom_pol,
 				     &num_info,
 				     &info);
+
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
-		goto error;
+		TALLOC_FREE(tmp_ctx);
+		return status;
 	}
 
 	if (pnum_info) {
@@ -154,10 +270,6 @@ static NTSTATUS sam_enum_dom_groups(stru
 		*pinfo = talloc_move(mem_ctx, &info);
 	}
 
-error:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, mem_ctx, &dom_pol, &result);
-	}
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
@@ -171,8 +283,8 @@ static NTSTATUS sam_query_user_list(stru
 	struct policy_handle dom_pol = { 0 };
 	uint32_t *rids = NULL;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("samr_query_user_list\n"));
 
@@ -181,18 +293,26 @@ static NTSTATUS sam_query_user_list(stru
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = samr_pipe->binding_handle;
-
 	status = rpc_query_user_list(tmp_ctx,
 				     samr_pipe,
 				     &dom_pol,
 				     &domain->sid,
 				     &rids);
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
@@ -202,10 +322,6 @@ static NTSTATUS sam_query_user_list(stru
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, mem_ctx, &dom_pol, &result);
-	}
-
 	TALLOC_FREE(rids);
 	TALLOC_FREE(tmp_ctx);
 	return status;
@@ -221,8 +337,8 @@ static NTSTATUS sam_trusted_domains(stru
 	struct netr_DomainTrust *trusts = NULL;
 	uint32_t num_trusts = 0;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("samr: trusted domains\n"));
 
@@ -235,18 +351,27 @@ static NTSTATUS sam_trusted_domains(stru
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_lsa_conn(tmp_ctx, &lsa_pipe, &lsa_policy);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						NULL,
+						NULL,
+						&lsa_pipe,
+						&lsa_policy);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = lsa_pipe->binding_handle;
-
 	status = rpc_trusted_domains(tmp_ctx,
 				     lsa_pipe,
 				     &lsa_policy,
 				     &num_trusts,
 				     &trusts);
+
+	if (!retry && reset_connection_on_error(domain, lsa_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
@@ -257,10 +382,6 @@ static NTSTATUS sam_trusted_domains(stru
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&lsa_policy)) {
-		dcerpc_lsa_Close(b, mem_ctx, &lsa_policy, &result);
-	}
-
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
@@ -284,8 +405,8 @@ static NTSTATUS sam_lookup_groupmem(stru
 	uint32_t *name_types = NULL;
 
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("sam_lookup_groupmem\n"));
 
@@ -304,13 +425,16 @@ static NTSTATUS sam_lookup_groupmem(stru
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = samr_pipe->binding_handle;
-
 	status = rpc_lookup_groupmem(tmp_ctx,
 				     samr_pipe,
 				     &dom_pol,
@@ -323,6 +447,11 @@ static NTSTATUS sam_lookup_groupmem(stru
 				     &names,
 				     &name_types);
 
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (pnum_names) {
 		*pnum_names = num_names;
 	}
@@ -340,10 +469,6 @@ static NTSTATUS sam_lookup_groupmem(stru
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, mem_ctx, &dom_pol, &result);
-	}
-
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
@@ -398,8 +523,8 @@ static NTSTATUS sam_enum_local_groups(st
 	struct wb_acct_info *info = NULL;
 	uint32_t num_info = 0;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("samr: enum local groups\n"));
 
@@ -412,18 +537,27 @@ static NTSTATUS sam_enum_local_groups(st
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = samr_pipe->binding_handle;
-
 	status = rpc_enum_local_groups(mem_ctx,
 				       samr_pipe,
 				       &dom_pol,
 				       &num_info,
+
 				       &info);
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
@@ -437,10 +571,6 @@ static NTSTATUS sam_enum_local_groups(st
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, mem_ctx, &dom_pol, &result);
-	}
-
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
@@ -459,8 +589,8 @@ static NTSTATUS sam_name_to_sid(struct w
 	struct dom_sid sid;
 	enum lsa_SidType type;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("sam_name_to_sid\n"));
 
@@ -469,13 +599,16 @@ static NTSTATUS sam_name_to_sid(struct w
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_lsa_conn(tmp_ctx, &lsa_pipe, &lsa_policy);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						NULL,
+						NULL,
+						&lsa_pipe,
+						&lsa_policy);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = lsa_pipe->binding_handle;
-
 	status = rpc_name_to_sid(tmp_ctx,
 				 lsa_pipe,
 				 &lsa_policy,
@@ -484,6 +617,12 @@ static NTSTATUS sam_name_to_sid(struct w
 				 flags,
 				 &sid,
 				 &type);
+
+	if (!retry && reset_connection_on_error(domain, lsa_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
@@ -496,10 +635,6 @@ static NTSTATUS sam_name_to_sid(struct w
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&lsa_policy)) {
-		dcerpc_lsa_Close(b, mem_ctx, &lsa_policy, &result);
-	}
-
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
@@ -518,8 +653,8 @@ static NTSTATUS sam_sid_to_name(struct w
 	char *name = NULL;
 	enum lsa_SidType type;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("sam_sid_to_name\n"));
 
@@ -543,13 +678,16 @@ static NTSTATUS sam_sid_to_name(struct w
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_lsa_conn(tmp_ctx, &lsa_pipe, &lsa_policy);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						NULL,
+						NULL,
+						&lsa_pipe,
+						&lsa_policy);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = lsa_pipe->binding_handle;
-
 	status = rpc_sid_to_name(tmp_ctx,
 				 lsa_pipe,
 				 &lsa_policy,
@@ -559,6 +697,11 @@ static NTSTATUS sam_sid_to_name(struct w
 				 &name,
 				 &type);
 
+	if (!retry && reset_connection_on_error(domain, lsa_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (ptype) {
 		*ptype = type;
 	}
@@ -572,9 +715,6 @@ static NTSTATUS sam_sid_to_name(struct w
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&lsa_policy)) {
-		dcerpc_lsa_Close(b, mem_ctx, &lsa_policy, &result);
-	}
 
 	TALLOC_FREE(tmp_ctx);
 	return status;
@@ -595,8 +735,8 @@ static NTSTATUS sam_rids_to_names(struct
 	char *domain_name = NULL;
 	char **names = NULL;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("sam_rids_to_names for %s\n", domain->name));
 
@@ -616,13 +756,16 @@ static NTSTATUS sam_rids_to_names(struct
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_lsa_conn(tmp_ctx, &lsa_pipe, &lsa_policy);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						NULL,
+						NULL,
+						&lsa_pipe,
+						&lsa_policy);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = lsa_pipe->binding_handle;
-
 	status = rpc_rids_to_names(tmp_ctx,
 				   lsa_pipe,
 				   &lsa_policy,
@@ -633,6 +776,12 @@ static NTSTATUS sam_rids_to_names(struct
 				   &domain_name,
 				   &names,
 				   &types);
+
+	if (!retry && reset_connection_on_error(domain, lsa_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
@@ -650,10 +799,6 @@ static NTSTATUS sam_rids_to_names(struct
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&lsa_policy)) {
-		dcerpc_lsa_Close(b, mem_ctx, &lsa_policy, &result);
-	}
-
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
@@ -668,6 +813,7 @@ static NTSTATUS sam_lockout_policy(struc
 	TALLOC_CTX *tmp_ctx;
 	NTSTATUS status, result;
 	struct dcerpc_binding_handle *b = NULL;
+	bool retry = false;
 
 	DEBUG(3,("sam_lockout_policy\n"));
 
@@ -676,7 +822,12 @@ static NTSTATUS sam_lockout_policy(struc
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto error;
 	}
@@ -689,6 +840,12 @@ static NTSTATUS sam_lockout_policy(struc
 					     DomainLockoutInformation,
 					     &info,
 					     &result);
+
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto error;
 	}
@@ -700,10 +857,6 @@ static NTSTATUS sam_lockout_policy(struc
 	*lockout_policy = info->info12;
 
 error:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, mem_ctx, &dom_pol, &result);
-	}
-
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
@@ -718,6 +871,7 @@ static NTSTATUS sam_password_policy(stru
 	TALLOC_CTX *tmp_ctx;
 	NTSTATUS status, result;
 	struct dcerpc_binding_handle *b = NULL;
+	bool retry = false;
 
 	DEBUG(3,("sam_password_policy\n"));
 
@@ -726,7 +880,12 @@ static NTSTATUS sam_password_policy(stru
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto error;
 	}
@@ -739,6 +898,12 @@ static NTSTATUS sam_password_policy(stru
 					     DomainPasswordInformation,
 					     &info,
 					     &result);
+
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto error;
 	}
@@ -750,10 +915,6 @@ static NTSTATUS sam_password_policy(stru
 	*passwd_policy = info->info1;
 
 error:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, mem_ctx, &dom_pol, &result);
-	}
-
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
@@ -770,8 +931,8 @@ static NTSTATUS sam_lookup_usergroups(st
 	struct dom_sid *user_grpsids = NULL;
 	uint32_t num_groups = 0;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("sam_lookup_usergroups\n"));
 
@@ -786,13 +947,16 @@ static NTSTATUS sam_lookup_usergroups(st
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = samr_pipe->binding_handle;
-
 	status = rpc_lookup_usergroups(tmp_ctx,
 				       samr_pipe,
 				       &dom_pol,
@@ -800,6 +964,12 @@ static NTSTATUS sam_lookup_usergroups(st
 				       user_sid,
 				       &num_groups,
 				       &user_grpsids);
+
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
@@ -813,9 +983,6 @@ static NTSTATUS sam_lookup_usergroups(st
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, mem_ctx, &dom_pol, &result);
-	}
 
 	TALLOC_FREE(tmp_ctx);
 	return status;
@@ -833,8 +1000,8 @@ static NTSTATUS sam_lookup_useraliases(s
 	uint32_t num_aliases = 0;
 	uint32_t *alias_rids = NULL;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("sam_lookup_useraliases\n"));
 
@@ -847,13 +1014,16 @@ static NTSTATUS sam_lookup_useraliases(s
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = samr_pipe->binding_handle;
-
 	status = rpc_lookup_useraliases(tmp_ctx,
 					samr_pipe,
 					&dom_pol,
@@ -861,6 +1031,12 @@ static NTSTATUS sam_lookup_useraliases(s
 					sids,
 					&num_aliases,
 					&alias_rids);
+
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
@@ -874,9 +1050,6 @@ static NTSTATUS sam_lookup_useraliases(s
 	}
 
 done:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, mem_ctx, &dom_pol, &result);
-	}
 
 	TALLOC_FREE(tmp_ctx);
 	return status;
@@ -890,8 +1063,8 @@ static NTSTATUS sam_sequence_number(stru
 	struct policy_handle dom_pol = { 0 };
 	uint32_t seq = DOM_SEQUENCE_NONE;
 	TALLOC_CTX *tmp_ctx;
-	NTSTATUS status, result;
-	struct dcerpc_binding_handle *b = NULL;
+	NTSTATUS status;
+	bool retry = false;
 
 	DEBUG(3,("samr: sequence number\n"));
 
@@ -904,18 +1077,27 @@ static NTSTATUS sam_sequence_number(stru
 		return NT_STATUS_NO_MEMORY;
 	}
 
-	status = open_internal_samr_conn(tmp_ctx, domain, &samr_pipe, &dom_pol);
+again:
+	status = open_cached_internal_pipe_conn(domain,
+						&samr_pipe,
+						&dom_pol,
+						NULL,
+						NULL);
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
 
-	b = samr_pipe->binding_handle;
-
 	status = rpc_sequence_number(tmp_ctx,
 				     samr_pipe,
 				     &dom_pol,
 				     domain->name,
 				     &seq);
+
+	if (!retry && reset_connection_on_error(domain, samr_pipe, status)) {
+		retry = true;
+		goto again;
+	}
+
 	if (!NT_STATUS_IS_OK(status)) {
 		goto done;
 	}
@@ -923,11 +1105,8 @@ static NTSTATUS sam_sequence_number(stru
 	if (pseq) {
 		*pseq = seq;
 	}
-done:
-	if (b && is_valid_policy_hnd(&dom_pol)) {
-		dcerpc_samr_Close(b, tmp_ctx, &dom_pol, &result);
-	}
 
+done:
 	TALLOC_FREE(tmp_ctx);
 	return status;
 }
diff -Npur samba-4.7.7/source3/winbindd/winbindd_setgrent.c samba-4.7.8/source3/winbindd/winbindd_setgrent.c
--- samba-4.7.7/source3/winbindd/winbindd_setgrent.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_setgrent.c	2018-06-21 10:00:46.000000000 +0200
@@ -39,6 +39,11 @@ struct tevent_req *winbindd_setgrent_sen
 	}
 	TALLOC_FREE(cli->grent_state);
 
+	if (!lp_winbind_enum_groups()) {
+		tevent_req_done(req);
+		return tevent_req_post(req, ev);
+	}
+
 	cli->grent_state = talloc_zero(cli, struct getgrent_state);
 	if (tevent_req_nomem(cli->grent_state, req)) {
 		return tevent_req_post(req, ev);
diff -Npur samba-4.7.7/source3/winbindd/winbindd_setpwent.c samba-4.7.8/source3/winbindd/winbindd_setpwent.c
--- samba-4.7.7/source3/winbindd/winbindd_setpwent.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source3/winbindd/winbindd_setpwent.c	2018-06-21 10:00:46.000000000 +0200
@@ -39,6 +39,11 @@ struct tevent_req *winbindd_setpwent_sen
 	}
 	TALLOC_FREE(cli->pwent_state);
 
+	if (!lp_winbind_enum_users()) {
+		tevent_req_done(req);
+		return tevent_req_post(req, ev);
+	}
+
 	cli->pwent_state = talloc_zero(cli, struct getpwent_state);
 	if (tevent_req_nomem(cli->pwent_state, req)) {
 		return tevent_req_post(req, ev);
diff -Npur samba-4.7.7/source3/winbindd/winbindd_util.c samba-4.7.8/source3/winbindd/winbindd_util.c
--- samba-4.7.7/source3/winbindd/winbindd_util.c	2017-12-22 21:40:58.000000000 +0100
+++ samba-4.7.8/source3/winbindd/winbindd_util.c	2018-06-21 10:00:46.000000000 +0200
@@ -222,6 +222,18 @@ add_trusted_domain_from_tdc(const struct
 		return NULL;
 	}
 
+	domain->queue = tevent_queue_create(domain, "winbind_domain");
+	if (domain->queue == NULL) {
+		TALLOC_FREE(domain);
+		return NULL;
+	}
+
+	domain->binding_handle = wbint_binding_handle(domain, domain, NULL);
+	if (domain->binding_handle == NULL) {
+		TALLOC_FREE(domain);
+		return NULL;
+	}
+
 	domain->name = talloc_strdup(domain, domain_name);
 	if (domain->name == NULL) {
 		TALLOC_FREE(domain);
@@ -653,7 +665,12 @@ enum winbindd_result winbindd_dual_init_
 		[sizeof(state->request->data.init_conn.dcname)-1]='\0';
 
 	if (strlen(state->request->data.init_conn.dcname) > 0) {
-		fstrcpy(domain->dcname, state->request->data.init_conn.dcname);
+		TALLOC_FREE(domain->dcname);
+		domain->dcname = talloc_strdup(domain,
+				state->request->data.init_conn.dcname);
+		if (domain->dcname == NULL) {
+			return WINBINDD_ERROR;
+		}
 	}
 
 	init_dc_connection(domain, false);
diff -Npur samba-4.7.7/source3/wscript samba-4.7.8/source3/wscript
--- samba-4.7.7/source3/wscript	2018-04-17 09:35:02.000000000 +0200
+++ samba-4.7.8/source3/wscript	2018-06-21 10:00:46.000000000 +0200
@@ -96,7 +96,7 @@ def configure(conf):
     # We crash without vfs_default
     required_static_modules.extend(TO_LIST('vfs_default'))
 
-    conf.CHECK_HEADERS('execinfo.h libexc.h libunwind.h netdb.h')
+    conf.CHECK_HEADERS('netdb.h')
     conf.CHECK_HEADERS('linux/falloc.h linux/ioctl.h')
 
     conf.CHECK_FUNCS('getcwd fchown chmod fchmod mknod')
diff -Npur samba-4.7.7/source3/wscript_build samba-4.7.8/source3/wscript_build
--- samba-4.7.7/source3/wscript_build	2018-02-07 09:37:51.000000000 +0100
+++ samba-4.7.8/source3/wscript_build	2018-06-21 10:00:46.000000000 +0200
@@ -410,6 +410,7 @@ bld.SAMBA3_SUBSYSTEM('samba3core',
                           lib/audit.c
                           lib/tevent_wait.c
                           lib/idmap_cache.c
+                          lib/namemap_cache.c
                           lib/util_ea.c
                           lib/background.c
                           lib/cleanupdb.c
diff -Npur samba-4.7.7/source4/heimdal/lib/com_err/compile_et.c samba-4.7.8/source4/heimdal/lib/com_err/compile_et.c
--- samba-4.7.7/source4/heimdal/lib/com_err/compile_et.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source4/heimdal/lib/com_err/compile_et.c	2018-06-21 10:00:46.000000000 +0200
@@ -60,8 +60,8 @@ extern int yydebug = 1;
 #endif
 
 char *filename;
-char hfn[128];
-char cfn[128];
+char hfn[130];
+char cfn[130];
 
 struct error_code *codes = NULL;
 
@@ -128,7 +128,7 @@ static int
 generate_h(void)
 {
     struct error_code *ec;
-    char fn[128];
+    char fn[134];
     FILE *h_file = fopen(hfn, "w");
     char *p;
 
diff -Npur samba-4.7.7/source4/librpc/rpc/dcerpc_roh_channel_in.c samba-4.7.8/source4/librpc/rpc/dcerpc_roh_channel_in.c
--- samba-4.7.7/source4/librpc/rpc/dcerpc_roh_channel_in.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source4/librpc/rpc/dcerpc_roh_channel_in.c	2018-06-21 10:00:46.000000000 +0200
@@ -21,7 +21,7 @@
 */
 
 #include "includes.h"
-#include "lib/tevent/tevent.h"
+#include <tevent.h>
 #include "lib/talloc/talloc.h"
 #include "lib/tsocket/tsocket.h"
 #include "lib/tls/tls.h"
diff -Npur samba-4.7.7/source4/librpc/rpc/dcerpc_roh_channel_out.c samba-4.7.8/source4/librpc/rpc/dcerpc_roh_channel_out.c
--- samba-4.7.7/source4/librpc/rpc/dcerpc_roh_channel_out.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source4/librpc/rpc/dcerpc_roh_channel_out.c	2018-06-21 10:00:46.000000000 +0200
@@ -21,7 +21,7 @@
 */
 
 #include "includes.h"
-#include "lib/tevent/tevent.h"
+#include <tevent.h>
 #include "lib/talloc/talloc.h"
 #include "lib/tsocket/tsocket.h"
 #include "lib/tls/tls.h"
diff -Npur samba-4.7.7/source4/rpc_server/dcerpc_server.c samba-4.7.8/source4/rpc_server/dcerpc_server.c
--- samba-4.7.7/source4/rpc_server/dcerpc_server.c	2017-08-15 09:16:59.000000000 +0200
+++ samba-4.7.8/source4/rpc_server/dcerpc_server.c	2018-06-21 10:00:46.000000000 +0200
@@ -239,7 +239,7 @@ const struct dcesrv_interface *find_inte
 /*
   find the earlier parts of a fragmented call awaiting reassembily
 */
-static struct dcesrv_call_state *dcesrv_find_fragmented_call(struct dcesrv_connection *dce_conn, uint16_t call_id)
+static struct dcesrv_call_state *dcesrv_find_fragmented_call(struct dcesrv_connection *dce_conn, uint32_t call_id)
 {
 	struct dcesrv_call_state *c;
 	for (c=dce_conn->incoming_fragmented_call_list;c;c=c->next) {
diff -Npur samba-4.7.7/source4/selftest/tests.py samba-4.7.8/source4/selftest/tests.py
--- samba-4.7.7/source4/selftest/tests.py	2017-11-02 12:38:36.000000000 +0100
+++ samba-4.7.8/source4/selftest/tests.py	2018-06-21 10:00:46.000000000 +0200
@@ -116,6 +116,13 @@ for env in ["ad_dc_ntvfs", "fl2008r2dc",
         '--option=clientldapsaslwrapping=plain',
         '--sign',
         '--encrypt',
+        '-k yes --option=clientldapsaslwrapping=plain',
+        '-k yes --sign',
+        '-k yes --encrypt',
+        '-k no --option=clientldapsaslwrapping=plain',
+        '-k no --sign --option=ntlmssp_client:ldap_style_send_seal=no',
+        '-k no --sign',
+        '-k no --encrypt',
     ]
 
     for auth_option in auth_options:
diff -Npur samba-4.7.7/source4/torture/smb2/acls.c samba-4.7.8/source4/torture/smb2/acls.c
--- samba-4.7.7/source4/torture/smb2/acls.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source4/torture/smb2/acls.c	2018-06-21 10:00:46.000000000 +0200
@@ -1501,6 +1501,283 @@ done:
 }
 
 /*
+ * This is basically a copy of test_inheritance_flags() with an additional twist
+ * to change the owner of the testfile, verifying that the security descriptor
+ * flags are not altered.
+ */
+static bool test_sd_flags_vs_chown(struct torture_context *tctx,
+				   struct smb2_tree *tree)
+{
+	NTSTATUS status;
+	struct smb2_create io;
+	const char *dname = BASEDIR "\\inheritance";
+	const char *fname1 = BASEDIR "\\inheritance\\testfile";
+	bool ret = true;
+	struct smb2_handle handle = {{0}};
+	struct smb2_handle handle2 = {{0}};
+	int i, j;
+	union smb_fileinfo q;
+	union smb_setfileinfo set;
+	struct security_descriptor *sd, *sd2, *sd_orig=NULL;
+	struct security_descriptor *owner_sd = NULL;
+	const char *owner_sid_string = NULL;
+	struct dom_sid *owner_sid = NULL;
+	struct dom_sid world_sid = global_sid_World;
+	struct {
+		uint32_t parent_set_sd_type; /* 3 options */
+		uint32_t parent_set_ace_inherit; /* 1 option */
+		uint32_t parent_get_sd_type;
+		uint32_t parent_get_ace_inherit;
+		uint32_t child_get_sd_type;
+		uint32_t child_get_ace_inherit;
+	} tflags[16] = {{0}}; /* 2^4 */
+
+	owner_sd = security_descriptor_dacl_create(tctx,
+						   0,
+						   SID_WORLD,
+						   NULL,
+						   NULL);
+	torture_assert_not_null_goto(tctx, owner_sd, ret, done,
+				     "security_descriptor_dacl_create failed\n");
+
+	for (i = 0; i < 15; i++) {
+		torture_comment(tctx, "i=%d:", i);
+
+		if (i & 1) {
+			tflags[i].parent_set_sd_type |=
+			    SEC_DESC_DACL_AUTO_INHERITED;
+			torture_comment(tctx, "AUTO_INHERITED, ");
+		}
+		if (i & 2) {
+			tflags[i].parent_set_sd_type |=
+			    SEC_DESC_DACL_AUTO_INHERIT_REQ;
+			torture_comment(tctx, "AUTO_INHERIT_REQ, ");
+		}
+		if (i & 4) {
+			tflags[i].parent_set_sd_type |=
+			    SEC_DESC_DACL_PROTECTED;
+			torture_comment(tctx, "PROTECTED, ");
+			tflags[i].parent_get_sd_type |=
+			    SEC_DESC_DACL_PROTECTED;
+		}
+		if (i & 8) {
+			tflags[i].parent_set_ace_inherit |=
+			    SEC_ACE_FLAG_INHERITED_ACE;
+			torture_comment(tctx, "INHERITED, ");
+			tflags[i].parent_get_ace_inherit |=
+			    SEC_ACE_FLAG_INHERITED_ACE;
+		}
+
+		if ((tflags[i].parent_set_sd_type &
+		    (SEC_DESC_DACL_AUTO_INHERITED | SEC_DESC_DACL_AUTO_INHERIT_REQ)) ==
+		    (SEC_DESC_DACL_AUTO_INHERITED | SEC_DESC_DACL_AUTO_INHERIT_REQ)) {
+			tflags[i].parent_get_sd_type |=
+			    SEC_DESC_DACL_AUTO_INHERITED;
+			tflags[i].child_get_sd_type |=
+			    SEC_DESC_DACL_AUTO_INHERITED;
+			tflags[i].child_get_ace_inherit |=
+			    SEC_ACE_FLAG_INHERITED_ACE;
+			torture_comment(tctx, "  ... parent is AUTO INHERITED");
+		}
+
+		if (tflags[i].parent_set_ace_inherit &
+		    SEC_ACE_FLAG_INHERITED_ACE) {
+			tflags[i].parent_get_ace_inherit =
+			    SEC_ACE_FLAG_INHERITED_ACE;
+			torture_comment(tctx, "  ... parent ACE is INHERITED");
+		}
+
+		torture_comment(tctx, "\n");
+	}
+
+	if (!smb2_util_setup_dir(tctx, tree, BASEDIR))
+		return false;
+
+	torture_comment(tctx, "TESTING ACL INHERITANCE FLAGS\n");
+
+	ZERO_STRUCT(io);
+	io.level = RAW_OPEN_SMB2;
+	io.in.create_flags = 0;
+	io.in.desired_access = SEC_RIGHTS_FILE_ALL;
+	io.in.create_options = NTCREATEX_OPTIONS_DIRECTORY;
+	io.in.file_attributes = FILE_ATTRIBUTE_DIRECTORY;
+	io.in.share_access = NTCREATEX_SHARE_ACCESS_MASK;
+	io.in.alloc_size = 0;
+	io.in.create_disposition = NTCREATEX_DISP_CREATE;
+	io.in.impersonation_level = NTCREATEX_IMPERSONATION_ANONYMOUS;
+	io.in.security_flags = 0;
+	io.in.fname = dname;
+
+	torture_comment(tctx, "creating initial directory %s\n", dname);
+	status = smb2_create(tree, tctx, &io);
+	CHECK_STATUS(status, NT_STATUS_OK);
+	handle = io.out.file.handle;
+
+	torture_comment(tctx, "getting original sd\n");
+	q.query_secdesc.level = RAW_FILEINFO_SEC_DESC;
+	q.query_secdesc.in.file.handle = handle;
+	q.query_secdesc.in.secinfo_flags = SECINFO_DACL | SECINFO_OWNER;
+	status = smb2_getinfo_file(tree, tctx, &q);
+	CHECK_STATUS(status, NT_STATUS_OK);
+	sd_orig = q.query_secdesc.out.sd;
+
+	owner_sid = sd_orig->owner_sid;
+	owner_sid_string = dom_sid_string(tctx, sd_orig->owner_sid);
+	torture_comment(tctx, "owner_sid is %s\n", owner_sid_string);
+
+	for (i=0; i < ARRAY_SIZE(tflags); i++) {
+		torture_comment(tctx, "setting a new sd on directory, pass #%d\n", i);
+
+		sd = security_descriptor_dacl_create(tctx,
+						tflags[i].parent_set_sd_type,
+						NULL, NULL,
+						owner_sid_string,
+						SEC_ACE_TYPE_ACCESS_ALLOWED,
+						SEC_FILE_WRITE_DATA | SEC_STD_WRITE_DAC,
+						SEC_ACE_FLAG_OBJECT_INHERIT |
+						SEC_ACE_FLAG_CONTAINER_INHERIT |
+						tflags[i].parent_set_ace_inherit,
+						SID_WORLD,
+						SEC_ACE_TYPE_ACCESS_ALLOWED,
+						SEC_FILE_ALL | SEC_STD_ALL,
+						0,
+						NULL);
+		set.set_secdesc.level = RAW_SFILEINFO_SEC_DESC;
+		set.set_secdesc.in.file.handle = handle;
+		set.set_secdesc.in.secinfo_flags = SECINFO_DACL;
+		set.set_secdesc.in.sd = sd;
+		status = smb2_setinfo_file(tree, &set);
+		CHECK_STATUS(status, NT_STATUS_OK);
+
+		/*
+		 * Check DACL we just set, except change the bits to what they
+		 * should be.
+		 */
+		torture_comment(tctx, "  checking new sd\n");
+
+		/* REQ bit should always be false. */
+		sd->type &= ~SEC_DESC_DACL_AUTO_INHERIT_REQ;
+
+		if ((tflags[i].parent_get_sd_type & SEC_DESC_DACL_AUTO_INHERITED) == 0)
+			sd->type &= ~SEC_DESC_DACL_AUTO_INHERITED;
+
+		q.query_secdesc.in.file.handle = handle;
+		q.query_secdesc.in.secinfo_flags = SECINFO_DACL;
+		status = smb2_getinfo_file(tree, tctx, &q);
+		CHECK_STATUS(status, NT_STATUS_OK);
+		CHECK_SECURITY_DESCRIPTOR(q.query_secdesc.out.sd, sd);
+
+		/* Create file. */
+		torture_comment(tctx, "  creating file %s\n", fname1);
+		io.in.fname = fname1;
+		io.in.create_options = 0;
+		io.in.file_attributes = FILE_ATTRIBUTE_NORMAL;
+		io.in.desired_access = SEC_RIGHTS_FILE_ALL;
+		io.in.create_disposition = NTCREATEX_DISP_CREATE;
+		status = smb2_create(tree, tctx, &io);
+		CHECK_STATUS(status, NT_STATUS_OK);
+		handle2 = io.out.file.handle;
+		CHECK_ACCESS_FLAGS(handle2, SEC_RIGHTS_FILE_ALL);
+
+		q.query_secdesc.in.file.handle = handle2;
+		q.query_secdesc.in.secinfo_flags = SECINFO_DACL | SECINFO_OWNER;
+		status = smb2_getinfo_file(tree, tctx, &q);
+		CHECK_STATUS(status, NT_STATUS_OK);
+
+		torture_comment(tctx, "  checking sd on file %s\n", fname1);
+		sd2 = security_descriptor_dacl_create(tctx,
+						 tflags[i].child_get_sd_type,
+						 owner_sid_string, NULL,
+						 owner_sid_string,
+						 SEC_ACE_TYPE_ACCESS_ALLOWED,
+						 SEC_FILE_WRITE_DATA | SEC_STD_WRITE_DAC,
+						 tflags[i].child_get_ace_inherit,
+						 NULL);
+		CHECK_SECURITY_DESCRIPTOR(q.query_secdesc.out.sd, sd2);
+
+		/*
+		 * Set new sd on file ... prove that the bits have nothing to
+		 * do with the parents bits when manually setting an ACL. The
+		 * _AUTO_INHERITED bit comes directly from the ACL set.
+		 */
+		for (j = 0; j < ARRAY_SIZE(tflags); j++) {
+			torture_comment(tctx, "  setting new file sd, pass #%d\n", j);
+
+			/* Change sd type. */
+			sd2->type &= ~(SEC_DESC_DACL_AUTO_INHERITED |
+			    SEC_DESC_DACL_AUTO_INHERIT_REQ |
+			    SEC_DESC_DACL_PROTECTED);
+			sd2->type |= tflags[j].parent_set_sd_type;
+
+			sd2->dacl->aces[0].flags &=
+			    ~SEC_ACE_FLAG_INHERITED_ACE;
+			sd2->dacl->aces[0].flags |=
+			    tflags[j].parent_set_ace_inherit;
+
+			set.set_secdesc.level = RAW_SFILEINFO_SEC_DESC;
+			set.set_secdesc.in.file.handle = handle2;
+			set.set_secdesc.in.secinfo_flags = SECINFO_DACL;
+			set.set_secdesc.in.sd = sd2;
+			status = smb2_setinfo_file(tree, &set);
+			CHECK_STATUS(status, NT_STATUS_OK);
+
+			/* Check DACL we just set. */
+			sd2->type &= ~SEC_DESC_DACL_AUTO_INHERIT_REQ;
+			if ((tflags[j].parent_get_sd_type & SEC_DESC_DACL_AUTO_INHERITED) == 0)
+				sd2->type &= ~SEC_DESC_DACL_AUTO_INHERITED;
+
+			q.query_secdesc.in.file.handle = handle2;
+			q.query_secdesc.in.secinfo_flags = SECINFO_DACL | SECINFO_OWNER;
+			status = smb2_getinfo_file(tree, tctx, &q);
+			CHECK_STATUS(status, NT_STATUS_OK);
+
+			CHECK_SECURITY_DESCRIPTOR(q.query_secdesc.out.sd, sd2);
+
+			/*
+			 * Check that changing ownder doesn't affect SD flags.
+			 *
+			 * Do this by first changing ownder to world and then
+			 * back to the original ownder. Afterwards compare SD,
+			 * should be the same.
+			 */
+			owner_sd->owner_sid = &world_sid;
+			set.set_secdesc.level = RAW_SFILEINFO_SEC_DESC;
+			set.set_secdesc.in.file.handle = handle2;
+			set.set_secdesc.in.secinfo_flags = SECINFO_OWNER;
+			set.set_secdesc.in.sd = owner_sd;
+			status = smb2_setinfo_file(tree, &set);
+			CHECK_STATUS(status, NT_STATUS_OK);
+
+			owner_sd->owner_sid = owner_sid;
+			set.set_secdesc.level = RAW_SFILEINFO_SEC_DESC;
+			set.set_secdesc.in.file.handle = handle2;
+			set.set_secdesc.in.secinfo_flags = SECINFO_OWNER;
+			set.set_secdesc.in.sd = owner_sd;
+			status = smb2_setinfo_file(tree, &set);
+			CHECK_STATUS(status, NT_STATUS_OK);
+
+			q.query_secdesc.in.file.handle = handle2;
+			q.query_secdesc.in.secinfo_flags = SECINFO_DACL | SECINFO_OWNER;
+			status = smb2_getinfo_file(tree, tctx, &q);
+			CHECK_STATUS(status, NT_STATUS_OK);
+
+			CHECK_SECURITY_DESCRIPTOR(q.query_secdesc.out.sd, sd2);
+			torture_assert_goto(tctx, ret, ret, done, "CHECK_SECURITY_DESCRIPTOR failed\n");
+		}
+
+		smb2_util_close(tree, handle2);
+		smb2_util_unlink(tree, fname1);
+	}
+
+done:
+	smb2_util_close(tree, handle);
+	smb2_deltree(tree, BASEDIR);
+	smb2_tdis(tree);
+	smb2_logoff(tree->session);
+	return ret;
+}
+
+/*
   test dynamic acl inheritance
   Note: This test was copied from raw/acls.c.
 */
@@ -2098,6 +2375,7 @@ struct torture_suite *torture_smb2_acls_
 	torture_suite_add_1smb2_test(suite, "OWNER", test_owner_bits);
 	torture_suite_add_1smb2_test(suite, "INHERITANCE", test_inheritance);
 	torture_suite_add_1smb2_test(suite, "INHERITFLAGS", test_inheritance_flags);
+	torture_suite_add_1smb2_test(suite, "SDFLAGSVSCHOWN", test_sd_flags_vs_chown);
 	torture_suite_add_1smb2_test(suite, "DYNAMIC", test_inheritance_dynamic);
 #if 0
 	/* XXX This test does not work against XP or Vista. */
diff -Npur samba-4.7.7/source4/torture/smb2/rename.c samba-4.7.8/source4/torture/smb2/rename.c
--- samba-4.7.7/source4/torture/smb2/rename.c	2017-07-04 12:05:26.000000000 +0200
+++ samba-4.7.8/source4/torture/smb2/rename.c	2018-06-21 10:00:46.000000000 +0200
@@ -22,7 +22,7 @@
 #include "includes.h"
 #include "libcli/smb2/smb2.h"
 #include "libcli/smb2/smb2_calls.h"
-#include "lib/tevent/tevent.h"
+#include <tevent.h>
 #include "lib/util/tevent_ntstatus.h"
 
 #include "torture/torture.h"
